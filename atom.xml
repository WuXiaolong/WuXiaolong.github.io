<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>吴小龙同學</title>
  
  <subtitle>党要我帅，我不得不帅！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://wuxiaolong.github.io/"/>
  <updated>2021-12-19T10:42:36.650Z</updated>
  <id>http://wuxiaolong.github.io/</id>
  
  <author>
    <name>吴小龙同學</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如何实现一个 System Services？</title>
    <link href="http://wuxiaolong.github.io/2021/04/07/SystemServices/"/>
    <id>http://wuxiaolong.github.io/2021/04/07/SystemServices/</id>
    <published>2021-04-07T12:42:58.000Z</published>
    <updated>2021-12-19T10:42:36.650Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://img-blog.csdnimg.cn/img_convert/06e1e351b5895734ba6c3a1939480f43.png" alt=""></p><p>《<a href="https://mp.weixin.qq.com/s/Yub-0az8o5XSSfo68nLq2A" target="_blank" rel="noopener">Android 系统开发做什么？</a>》写到 Android System Services 是专注于特定功能的模块化组件，应用框架 API 所提供的功能可与系统服务通信，以访问底层硬件。Android System Services 是如何写的？来以 DisplayManagerService 为例，具体来看看。</p><h2 id="System-Service-是如何写的？"><a href="#System-Service-是如何写的？" class="headerlink" title="System Service 是如何写的？"></a>System Service 是如何写的？</h2><a id="more"></a><h3 id="应用调用"><a href="#应用调用" class="headerlink" title="应用调用"></a>应用调用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">DisplayManager dm = getSystemService(DisplayManager.class);</div><div class="line">dm.setTemporaryBrightness(<span class="number">0.0f</span>);</div><div class="line">Settings.System.putInt(getContentResolver(), Settings.System.SCREEN_BRIGHTNESS, <span class="number">0</span>);</div></pre></td></tr></table></figure><p>看下 getSystemService 方法，在 Context 类里。</p><h3 id="Context-getSystemService"><a href="#Context-getSystemService" class="headerlink" title="Context#getSystemService"></a>Context#getSystemService</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="meta">@Nullable</span> &lt;T&gt; <span class="function">T <span class="title">getSystemService</span><span class="params">(@NonNull Class&lt;T&gt; serviceClass)</span> </span>&#123;</div><div class="line">    <span class="comment">// Because subclasses may override getSystemService(String) we cannot</span></div><div class="line">    <span class="comment">// perform a lookup by class alone.  We must first map the class to its</span></div><div class="line">    <span class="comment">// service name then invoke the string-based method.</span></div><div class="line">    String serviceName = getSystemServiceName(serviceClass);</div><div class="line">    <span class="keyword">return</span> serviceName != <span class="keyword">null</span> ? (T)getSystemService(serviceName) : <span class="keyword">null</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="meta">@Nullable</span> <span class="function">String <span class="title">getSystemServiceName</span><span class="params">(@NonNull Class&lt;?&gt; serviceClass)</span></span>;</div></pre></td></tr></table></figure><h3 id="ContextImpl-getSystemService"><a href="#ContextImpl-getSystemService" class="headerlink" title="ContextImpl#getSystemService"></a>ContextImpl#getSystemService</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getSystemServiceName</span><span class="params">(Class&lt;?&gt; serviceClass)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> SystemServiceRegistry.getSystemServiceName(serviceClass);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>继续跟 SystemServiceRegistry.getSystemServiceName。</p><h3 id="SystemServiceRegistry-getSystemServiceName"><a href="#SystemServiceRegistry-getSystemServiceName" class="headerlink" title="SystemServiceRegistry#getSystemServiceName"></a>SystemServiceRegistry#getSystemServiceName</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getSystemServiceName</span><span class="params">(Class&lt;?&gt; serviceClass)</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (serviceClass == <span class="keyword">null</span>) &#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">final</span> String serviceName = SYSTEM_SERVICE_NAMES.get(serviceClass);</div><div class="line">    <span class="keyword">if</span> (sEnableServiceNotFoundWtf &amp;&amp; serviceName == <span class="keyword">null</span>) &#123;</div><div class="line">        <span class="comment">// This should be a caller bug.</span></div><div class="line">        Slog.wtf(TAG, <span class="string">"Unknown manager requested: "</span> + serviceClass.getCanonicalName());</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> serviceName;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>什么时候 registerService 的？</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">SystemServiceRegistry</span> </span>&#123;</div><div class="line">    <span class="keyword">static</span> &#123;</div><div class="line">        registerService(Context.DISPLAY_SERVICE, DisplayManager.class,</div><div class="line">        <span class="keyword">new</span> CachedServiceFetcher&lt;DisplayManager&gt;() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> DisplayManager <span class="title">createService</span><span class="params">(ContextImpl ctx)</span> </span>&#123;</div><div class="line">                <span class="keyword">return</span> <span class="keyword">new</span> DisplayManager(ctx.getOuterContext());</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">private</span> <span class="keyword">static</span> &lt;T&gt; <span class="function"><span class="keyword">void</span> <span class="title">registerService</span><span class="params">(@NonNull String serviceName,</span></span></div><div class="line">        @NonNull Class&lt;T&gt; serviceClass, @NonNull ServiceFetcher&lt;T&gt; serviceFetcher) &#123;</div><div class="line">    SYSTEM_SERVICE_NAMES.put(serviceClass, serviceName);</div><div class="line">    SYSTEM_SERVICE_FETCHERS.put(serviceName, serviceFetcher);</div><div class="line">    SYSTEM_SERVICE_CLASS_NAMES.put(serviceName, serviceClass.getSimpleName());</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>结合上面的分析代码可以知道 getSystemService(DisplayManager.class)得到的是一个 DisplayManager 的实例。</p><p>接下来看 dm.setTemporaryBrightness 方法。</p><h3 id="DisplayManager-setTemporaryBrightness"><a href="#DisplayManager-setTemporaryBrightness" class="headerlink" title="DisplayManager#setTemporaryBrightness"></a>DisplayManager#setTemporaryBrightness</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTemporaryBrightness</span><span class="params">(<span class="keyword">float</span> brightness)</span> </span>&#123;</div><div class="line">    mGlobal.setTemporaryBrightness(brightness);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>mGlobal 是 DisplayManagerGlobal 对象。</p><h3 id="DisplayManagerGlobal-setTemporaryBrightness"><a href="#DisplayManagerGlobal-setTemporaryBrightness" class="headerlink" title="DisplayManagerGlobal#setTemporaryBrightness"></a>DisplayManagerGlobal#setTemporaryBrightness</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> <span class="keyword">final</span> IDisplayManager mDm;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="title">DisplayManagerGlobal</span><span class="params">(IDisplayManager dm)</span> </span>&#123;</div><div class="line">    mDm = dm;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> DisplayManagerGlobal <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">synchronized</span> (DisplayManagerGlobal.class) &#123;</div><div class="line">        <span class="keyword">if</span> (sInstance == <span class="keyword">null</span>) &#123;</div><div class="line">            IBinder b = ServiceManager.getService(Context.DISPLAY_SERVICE);</div><div class="line">            <span class="keyword">if</span> (b != <span class="keyword">null</span>) &#123;</div><div class="line">                sInstance = <span class="keyword">new</span> DisplayManagerGlobal(IDisplayManager.Stub.asInterface(b));</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> sInstance;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTemporaryBrightness</span><span class="params">(<span class="keyword">float</span> brightness)</span> </span>&#123;</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        mDm.setTemporaryBrightness(brightness);</div><div class="line">    &#125; <span class="keyword">catch</span> (RemoteException ex) &#123;</div><div class="line">        <span class="keyword">throw</span> ex.rethrowFromSystemServer();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>mDm 是 IDisplayManager 对象，初始化在<code>IDisplayManager.Stub.asInterface(ServiceManager.getService(Context.DISPLAY_SERVICE))</code>，看到 IDisplayManager 是一个 aidl 文件：frameworks/base/core/java/android/hardware/display/IDisplayManager.aidl，AIDL (Android Interface Definition Language) 是 Android 中的接口定义文件，为系统提供了一种简单跨进程通信方法，先不管 AIDL。</p><h3 id="IDisplayManager"><a href="#IDisplayManager" class="headerlink" title="IDisplayManager"></a>IDisplayManager</h3><p>IDisplayManager 定义了包括 setTemporaryBrightness 的几个接口。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">interface</span> <span class="title">IDisplayManager</span> </span>&#123;</div><div class="line">    <span class="comment">//……</span></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">registerCallback</span><span class="params">(in IDisplayManagerCallback callback)</span></span>;</div><div class="line"></div><div class="line">    <span class="comment">// Requires CONFIGURE_WIFI_DISPLAY permission.</span></div><div class="line">    <span class="comment">// The process must have previously registered a callback.</span></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">startWifiDisplayScan</span><span class="params">()</span></span>;</div><div class="line"></div><div class="line">    <span class="comment">// Requires CONFIGURE_WIFI_DISPLAY permission.</span></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">stopWifiDisplayScan</span><span class="params">()</span></span>;</div><div class="line"></div><div class="line">    <span class="comment">// Requires CONFIGURE_WIFI_DISPLAY permission.</span></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">connectWifiDisplay</span><span class="params">(String address)</span></span>;</div><div class="line"></div><div class="line">    <span class="comment">// No permissions required.</span></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">disconnectWifiDisplay</span><span class="params">()</span></span>;</div><div class="line"></div><div class="line">    <span class="comment">// Temporarily sets the display brightness.</span></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setTemporaryBrightness</span><span class="params">(<span class="keyword">float</span> brightness)</span></span>;</div><div class="line">    <span class="comment">//……</span></div><div class="line">&#125;</div></pre></td></tr></table></figure><p>IDisplayManager 只是接口，需要找下哪里实现了它，搜索是在 BinderService，BinderService 是 DisplayManagerService 内部类。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">BinderService</span> <span class="keyword">extends</span> <span class="title">IDisplayManager</span>.<span class="title">Stub</span> </span>&#123;</div><div class="line">    <span class="meta">@Override</span> <span class="comment">// Binder call</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTemporaryBrightness</span><span class="params">(<span class="keyword">float</span> brightness)</span> </span>&#123;</div><div class="line">        mContext.enforceCallingOrSelfPermission(</div><div class="line">                Manifest.permission.CONTROL_DISPLAY_BRIGHTNESS,</div><div class="line">                <span class="string">"Permission required to set the display's brightness"</span>);</div><div class="line">        <span class="keyword">final</span> <span class="keyword">long</span> token = Binder.clearCallingIdentity();</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="keyword">synchronized</span> (mSyncRoot) &#123;</div><div class="line">                mDisplayPowerController.setTemporaryBrightness(brightness);</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">finally</span> &#123;</div><div class="line">            Binder.restoreCallingIdentity(token);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><code>mDisplayPowerController.setTemporaryBrightness(brightness)</code>后面经过一系列调用会到 LightsService#setLight_native，通过 JNI 调用到 native 层，调用底层进行背光调节，关于背光调节后面文章再细讲。</p><h3 id="SystemServer"><a href="#SystemServer" class="headerlink" title="SystemServer"></a>SystemServer</h3><p>DisplayManagerService 是继承了 SystemService，DisplayManagerService 是怎么注册为系统服务的呢？在 SystemServer 里面：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">startBootstrapServices</span><span class="params">(@NonNull TimingsTraceAndSlog t)</span> </span>&#123;</div><div class="line">    t.traceBegin(<span class="string">"StartDisplayManager"</span>);</div><div class="line">    <span class="comment">//开启DisplayManagerService</span></div><div class="line">    mDisplayManagerService = mSystemServiceManager.startService(DisplayManagerService.class);</div><div class="line">    t.traceEnd();</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">startOtherServices</span><span class="params">(@NonNull TimingsTraceAndSlog t)</span> </span>&#123;</div><div class="line">    <span class="comment">//通知服务系统启动完成</span></div><div class="line">    t.traceBegin(<span class="string">"MakeDisplayManagerServiceReady"</span>);</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        <span class="comment">// <span class="doctag">TODO:</span> use boot phase and communicate these flags some other way</span></div><div class="line">        mDisplayManagerService.systemReady(safeMode, mOnlyCore);</div><div class="line">    &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">        reportWtf(<span class="string">"making Display Manager Service ready"</span>, e);</div><div class="line">    &#125;</div><div class="line">    t.traceEnd();</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>看完 DisplayManagerService 是怎么写的，不妨模仿写个。<br>所谓看着代码，感觉还是挺简单的，实际操作起来，各种编译报错……</p><h2 id="如何写个-System-Service"><a href="#如何写个-System-Service" class="headerlink" title="如何写个 System Service"></a>如何写个 System Service</h2><p>先上图：</p><p><img src="https://smartloong.oss-cn-shanghai.aliyuncs.com/SystemServices.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">@startuml</div><div class="line"></div><div class="line"></div><div class="line">title \n如何实现一个 System Services？\n</div><div class="line"></div><div class="line"></div><div class="line">skinparam backgroundColor #EEEBDC</div><div class="line">skinparam handwritten true</div><div class="line"></div><div class="line">hide empty description</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">state 1.编写AIDL文件</div><div class="line"></div><div class="line">1.编写AIDL文件 --&gt; 2.Context定义变量</div><div class="line">1.编写AIDL文件:IWuXiaolongManager.aidl</div><div class="line">2.Context定义变量 --&gt; 3.编写系统服务类</div><div class="line">2.Context定义变量:String WUXIAOLONG_SERVICE = &quot;wuxiaolong&quot;</div><div class="line">note left of 2.Context定义变量 : 执行make update-api，\n更新接口</div><div class="line">3.编写系统服务类 --&gt; 4.注册系统服务类</div><div class="line">3.编写系统服务类:WuXiaolongManagerService.java</div><div class="line">4.注册系统服务类--&gt; 5.编写Manager类</div><div class="line">note right of 4.注册系统服务类</div><div class="line">  涉及SELinux权限</div><div class="line">end note</div><div class="line">5.编写Manager类 --&gt; 6.注册Manager</div><div class="line">note right of 5.编写Manager类</div><div class="line">  1.写成单例</div><div class="line">  2.@Nullable注解</div><div class="line">end note</div><div class="line">5.编写Manager类:WuXiaolongManager.java</div><div class="line">6.注册Manager --&gt; 7.应用调用</div><div class="line"></div><div class="line"></div><div class="line">@enduml</div></pre></td></tr></table></figure><h3 id="1-编写-AIDL-文件"><a href="#1-编写-AIDL-文件" class="headerlink" title="1.编写 AIDL 文件"></a>1.编写 AIDL 文件</h3><p>新建 frameworks/base/core/java/android/hardware/wuxiaolong/IWuXiaolongManager.aidl，内容如下:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> android.hardware.wuxiaolong;</div><div class="line"><span class="comment">/** <span class="doctag">@hide</span> */</span></div><div class="line"><span class="class"><span class="keyword">interface</span> <span class="title">IWuXiaolongManager</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="function">String <span class="title">getName</span><span class="params">()</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="2-Context-定义变量"><a href="#2-Context-定义变量" class="headerlink" title="2.Context 定义变量"></a>2.Context 定义变量</h3><p>在 Context 里定义一个代表 wuxiaolong 服务的字符串<br>frameworks/base/core/java/android/content/Context.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String WUXIAOLONG_SERVICE = <span class="string">"wuxiaolong"</span>;</div></pre></td></tr></table></figure><h3 id="3-编写系统服务"><a href="#3-编写系统服务" class="headerlink" title="3.编写系统服务"></a>3.编写系统服务</h3><p>frameworks/base/services/core/java/com/android/server/wuxiaolong/WuXiaolongManagerService.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.android.server.wuxiaolong;</div><div class="line"></div><div class="line"><span class="keyword">import</span> android.content.Context;</div><div class="line"><span class="keyword">import</span> android.hardware.wuxiaolong.IWuXiaolongManager;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WuXiaolongManagerService</span> <span class="keyword">extends</span> <span class="title">IWuXiaolongManager</span>.<span class="title">Stub</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Context mContext;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">WuXiaolongManagerService</span><span class="params">(Context context)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>();</div><div class="line">        mContext = context;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</div><div class="line">        String name = <span class="string">"WuXiaolong.."</span>;</div><div class="line">        <span class="keyword">return</span> name;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="4-注册系统服务"><a href="#4-注册系统服务" class="headerlink" title="4.注册系统服务"></a>4.注册系统服务</h3><p>frameworks/base/services/java/com/android/server/SystemServer.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> com.android.server.wuxiaolong.WuXiaolongManagerService;</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">startOtherServices</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="comment">// 部分代码省略...</span></div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        android.util.Log.d(<span class="string">"wxl"</span>,<span class="string">"SystemServer WuXiaolongManagerService"</span>);</div><div class="line">        ServiceManager.addService(Context.WUXIAOLONG_SERVICE, <span class="keyword">new</span> WuXiaolongManagerService(context));</div><div class="line">    &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">        reportWtf(<span class="string">"starting WuXiaolongManagerService"</span>, e);</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// 部分代码省略...</span></div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="5-编写-Manager-类"><a href="#5-编写-Manager-类" class="headerlink" title="5.编写 Manager 类"></a>5.编写 Manager 类</h3><p>frameworks/base/core/java/android/hardware/wuxiaolong/WuXiaolongManager.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">package</span> android.hardware.wuxiaolong;</div><div class="line"></div><div class="line"><span class="keyword">import</span> android.os.IBinder;</div><div class="line"><span class="keyword">import</span> android.os.ServiceManager;</div><div class="line"><span class="keyword">import</span> android.hardware.wuxiaolong.IWuXiaolongManager;</div><div class="line"><span class="keyword">import</span> android.content.Context;</div><div class="line"><span class="keyword">import</span> android.os.RemoteException;</div><div class="line"><span class="keyword">import</span> android.compat.annotation.UnsupportedAppUsage;</div><div class="line"><span class="keyword">import</span> android.annotation.Nullable;</div><div class="line"><span class="keyword">import</span> android.os.ServiceManager.ServiceNotFoundException;</div><div class="line"><span class="keyword">import</span> android.annotation.SystemService;</div><div class="line"></div><div class="line"><span class="meta">@SystemService</span>(Context.WUXIAOLONG_SERVICE)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WuXiaolongManager</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> WuXiaolongManager sInstance;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> IWuXiaolongManager mService;</div><div class="line">    <span class="keyword">private</span> Context mContext;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * <span class="doctag">@hide</span></div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">WuXiaolongManager</span><span class="params">(IWuXiaolongManager iWuXiaolongManager)</span> </span>&#123;</div><div class="line">        mService = iWuXiaolongManager;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Gets an instance of the WuXiaolong manager.</div><div class="line">     *</div><div class="line">     * <span class="doctag">@return</span> The WuXiaolong manager instance.</div><div class="line">     * <span class="doctag">@hide</span></div><div class="line">     */</div><div class="line">    <span class="meta">@UnsupportedAppUsage</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> WuXiaolongManager <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</div><div class="line">        android.util.Log.d(<span class="string">"wxl"</span>, <span class="string">"WuXiaolongManager getInstance"</span>);</div><div class="line">        <span class="keyword">synchronized</span> (WuXiaolongManager.class) &#123;</div><div class="line">            <span class="keyword">if</span> (sInstance == <span class="keyword">null</span>) &#123;</div><div class="line"></div><div class="line">                <span class="keyword">try</span> &#123;</div><div class="line">                    IBinder b = ServiceManager.getServiceOrThrow(Context.WUXIAOLONG_SERVICE);</div><div class="line">                    sInstance = <span class="keyword">new</span> WuXiaolongManager(IWuXiaolongManager.Stub</div><div class="line">                            .asInterface(ServiceManager.getServiceOrThrow(Context.WUXIAOLONG_SERVICE)));</div><div class="line">                &#125; <span class="keyword">catch</span> (ServiceNotFoundException e) &#123;</div><div class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(e);</div><div class="line">                &#125;</div><div class="line"></div><div class="line">            &#125;</div><div class="line">            <span class="keyword">return</span> sInstance;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Nullable</span></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</div><div class="line">        android.util.Log.d(<span class="string">"wxl"</span>, <span class="string">"WuXiaolongManager getName"</span>);</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="keyword">return</span> mService.getName();</div><div class="line">        &#125; <span class="keyword">catch</span> (RemoteException e) &#123;</div><div class="line">            <span class="keyword">throw</span> e.rethrowFromSystemServer();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="6-注册-Manager"><a href="#6-注册-Manager" class="headerlink" title="6.注册 Manager"></a>6.注册 Manager</h3><p>frameworks/base/core/java/android/app/SystemServiceRegistry.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> android.hardware.wuxiaolong.WuXiaolongManager;</div><div class="line"><span class="keyword">static</span> &#123;</div><div class="line">    registerService(Context.WUXIAOLONG_SERVICE, WuXiaolongManager.class,</div><div class="line">            <span class="keyword">new</span> CachedServiceFetcher&lt;WuXiaolongManager&gt;() &#123;</div><div class="line">                <span class="meta">@Override</span></div><div class="line">                <span class="function"><span class="keyword">public</span> WuXiaolongManager <span class="title">createService</span><span class="params">(ContextImpl ctx)</span></span></div><div class="line">                        <span class="keyword">throws</span> ServiceNotFoundException &#123;</div><div class="line">                    android.util.Log.d(<span class="string">"wxl"</span>,<span class="string">"SystemServiceRegistry registerService"</span>);</div><div class="line">                    <span class="keyword">return</span> WuXiaolongManager.getInstance();</div><div class="line">                &#125;&#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="7-应用调用"><a href="#7-应用调用" class="headerlink" title="7.应用调用"></a>7.应用调用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">WuXiaolongManager mWuXiaolongManager = (WuXiaolongManager)mContext.getSystemService(Context.WUXIAOLONG_SERVICE);</div><div class="line">android.util.Log.d(<span class="string">"wxl"</span>,<span class="string">"Name="</span>+ mWuXiaolongManager.getName());</div></pre></td></tr></table></figure><h3 id="8-解决报错"><a href="#8-解决报错" class="headerlink" title="8.解决报错"></a>8.解决报错</h3><h4 id="编译报错"><a href="#编译报错" class="headerlink" title="编译报错"></a>编译报错</h4><ul><li>报错 1：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">******************************</div><div class="line">You have tried to change the API from what has been previously approved.</div><div class="line"></div><div class="line">To make these errors go away, you have two choices:</div><div class="line">   <span class="number">1</span>. You can add <span class="string">'@hide'</span> <span class="function">javadoc <span class="title">comments</span> <span class="params">(and remove @SystemApi/@TestApi/etc)</span></span></div><div class="line">      to the new methods, etc. shown in the above diff.</div><div class="line"></div><div class="line">   2. You can update current.txt and/or removed.txt by executing the following command:</div><div class="line">         make api-stubs-docs-non-updatable-update-current-api</div><div class="line"></div><div class="line">      To submit the revised current.txt to the main Android repository,</div><div class="line">      you will need approval.</div><div class="line">******************************</div></pre></td></tr></table></figure><p>需要执行 make update-api，更新接口，会多出来：</p><p>frameworks/base/api/current.txt</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">diff --git a/api/current.txt b/api/current.txt</div><div class="line">index <span class="number">6</span>b1a96c..<span class="number">0779378</span> <span class="number">100755</span></div><div class="line">--- a/api/current.txt</div><div class="line">+++ b/api/current.txt</div><div class="line">@@ -<span class="number">10256</span>,<span class="number">6</span> +<span class="number">10256</span>,<span class="number">7</span> @@ <span class="keyword">package</span> android.content &#123;</div><div class="line">     field <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String WIFI_RTT_RANGING_SERVICE = <span class="string">"wifirtt"</span>;</div><div class="line">     field <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String WIFI_SERVICE = <span class="string">"wifi"</span>;</div><div class="line">     field <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String WINDOW_SERVICE = <span class="string">"window"</span>;</div><div class="line">+    field <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String WUXIAOLONG_SERVICE = <span class="string">"wuxiaolong"</span>;</div><div class="line">   &#125;</div><div class="line"></div><div class="line">   <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ContextWrapper</span> <span class="keyword">extends</span> <span class="title">android</span>.<span class="title">content</span>.<span class="title">Context</span> </span>&#123;</div><div class="line">@@ -<span class="number">18318</span>,<span class="number">6</span> +<span class="number">18319</span>,<span class="number">14</span> @@ <span class="keyword">package</span> android.hardware.usb &#123;</div><div class="line"></div><div class="line"> &#125;</div><div class="line"></div><div class="line">+<span class="keyword">package</span> android.hardware.wuxiaolong &#123;</div><div class="line">+</div><div class="line">+  <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WuXiaolongManager</span> </span>&#123;</div><div class="line">+    method <span class="meta">@Nullable</span> <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span></span>;</div><div class="line">+  &#125;</div><div class="line">+</div><div class="line">+&#125;</div><div class="line">+</div><div class="line"> <span class="keyword">package</span> android.icu.lang &#123;</div></pre></td></tr></table></figure><p>frameworks/base/non-updatable-api/current.txt</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">diff --git a/non-updatable-api/current.txt b/non-updatable-api/current.txt</div><div class="line">index adf1bb5..e738c02 <span class="number">100755</span></div><div class="line">--- a/non-updatable-api/current.txt</div><div class="line">+++ b/non-updatable-api/current.txt</div><div class="line">@@ -<span class="number">10256</span>,<span class="number">6</span> +<span class="number">10256</span>,<span class="number">7</span> @@ <span class="keyword">package</span> android.content &#123;</div><div class="line">     field <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String WIFI_RTT_RANGING_SERVICE = <span class="string">"wifirtt"</span>;</div><div class="line">     field <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String WIFI_SERVICE = <span class="string">"wifi"</span>;</div><div class="line">     field <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String WINDOW_SERVICE = <span class="string">"window"</span>;</div><div class="line">+    field <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String WUXIAOLONG_SERVICE = <span class="string">"wuxiaolong"</span>;</div><div class="line">   &#125;</div><div class="line"></div><div class="line">   <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ContextWrapper</span> <span class="keyword">extends</span> <span class="title">android</span>.<span class="title">content</span>.<span class="title">Context</span> </span>&#123;</div><div class="line">@@ -<span class="number">18318</span>,<span class="number">6</span> +<span class="number">18319</span>,<span class="number">14</span> @@ <span class="keyword">package</span> android.hardware.usb &#123;</div><div class="line"></div><div class="line"> &#125;</div><div class="line"></div><div class="line">+<span class="keyword">package</span> android.hardware.wuxiaolong &#123;</div><div class="line">+</div><div class="line">+  <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WuXiaolongManager</span> </span>&#123;</div><div class="line">+    method <span class="meta">@Nullable</span> <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span></span>;</div><div class="line">+  &#125;</div><div class="line">+</div><div class="line">+&#125;</div><div class="line">+</div><div class="line"> <span class="keyword">package</span> android.icu.lang &#123;</div></pre></td></tr></table></figure><ul><li>报错 2：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[<span class="number">0</span>mManagers must always be obtained from Context; no direct constructors [ManagerConstructor]</div></pre></td></tr></table></figure><p>编写 Manager 类需写成单例。</p><ul><li>报错 3：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Missing nullability on method `getName` <span class="keyword">return</span> [MissingNullability]</div></pre></td></tr></table></figure><p>getName 方法加上<code>@Nullable</code>注解。</p><h4 id="运行报错"><a href="#运行报错" class="headerlink" title="运行报错"></a>运行报错</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="number">04</span>-<span class="number">08</span> <span class="number">15</span>:<span class="number">41</span>:<span class="number">38.798</span>   <span class="number">297</span>   <span class="number">297</span> E SELinux : avc:  denied  &#123; find &#125; <span class="keyword">for</span> pid=<span class="number">12717</span> uid=<span class="number">1000</span> name=wuxiaolong scontext=u:r:system_server:s0 tcontext=u:object_r:default_android_service:s0 tclass=service_manager permissive=<span class="number">1</span></div><div class="line"><span class="number">04</span>-<span class="number">08</span> <span class="number">15</span>:<span class="number">41</span>:<span class="number">38.802</span> <span class="number">12717</span> <span class="number">12758</span> E AndroidRuntime: *** FATAL EXCEPTION IN SYSTEM PROCESS: PowerManagerService</div><div class="line"><span class="number">04</span>-<span class="number">08</span> <span class="number">15</span>:<span class="number">41</span>:<span class="number">38.802</span> <span class="number">12717</span> <span class="number">12758</span> E AndroidRuntime: java.lang.IllegalStateException: android.os.ServiceManager$ServiceNotFoundException: No service published <span class="keyword">for</span>: wuxiaolong</div><div class="line"><span class="number">04</span>-<span class="number">08</span> <span class="number">15</span>:<span class="number">41</span>:<span class="number">38.802</span> <span class="number">12717</span> <span class="number">12758</span> E AndroidRuntime: at android.hardware.wuxiaolong.WuXiaolongManager.getInstance(WuXiaolongManager.java:<span class="number">47</span>)</div><div class="line"><span class="number">04</span>-<span class="number">08</span> <span class="number">15</span>:<span class="number">41</span>:<span class="number">38.802</span> <span class="number">12717</span> <span class="number">12758</span> E AndroidRuntime: at android.app.SystemServiceRegistry$<span class="number">27</span>.createService(SystemServiceRegistry.java:<span class="number">497</span>)</div><div class="line"><span class="number">04</span>-<span class="number">08</span> <span class="number">15</span>:<span class="number">41</span>:<span class="number">38.802</span> <span class="number">12717</span> <span class="number">12758</span> E AndroidRuntime: at android.app.SystemServiceRegistry$<span class="number">27</span>.createService(SystemServiceRegistry.java:<span class="number">493</span>)</div><div class="line"><span class="number">04</span>-<span class="number">08</span> <span class="number">15</span>:<span class="number">41</span>:<span class="number">38.802</span> <span class="number">12717</span> <span class="number">12758</span> E AndroidRuntime: at android.app.SystemServiceRegistry$CachedServiceFetcher.getService(SystemServiceRegistry.java:<span class="number">1760</span>)</div><div class="line"><span class="number">04</span>-<span class="number">08</span> <span class="number">15</span>:<span class="number">41</span>:<span class="number">38.802</span> <span class="number">12717</span> <span class="number">12758</span> E AndroidRuntime: at android.app.SystemServiceRegistry.getSystemService(SystemServiceRegistry.java:<span class="number">1440</span>)</div><div class="line"><span class="number">04</span>-<span class="number">08</span> <span class="number">15</span>:<span class="number">41</span>:<span class="number">38.802</span> <span class="number">12717</span> <span class="number">12758</span> E AndroidRuntime: at android.app.ContextImpl.getSystemService(ContextImpl.java:<span class="number">1921</span>)</div><div class="line"><span class="number">04</span>-<span class="number">08</span> <span class="number">15</span>:<span class="number">41</span>:<span class="number">38.802</span> <span class="number">12717</span> <span class="number">12758</span> E AndroidRuntime: at com.android.server.display.DisplayPowerController.updatePowerState(DisplayPowerController.java:<span class="number">1191</span>)</div><div class="line"><span class="number">04</span>-<span class="number">08</span> <span class="number">15</span>:<span class="number">41</span>:<span class="number">38.802</span> <span class="number">12717</span> <span class="number">12758</span> E AndroidRuntime: at com.android.server.display.DisplayPowerController.access$<span class="number">700</span>(DisplayPowerController.java:<span class="number">92</span>)</div><div class="line"><span class="number">04</span>-<span class="number">08</span> <span class="number">15</span>:<span class="number">41</span>:<span class="number">38.802</span> <span class="number">12717</span> <span class="number">12758</span> E AndroidRuntime: at com.android.server.display.DisplayPowerController$DisplayControllerHandler.handleMessage(DisplayPowerController.java:<span class="number">2074</span>)</div><div class="line"><span class="number">04</span>-<span class="number">08</span> <span class="number">15</span>:<span class="number">41</span>:<span class="number">38.802</span> <span class="number">12717</span> <span class="number">12758</span> E AndroidRuntime: at android.os.Handler.dispatchMessage(Handler.java:<span class="number">106</span>)</div><div class="line"><span class="number">04</span>-<span class="number">08</span> <span class="number">15</span>:<span class="number">41</span>:<span class="number">38.802</span> <span class="number">12717</span> <span class="number">12758</span> E AndroidRuntime: at android.os.Looper.loop(Looper.java:<span class="number">223</span>)</div><div class="line"><span class="number">04</span>-<span class="number">08</span> <span class="number">15</span>:<span class="number">41</span>:<span class="number">38.802</span> <span class="number">12717</span> <span class="number">12758</span> E AndroidRuntime: at android.os.HandlerThread.run(HandlerThread.java:<span class="number">67</span>)</div><div class="line"><span class="number">04</span>-<span class="number">08</span> <span class="number">15</span>:<span class="number">41</span>:<span class="number">38.802</span> <span class="number">12717</span> <span class="number">12758</span> E AndroidRuntime: at com.android.server.ServiceThread.run(ServiceThread.java:<span class="number">44</span>)</div><div class="line"><span class="number">04</span>-<span class="number">08</span> <span class="number">15</span>:<span class="number">41</span>:<span class="number">38.802</span> <span class="number">12717</span> <span class="number">12758</span> E AndroidRuntime: Caused by: android.os.ServiceManager$ServiceNotFoundException: No service published <span class="keyword">for</span>: wuxiaolong</div><div class="line"><span class="number">04</span>-<span class="number">08</span> <span class="number">15</span>:<span class="number">41</span>:<span class="number">38.802</span> <span class="number">12717</span> <span class="number">12758</span> E AndroidRuntime: at android.os.ServiceManager.getServiceOrThrow(ServiceManager.java:<span class="number">153</span>)</div><div class="line"><span class="number">04</span>-<span class="number">08</span> <span class="number">15</span>:<span class="number">41</span>:<span class="number">38.802</span> <span class="number">12717</span> <span class="number">12758</span> E AndroidRuntime: at android.hardware.wuxiaolong.WuXiaolongManager.getInstance(WuXiaolongManager.java:<span class="number">40</span>)</div><div class="line"><span class="number">04</span>-<span class="number">08</span> <span class="number">15</span>:<span class="number">41</span>:<span class="number">38.802</span> <span class="number">12717</span> <span class="number">12758</span> E AndroidRuntime: ... <span class="number">12</span> more</div></pre></td></tr></table></figure><p>这里是缺少 SELinux 权限，可执行：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">adb shell</div><div class="line">setenforce <span class="number">0</span> （临时禁用掉SELinux）</div><div class="line">getenforce  （得到结果为Permissive）</div></pre></td></tr></table></figure><p>临时禁用掉 SELinux，功能就正常了，关于 SELinux 这里不说了，后面有机会写篇 SELinux 文章。</p><p>最后 Log 打印如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Line <span class="number">832</span>: <span class="number">04</span>-<span class="number">08</span> <span class="number">16</span>:<span class="number">08</span>:<span class="number">55.290</span> <span class="number">17649</span> <span class="number">17690</span> D wxl     : SystemServiceRegistry registerService</div><div class="line">Line <span class="number">833</span>: <span class="number">04</span>-<span class="number">08</span> <span class="number">16</span>:<span class="number">08</span>:<span class="number">55.290</span> <span class="number">17649</span> <span class="number">17690</span> D wxl     : WuXiaolongManager getInstance</div><div class="line">Line <span class="number">835</span>: <span class="number">04</span>-<span class="number">08</span> <span class="number">16</span>:<span class="number">08</span>:<span class="number">55.292</span> <span class="number">17649</span> <span class="number">17690</span> D wxl     : WuXiaolongManager getName</div><div class="line">Line <span class="number">836</span>: <span class="number">04</span>-<span class="number">08</span> <span class="number">16</span>:<span class="number">08</span>:<span class="number">55.293</span> <span class="number">17649</span> <span class="number">17690</span> D wxl     : Name=WuXiaolong..</div></pre></td></tr></table></figure><p>手写个 System Service 实践过后没那么简单，光 SELinux 权限够折腾半天了，这篇文章先就酱紫吧。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/img_convert/06e1e351b5895734ba6c3a1939480f43.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;《&lt;a href=&quot;https://mp.weixin.qq.com/s/Yub-0az8o5XSSfo68nLq2A&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Android 系统开发做什么？&lt;/a&gt;》写到 Android System Services 是专注于特定功能的模块化组件，应用框架 API 所提供的功能可与系统服务通信，以访问底层硬件。Android System Services 是如何写的？来以 DisplayManagerService 为例，具体来看看。&lt;/p&gt;
&lt;h2 id=&quot;System-Service-是如何写的？&quot;&gt;&lt;a href=&quot;#System-Service-是如何写的？&quot; class=&quot;headerlink&quot; title=&quot;System Service 是如何写的？&quot;&gt;&lt;/a&gt;System Service 是如何写的？&lt;/h2&gt;
    
    </summary>
    
      <category term="AOSP" scheme="http://wuxiaolong.github.io/categories/AOSP/"/>
    
    
      <category term="System Services" scheme="http://wuxiaolong.github.io/tags/System-Services/"/>
    
  </entry>
  
  <entry>
    <title>Android 系统开发做什么？</title>
    <link href="http://wuxiaolong.github.io/2021/03/29/AndroidFramework/"/>
    <id>http://wuxiaolong.github.io/2021/03/29/AndroidFramework/</id>
    <published>2021-03-29T12:42:58.000Z</published>
    <updated>2021-12-19T10:37:46.793Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题外话"><a href="#题外话" class="headerlink" title="题外话"></a>题外话</h2><p>18 年我从 Android 应用开发转 Framework 层开发了，从此开启了 996 幸福生活，博客技术文更新基本停滞了，被工作占据了过多的精力，实在没时间像以前一样拟稿、写作，实践、反复修改去精心准备文章，另外也不知道该写什么了，很多经验心得都会涉及到项目本身，公司内部倒是写了不少总结文档，然而工作的事不便公开分享出来。我是一个在乎别人的看法，之前被很多人骂“江郎才尽”，其实我是很难受的。</p><p>在转 Framework 其实一开始我是很不适应，适应新环境也并没有想象当中那么容易，因此变得更不自信了，对自己的定位更加模糊，每半年换一个模块，从一开始做性能开发、转系统应用开发、又转通讯开发，刚有点感觉，因为工作调整，被安排做其他，技术没沉淀，总感觉虚的很。</p><h2 id="Android-系统架构"><a href="#Android-系统架构" class="headerlink" title="Android 系统架构"></a>Android 系统架构</h2><p><img src="/images/AndroidFramework1.png" alt="官图压阵"><br><a id="more"></a><br>这是来自官方 Android 系统架构，从上往下依次为应用框架（Application Framework）、Binder IPC proxies、系统服务（Android System Services）、硬件抽象层 (HAL)、Linux 内核。</p><h2 id="Application-Framework"><a href="#Application-Framework" class="headerlink" title="Application Framework"></a>Application Framework</h2><p><img src="/images/AndroidFramework3.png" alt=""></p><p>从旧版架构图可以看出 Application Framework 大概有：</p><table><thead><tr><th>名称</th><th>简介</th></tr></thead><tbody><tr><td>Activity Manager</td><td>用来管理应用程序生命周期并提供常用的导航回退功能。</td></tr><tr><td>Window Manager</td><td>提供一些我们访问手机屏幕的方法，如屏幕的透明度、亮度、背景。</td></tr><tr><td>Content Providers</td><td>使得应用程序可以访问另一个应用程序的数据（如联系人数据库)， 或者共享它们自己的数据。</td></tr><tr><td>View System</td><td>可以用来构建应用程序， 它包括列表（Lists)，网格（Grids)，文本框（Text boxes)，按钮（Buttons)， 甚至可嵌入的 web 浏览器。</td></tr><tr><td>Notification Manager</td><td>使得应用程序可以在状态栏中显示自定义的提示信息。</td></tr><tr><td>Package Manager</td><td>提供对系统的安装包的访问，包括安装、卸载应用，查询 permission 相关信息，查询 Application 相关信息等。</td></tr><tr><td>Telephony Manager</td><td>主要提供了一系列用于访问与手机通讯相关的状态和信息的方法，查询电信网络状态信息，SIM 卡的信息等。</td></tr><tr><td>Resource Manager</td><td>提供非代码资源的访问，如本地字符串，图形，和布局文件（Layout files )。</td></tr><tr><td>Location Manager</td><td>提供设备的地址位置的获取方式，很显然，GPS 导航肯定能用到位置服务。</td></tr><tr><td>XMPP</td><td>可扩展通讯和表示协议，前身为 Jabber，提供即时通信服务。例如推送功能，Google Talk。</td></tr></tbody></table><h3 id="Binder-IPC-proxies"><a href="#Binder-IPC-proxies" class="headerlink" title="Binder IPC proxies"></a>Binder IPC proxies</h3><p>Binder 作为 Android 系统提供的一种通信方式，<br>Binder IPC 层：作为「系统服务层」与「应用程序框架层」的 IPC 桥梁，互相传递接口调用的数据，实现跨进层的通讯。</p><h3 id="Android-System-Services"><a href="#Android-System-Services" class="headerlink" title="Android System Services"></a>Android System Services</h3><p>Android System Services 是专注于特定功能的模块化组件，如进行窗口相关的操作会用到窗口管理服务<code>WindowManager</code>，进行电源相关的操作会用到电源管理服务<code>PowerManager</code>，还有很多其他的系统管理服务，如通知管理服务<code>NotifacationManager</code>、振动管理服务<code>Vibrator</code>、电池管理服务<code>BatteryManager</code>等。应用框架 API 所提供的功能可与系统服务通信，以访问底层硬件。</p><p>Android 包含两组服务：“系统”（诸如窗口管理器和通知管理器之类的服务）和“媒体”（与播放和录制媒体相关的服务）。</p><table><thead><tr><th>名称</th><th>简介</th></tr></thead><tbody><tr><td>PowerManagerService</td><td>电源管理服务</td></tr><tr><td>WindowManagerService</td><td>最核心的服务之一，负责窗口管理</td></tr><tr><td>ActivityManagerService</td><td>最核心的服务之一，管理 Activity</td></tr><tr><td>PackageManagerService</td><td>程序包管理服务</td></tr><tr><td>AccountManagerService</td><td>账户管理服务，是指联系人账户</td></tr><tr><td>ContentService</td><td>ContentProvider 服务，提供跨进程数据交换</td></tr><tr><td>BatteryService</td><td>电池管理服务</td></tr><tr><td>LightsService</td><td>自然光强度感应传感器服务</td></tr><tr><td>VibratorService</td><td>震动器服务</td></tr><tr><td>AlarmManagerService</td><td>定时器管理服务，提供定时提醒服务</td></tr><tr><td>BluetoothService</td><td>蓝牙服务</td></tr><tr><td>DevicePolicyManagerService</td><td>提供一些系统级别的设置及属性</td></tr><tr><td>StatusBarManagerService</td><td>状态栏管理服务</td></tr><tr><td>ClipboardService</td><td>系统剪切板服务</td></tr><tr><td>InputMethodManagerService</td><td>输入法管理服务</td></tr><tr><td>NetworkStatsService</td><td>网络状态服务</td></tr><tr><td>NetworkManagementService</td><td>网络管理服务</td></tr><tr><td>ConnectivityService</td><td>网络连接管理服务</td></tr><tr><td>MountService</td><td>挂载服务</td></tr><tr><td>NotificationManagerService</td><td>通知栏管理服务</td></tr><tr><td>DeviceStorageMonitorService</td><td>磁盘空间状态检测服务</td></tr><tr><td>LocationManagerService</td><td>地理位置服务</td></tr><tr><td>SearchManagerService</td><td>搜索管理服务</td></tr><tr><td>WallpaperManagerService</td><td>墙纸管理服务，墙纸不等同于桌面背景，在 View 系统内部，墙纸可以作为任何窗口的背景</td></tr><tr><td>AudioService</td><td>音频管理服务</td></tr><tr><td>BackupManagerService</td><td>系统备份服务</td></tr><tr><td>AppWidgetService</td><td>Widget 服务</td></tr><tr><td>DiskStatsService</td><td>磁盘统计服务</td></tr><tr><td>SurfaceFlinger</td><td>负责 Layer 合成（composer），创建 surface，管理 surface</td></tr></tbody></table><h3 id="硬件抽象层-HAL"><a href="#硬件抽象层-HAL" class="headerlink" title="硬件抽象层 (HAL)"></a>硬件抽象层 (HAL)</h3><p>HAL 可定义一个标准接口以供硬件供应商实现，该接口使 Android 无需考虑底层驱动程序的实现。使用 HAL 可使您实现功能而不会影响或修改更高级别的系统。HAL 实现会被封装成模块，并会由 Android 系统适时地加载。</p><h3 id="Linux-内核"><a href="#Linux-内核" class="headerlink" title="Linux 内核"></a>Linux 内核</h3><p>Android 基于 Linux 提供核心系统服务，如显示驱动、Camera 驱动、蓝牙驱动、音频系统驱动、Binder (IPC) 驱动、USB 驱动、WiFi 驱动、电源管理等。</p><p>Linux 内核也作为硬件和软件之间的抽象层，它隐藏具体硬件细节而为上层提供统一的服务。</p><h2 id="开发"><a href="#开发" class="headerlink" title="开发"></a>开发</h2><p>谷歌发布版本，就是 AOSP 原生代码。AOSP 原生代码只支持极少数几款手机，比如 Pixel。</p><p>芯片厂商如高通、MTK、展锐在 AOSP 基础上发布自己的版本，每个芯片厂商会在 AOSP 原生代码上叠加自己的功能，比如双卡双待功能。</p><p>我们开发就是芯片商释放的代码，我们工作大部分就是解 Bug，比较低级，有部分需求定制，也基本是依赖芯片商支持。</p><p><img src="/images/AndroidFramework2.png" alt="开发模块"></p><p>从编程语言上来说，Android 系统层有很大一部分是用 Java 开发的。另外还有一大部分是用 Native（C/C++）语言开发的，要想在这个领域做到游刃有余，对 Java 和 C++语言要了解。</p><p>Android 系统开发涉及知识点非常多，需要潜下心来学习，目前我做的是多媒体显示服务模块，已经有段时间了，还只是知道的皮毛，路漫漫其修远兮，吾将上下而求索，想成为该领域的专家，还任重道远。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题外话&quot;&gt;&lt;a href=&quot;#题外话&quot; class=&quot;headerlink&quot; title=&quot;题外话&quot;&gt;&lt;/a&gt;题外话&lt;/h2&gt;&lt;p&gt;18 年我从 Android 应用开发转 Framework 层开发了，从此开启了 996 幸福生活，博客技术文更新基本停滞了，被工作占据了过多的精力，实在没时间像以前一样拟稿、写作，实践、反复修改去精心准备文章，另外也不知道该写什么了，很多经验心得都会涉及到项目本身，公司内部倒是写了不少总结文档，然而工作的事不便公开分享出来。我是一个在乎别人的看法，之前被很多人骂“江郎才尽”，其实我是很难受的。&lt;/p&gt;
&lt;p&gt;在转 Framework 其实一开始我是很不适应，适应新环境也并没有想象当中那么容易，因此变得更不自信了，对自己的定位更加模糊，每半年换一个模块，从一开始做性能开发、转系统应用开发、又转通讯开发，刚有点感觉，因为工作调整，被安排做其他，技术没沉淀，总感觉虚的很。&lt;/p&gt;
&lt;h2 id=&quot;Android-系统架构&quot;&gt;&lt;a href=&quot;#Android-系统架构&quot; class=&quot;headerlink&quot; title=&quot;Android 系统架构&quot;&gt;&lt;/a&gt;Android 系统架构&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/images/AndroidFramework1.png&quot; alt=&quot;官图压阵&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="AOSP" scheme="http://wuxiaolong.github.io/categories/AOSP/"/>
    
    
      <category term="Android Framework" scheme="http://wuxiaolong.github.io/tags/Android-Framework/"/>
    
  </entry>
  
  <entry>
    <title>你敢用一年时间改变自己吗？</title>
    <link href="http://wuxiaolong.github.io/2021/02/03/ChallengeMyself/"/>
    <id>http://wuxiaolong.github.io/2021/02/03/ChallengeMyself/</id>
    <published>2021-02-03T12:42:58.000Z</published>
    <updated>2021-03-30T13:55:28.929Z</updated>
    
    <content type="html"><![CDATA[<p>这是来自知乎问题，好问题，我来回答一下。<br>从标题来看，我觉得可以解读下“敢”、“一年”、“改变”。</p><h2 id="敢"><a href="#敢" class="headerlink" title="敢"></a>敢</h2><p>“敢”代表一种决心，一种克制。</p><p>低级的欲望通过放纵得到；高级的欲望通过自律得到；顶级的欲望通过煎熬得到。</p><h2 id="一年"><a href="#一年" class="headerlink" title="一年"></a>一年</h2><p>“一年”代表一种毅力，其实不用一年，一个习惯养成大约需要 21 天，关键是你想做一件事，做完一天，记得再做第二天，坚持下去。习惯一旦养成是有瘾的，一天不做总感觉少了点什么。</p><h2 id="改变"><a href="#改变" class="headerlink" title="改变"></a>改变</h2><p>最重要的是“改变”，如何改变自己？<br><a id="more"></a><br>今天是 3 月 23 号，2021 年已经过去四分之一了啊，拿我自己举例子，2021 年我想做三件事，每天坚持，一年后看看是否能改变自己。</p><p><img src="https://smartloong.oss-cn-shanghai.aliyuncs.com/IMG_4611.JPG" alt="一个月瘦了 10 斤"></p><h3 id="一-减肥"><a href="#一-减肥" class="headerlink" title="一 减肥"></a><strong>一 减肥</strong></h3><p>去年年底的时候，我的体重超过了 150，终于下定决心要减肥，本想着维护 150 就行，当真的超过 150 时，开始心慌了。</p><p>减肥尝试了很多方式，俯卧撑、夜跑、跑步机、跳绳等等统统没效果，最后居然通过不吃晚饭顺利减到 140，如今 140 已经很久了，体重很难下来了，天暖了，可以加大运动量。</p><p>今年减肥还是日常事务，体重目标 130 左右，练练腹肌，梦想我的八块腹肌，加油。</p><h3 id="二-看书"><a href="#二-看书" class="headerlink" title="二 看书"></a><strong>二 看书</strong></h3><p>毕业工作也有 9 年了，惭愧，这些年完完整整的没读过几本书，去年有意识读些工作之外的书籍，但有些书读完了就读完了，都没有做复盘总结，没什么用，今年一些经典书籍读完，必须写读后感，一个月至少读一本。</p><h3 id="三-英语学习"><a href="#三-英语学习" class="headerlink" title="三 英语学习"></a><strong>三 英语学习</strong></h3><p>英语，呵呵，多年夙愿了，每每都想学习，却根本没坚持下来，21 年每天学 10 个单词，就这样吧。</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>这里立个 Flag，这三件事我坚持做，看看能否改变自己，一年后我来秀我的八块腹肌，希望不要打脸。</p><p>从今晚开始，锻炼看书学英语。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这是来自知乎问题，好问题，我来回答一下。&lt;br&gt;从标题来看，我觉得可以解读下“敢”、“一年”、“改变”。&lt;/p&gt;
&lt;h2 id=&quot;敢&quot;&gt;&lt;a href=&quot;#敢&quot; class=&quot;headerlink&quot; title=&quot;敢&quot;&gt;&lt;/a&gt;敢&lt;/h2&gt;&lt;p&gt;“敢”代表一种决心，一种克制。&lt;/p&gt;
&lt;p&gt;低级的欲望通过放纵得到；高级的欲望通过自律得到；顶级的欲望通过煎熬得到。&lt;/p&gt;
&lt;h2 id=&quot;一年&quot;&gt;&lt;a href=&quot;#一年&quot; class=&quot;headerlink&quot; title=&quot;一年&quot;&gt;&lt;/a&gt;一年&lt;/h2&gt;&lt;p&gt;“一年”代表一种毅力，其实不用一年，一个习惯养成大约需要 21 天，关键是你想做一件事，做完一天，记得再做第二天，坚持下去。习惯一旦养成是有瘾的，一天不做总感觉少了点什么。&lt;/p&gt;
&lt;h2 id=&quot;改变&quot;&gt;&lt;a href=&quot;#改变&quot; class=&quot;headerlink&quot; title=&quot;改变&quot;&gt;&lt;/a&gt;改变&lt;/h2&gt;&lt;p&gt;最重要的是“改变”，如何改变自己？&lt;br&gt;
    
    </summary>
    
      <category term="猿生活" scheme="http://wuxiaolong.github.io/categories/%E7%8C%BF%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="Challenge" scheme="http://wuxiaolong.github.io/tags/Challenge/"/>
    
  </entry>
  
  <entry>
    <title>Android 9.0 SystemUI NavigationBar</title>
    <link href="http://wuxiaolong.github.io/2019/09/12/SystemUI5/"/>
    <id>http://wuxiaolong.github.io/2019/09/12/SystemUI5/</id>
    <published>2019-09-12T01:54:41.000Z</published>
    <updated>2020-10-28T14:11:13.284Z</updated>
    
    <content type="html"><![CDATA[<p>导航栏有返回(back)，桌面（home），最近任务（recent），本篇主要学习这三个是如何加载的，点击事件在哪里写的？基于 AOSP 9.0 分析。</p><p>NavigationBar 创建是从 StatusBar#makeStatusBarView 开始的。</p><h2 id="StatusBar-makeStatusBarView"><a href="#StatusBar-makeStatusBarView" class="headerlink" title="StatusBar#makeStatusBarView"></a>StatusBar#makeStatusBarView</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">makeStatusBarView</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="comment">//省略其他代码</span></div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        <span class="keyword">boolean</span> showNav = mWindowManagerService.hasNavigationBar();</div><div class="line">        <span class="keyword">if</span> (DEBUG) Log.v(TAG, <span class="string">"hasNavigationBar="</span> + showNav);</div><div class="line">        <span class="keyword">if</span> (showNav) &#123;</div><div class="line">            createNavigationBar();</div><div class="line">        &#125;</div><div class="line">    &#125; <span class="keyword">catch</span> (RemoteException ex) &#123;</div><div class="line">        <span class="comment">// no window manager? good luck with that</span></div><div class="line">    &#125;</div><div class="line">    <span class="comment">//省略其他代码</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">createNavigationBar</span><span class="params">()</span> </span>&#123;</div><div class="line">    mNavigationBarView = NavigationBarFragment.create(mContext, (tag, fragment) -&gt; &#123;</div><div class="line">        mNavigationBar = (NavigationBarFragment) fragment;</div><div class="line">        <span class="keyword">if</span> (mLightBarController != <span class="keyword">null</span>) &#123;</div><div class="line">            mNavigationBar.setLightBarController(mLightBarController);</div><div class="line">        &#125;</div><div class="line">        mNavigationBar.setCurrentSysuiVisibility(mSystemUiVisibility);</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure><a id="more"></a><p>再进入 NavigationBarFragment#create 看看。</p><h2 id="NavigationBarFragment-create"><a href="#NavigationBarFragment-create" class="headerlink" title="NavigationBarFragment#create"></a>NavigationBarFragment#create</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> View <span class="title">create</span><span class="params">(Context context, FragmentListener listener)</span> </span>&#123;</div><div class="line">    WindowManager.LayoutParams lp = <span class="keyword">new</span> WindowManager.LayoutParams(</div><div class="line">            LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT,</div><div class="line">            WindowManager.LayoutParams.TYPE_NAVIGATION_BAR,</div><div class="line">            WindowManager.LayoutParams.FLAG_TOUCHABLE_WHEN_WAKING</div><div class="line">                    | WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE</div><div class="line">                    | WindowManager.LayoutParams.FLAG_NOT_TOUCH_MODAL</div><div class="line">                    | WindowManager.LayoutParams.FLAG_WATCH_OUTSIDE_TOUCH</div><div class="line">                    | WindowManager.LayoutParams.FLAG_SPLIT_TOUCH</div><div class="line">                    | WindowManager.LayoutParams.FLAG_SLIPPERY,</div><div class="line">            PixelFormat.TRANSLUCENT);</div><div class="line">    lp.token = <span class="keyword">new</span> Binder();</div><div class="line">    lp.setTitle(<span class="string">"NavigationBar"</span>);</div><div class="line">    lp.accessibilityTitle = context.getString(R.string.nav_bar);</div><div class="line">    lp.windowAnimations = <span class="number">0</span>;</div><div class="line">    View navigationBarView = LayoutInflater.from(context).inflate(</div><div class="line">            R.layout.navigation_bar_window, <span class="keyword">null</span>);</div><div class="line">    <span class="keyword">if</span> (DEBUG) Log.v(TAG, <span class="string">"addNavigationBar: about to add "</span> + navigationBarView);</div><div class="line">    <span class="keyword">if</span> (navigationBarView == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">    context.getSystemService(WindowManager.class).addView(navigationBarView, lp);</div><div class="line">    FragmentHostManager fragmentHost = FragmentHostManager.get(navigationBarView);</div><div class="line">    NavigationBarFragment fragment = <span class="keyword">new</span> NavigationBarFragment();</div><div class="line">    fragmentHost.getFragmentManager().beginTransaction()</div><div class="line">            .replace(R.id.navigation_bar_frame, fragment, TAG)</div><div class="line">            .commit();</div><div class="line">    fragmentHost.addTagListener(TAG, listener);</div><div class="line">    <span class="keyword">return</span> navigationBarView;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>这里 WindowManager addView 了导航栏的布局，最终 add NavigationBarFragment，接下来看 NavigationBarFragment#onCreateView</p><h2 id="NavigationBarFragment-onCreateView"><a href="#NavigationBarFragment-onCreateView" class="headerlink" title="NavigationBarFragment#onCreateView"></a>NavigationBarFragment#onCreateView</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> View <span class="title">onCreateView</span><span class="params">(LayoutInflater inflater, @Nullable ViewGroup container,</span></span></div><div class="line">        Bundle savedInstanceState) &#123;</div><div class="line">    <span class="keyword">return</span> inflater.inflate(R.layout.navigation_bar, container, <span class="keyword">false</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>看下布局文件 navigation_bar.xml，这是导航栏的真正根布局。</p><h2 id="navigation-bar-xml"><a href="#navigation-bar-xml" class="headerlink" title="navigation_bar.xml"></a>navigation_bar.xml</h2><p>位于 SystemUI\res\layout\navigation_bar.xml<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&lt;com.android.systemui.statusbar.phone.NavigationBarView</div><div class="line">    xmlns:android="http://schemas.android.com/apk/res/android"</div><div class="line">    xmlns:systemui="http://schemas.android.com/apk/res-auto"</div><div class="line">    android:layout_height="match_parent"</div><div class="line">    android:layout_width="match_parent"</div><div class="line">    android:background="@drawable/system_bar_background"&gt;</div><div class="line"></div><div class="line">    &lt;com.android.systemui.statusbar.phone.NavigationBarInflaterView</div><div class="line">        android:id="@+id/navigation_inflater"</div><div class="line">        android:layout_width="match_parent"</div><div class="line">        android:layout_height="match_parent" /&gt;</div><div class="line"></div><div class="line">&lt;/com.android.systemui.statusbar.phone.NavigationBarView&gt;</div><div class="line">`</div></pre></td></tr></table></figure></p><p>NavigationBarInflaterView 继承自 FrameLayout，直接看 onFinishInflate() 方法，这个方法是每个 view 被 inflate 之后都会回调。</p><h2 id="NavigationBarInflaterView-onFinishInflate"><a href="#NavigationBarInflaterView-onFinishInflate" class="headerlink" title="NavigationBarInflaterView#onFinishInflate"></a>NavigationBarInflaterView#onFinishInflate</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onFinishInflate</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">super</span>.onFinishInflate();</div><div class="line">    inflateChildren();</div><div class="line">    clearViews();</div><div class="line">    <span class="comment">//关键方法</span></div><div class="line">    inflateLayout(getDefaultLayout());</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>这里调用了 getDefaultLayout 方法，加载资源文件。</p><h2 id="NavigationBarInflaterView-getDefaultLayout"><a href="#NavigationBarInflaterView-getDefaultLayout" class="headerlink" title="NavigationBarInflaterView#getDefaultLayout"></a>NavigationBarInflaterView#getDefaultLayout</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">protected</span> String <span class="title">getDefaultLayout</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">final</span> <span class="keyword">int</span> defaultResource = mOverviewProxyService.shouldShowSwipeUpUI()</div><div class="line">            ? R.string.config_navBarLayoutQuickstep</div><div class="line">            : R.string.config_navBarLayout;</div><div class="line">    <span class="keyword">return</span> mContext.getString(defaultResource);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>config_navBarLayoutQuickstep 和 config_navBarLayout 位于 AOSP/frameworks/base/packages/SystemUI/res/values/config.xml。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"config_navBarLayout"</span> <span class="attr">translatable</span>=<span class="string">"false"</span>&gt;</span>left[.5W],back[1WC];home;recent[1WC],right[.5W]<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"config_navBarLayoutQuickstep"</span> <span class="attr">translatable</span>=<span class="string">"false"</span>&gt;</span>back[1.7WC];home;contextual[1.7WC]<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div></pre></td></tr></table></figure></p><p>回头再看 NavigationBarInflaterView#onFinishInflate 方法调用 NavigationBarInflaterView#inflateLayout 方法。</p><h2 id="NavigationBarInflaterView-inflateLayout"><a href="#NavigationBarInflaterView-inflateLayout" class="headerlink" title="NavigationBarInflaterView#inflateLayout"></a>NavigationBarInflaterView#inflateLayout</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">inflateLayout</span><span class="params">(String newLayout)</span> </span>&#123;</div><div class="line">    mCurrentLayout = newLayout;</div><div class="line">    <span class="keyword">if</span> (newLayout == <span class="keyword">null</span>) &#123;</div><div class="line">        newLayout = getDefaultLayout();</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//根据“；”号分割成长度为3的数组</span></div><div class="line">    String[] sets = newLayout.split(GRAVITY_SEPARATOR, <span class="number">3</span>);</div><div class="line">    <span class="keyword">if</span> (sets.length != <span class="number">3</span>) &#123;</div><div class="line">        Log.d(TAG, <span class="string">"Invalid layout."</span>);</div><div class="line">        newLayout = getDefaultLayout();</div><div class="line">        sets = newLayout.split(GRAVITY_SEPARATOR, <span class="number">3</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//根据“，”号分割，包含 left[.5W]和back[1WC]</span></div><div class="line">    String[] start = sets[<span class="number">0</span>].split(BUTTON_SEPARATOR);</div><div class="line">    <span class="comment">//包含home</span></div><div class="line">    String[] center = sets[<span class="number">1</span>].split(BUTTON_SEPARATOR);</div><div class="line">    <span class="comment">//包含recent[1WC]和right[.5W]</span></div><div class="line">    String[] end = sets[<span class="number">2</span>].split(BUTTON_SEPARATOR);</div><div class="line">    <span class="comment">// Inflate these in start to end order or accessibility traversal will be messed up.</span></div><div class="line">    inflateButtons(start, mRot0.findViewById(R.id.ends_group), isRot0Landscape, <span class="keyword">true</span>);</div><div class="line">    inflateButtons(start, mRot90.findViewById(R.id.ends_group), !isRot0Landscape, <span class="keyword">true</span>);</div><div class="line">    inflateButtons(center, mRot0.findViewById(R.id.center_group), isRot0Landscape, <span class="keyword">false</span>);</div><div class="line">    inflateButtons(center, mRot90.findViewById(R.id.center_group), !isRot0Landscape, <span class="keyword">false</span>);</div><div class="line">    addGravitySpacer(mRot0.findViewById(R.id.ends_group));</div><div class="line">    addGravitySpacer(mRot90.findViewById(R.id.ends_group));</div><div class="line">    inflateButtons(end, mRot0.findViewById(R.id.ends_group), isRot0Landscape, <span class="keyword">false</span>);</div><div class="line">    inflateButtons(end, mRot90.findViewById(R.id.ends_group), !isRot0Landscape, <span class="keyword">false</span>);</div><div class="line">    updateButtonDispatchersCurrentView();</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>再看 inflateButtons() 方法，遍历加载 inflateButton。</p><h2 id="NavigationBarInflaterView-inflateButtons"><a href="#NavigationBarInflaterView-inflateButtons" class="headerlink" title="NavigationBarInflaterView#inflateButtons"></a>NavigationBarInflaterView#inflateButtons</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">inflateButtons</span><span class="params">(String[] buttons, ViewGroup parent, <span class="keyword">boolean</span> landscape,</span></span></div><div class="line">        <span class="keyword">boolean</span> start) &#123;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; buttons.length; i++) &#123;</div><div class="line">        inflateButton(buttons[i], parent, landscape, start);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">@Nullable</span></div><div class="line"><span class="function"><span class="keyword">protected</span> View <span class="title">inflateButton</span><span class="params">(String buttonSpec, ViewGroup parent, <span class="keyword">boolean</span> landscape,</span></span></div><div class="line">        <span class="keyword">boolean</span> start) &#123;</div><div class="line">    LayoutInflater inflater = landscape ? mLandscapeInflater : mLayoutInflater;</div><div class="line">    View v = createView(buttonSpec, parent, inflater);</div><div class="line">    <span class="keyword">if</span> (v == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">    v = applySize(v, buttonSpec, landscape, start);</div><div class="line">    parent.addView(v);</div><div class="line">    addToDispatchers(v);</div><div class="line">    View lastView = landscape ? mLastLandscape : mLastPortrait;</div><div class="line">    View accessibilityView = v;</div><div class="line">    <span class="keyword">if</span> (v <span class="keyword">instanceof</span> ReverseRelativeLayout) &#123;</div><div class="line">        accessibilityView = ((ReverseRelativeLayout) v).getChildAt(<span class="number">0</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (lastView != <span class="keyword">null</span>) &#123;</div><div class="line">        accessibilityView.setAccessibilityTraversalAfter(lastView.getId());</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (landscape) &#123;</div><div class="line">        mLastLandscape = accessibilityView;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        mLastPortrait = accessibilityView;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> v;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>来看 NavigationBarInflaterView#createView 方法。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> View <span class="title">createView</span><span class="params">(String buttonSpec, ViewGroup parent, LayoutInflater inflater)</span> </span>&#123;</div><div class="line">    View v = <span class="keyword">null</span>;</div><div class="line">    String button = extractButton(buttonSpec);</div><div class="line">    <span class="comment">//省略其他代码</span></div><div class="line">    <span class="keyword">if</span> (HOME.equals(button)) &#123;</div><div class="line">        v = inflater.inflate(R.layout.home, parent, <span class="keyword">false</span>);</div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (BACK.equals(button)) &#123;</div><div class="line">        v = inflater.inflate(R.layout.back, parent, <span class="keyword">false</span>);</div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (RECENT.equals(button)) &#123;</div><div class="line">        v = inflater.inflate(R.layout.recent_apps, parent, <span class="keyword">false</span>);</div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (MENU_IME_ROTATE.equals(button)) &#123;</div><div class="line">        v = inflater.inflate(R.layout.menu_ime, parent, <span class="keyword">false</span>);</div><div class="line">    &#125; <span class="comment">//省略其他代码</span></div><div class="line">    <span class="keyword">return</span> v;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>以 home 按键为例，加载了 home.xml 布局。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&lt;com.android.systemui.statusbar.policy.KeyButtonView</div><div class="line">    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</div><div class="line">    xmlns:systemui=&quot;http://schemas.android.com/apk/res-auto&quot;</div><div class="line">    android:id=&quot;@+id/home&quot;</div><div class="line">    android:layout_width=&quot;@dimen/navigation_key_width&quot;</div><div class="line">    android:layout_height=&quot;match_parent&quot;</div><div class="line">    android:layout_weight=&quot;0&quot;</div><div class="line">    systemui:keyCode=&quot;3&quot;</div><div class="line">    android:scaleType=&quot;center&quot;</div><div class="line">    android:contentDescription=&quot;@string/accessibility_home&quot;</div><div class="line">    android:paddingStart=&quot;@dimen/navigation_key_padding&quot;</div><div class="line">    android:paddingEnd=&quot;@dimen/navigation_key_padding&quot;</div><div class="line">    /&gt;</div></pre></td></tr></table></figure></p><p>从 KeyButtonView#sendEvent() 方法来看，home 等 view 的点击 touch 事件不是自己处理的，而是交由系统以实体按键（keycode）的形式处理的，不细看了。</p><p>那 NavigationBar icon 是具体如何加载的？看 NavigationBarView 构造方法。</p><h2 id="NavigationBarView-构造方法"><a href="#NavigationBarView-构造方法" class="headerlink" title="NavigationBarView#构造方法"></a>NavigationBarView#构造方法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="title">NavigationBarView</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</div><div class="line">    <span class="keyword">super</span>(context, attrs);</div><div class="line">    mDisplay = ((WindowManager) context.getSystemService(</div><div class="line">            Context.WINDOW_SERVICE)).getDefaultDisplay();</div><div class="line">    mVertical = <span class="keyword">false</span>;</div><div class="line">    mShowMenu = <span class="keyword">false</span>;</div><div class="line">    mShowAccessibilityButton = <span class="keyword">false</span>;</div><div class="line">    mLongClickableAccessibilityButton = <span class="keyword">false</span>;</div><div class="line">    mOverviewProxyService = Dependency.get(OverviewProxyService.class);</div><div class="line">    mRecentsOnboarding = <span class="keyword">new</span> RecentsOnboarding(context, mOverviewProxyService);</div><div class="line">    mConfiguration = <span class="keyword">new</span> Configuration();</div><div class="line">    mConfiguration.updateFrom(context.getResources().getConfiguration());</div><div class="line">    <span class="comment">//加载 icon</span></div><div class="line">    reloadNavIcons();</div><div class="line">    <span class="comment">//mButtonDispatchers 是维护这些home back recent图标view的管理类</span></div><div class="line">    mBarTransitions = <span class="keyword">new</span> NavigationBarTransitions(<span class="keyword">this</span>);</div><div class="line">    mButtonDispatchers.put(R.id.back, <span class="keyword">new</span> ButtonDispatcher(R.id.back));</div><div class="line">    mButtonDispatchers.put(R.id.home, <span class="keyword">new</span> ButtonDispatcher(R.id.home));</div><div class="line">    mButtonDispatchers.put(R.id.recent_apps, <span class="keyword">new</span> ButtonDispatcher(R.id.recent_apps));</div><div class="line">    mButtonDispatchers.put(R.id.menu, <span class="keyword">new</span> ButtonDispatcher(R.id.menu));</div><div class="line">    mButtonDispatchers.put(R.id.ime_switcher, <span class="keyword">new</span> ButtonDispatcher(R.id.ime_switcher));</div><div class="line">    mButtonDispatchers.put(R.id.accessibility_button,</div><div class="line">            <span class="keyword">new</span> ButtonDispatcher(R.id.accessibility_button));</div><div class="line">    mButtonDispatchers.put(R.id.rotate_suggestion,</div><div class="line">            <span class="keyword">new</span> ButtonDispatcher(R.id.rotate_suggestion));</div><div class="line">    mButtonDispatchers.put(R.id.menu_container,</div><div class="line">            <span class="keyword">new</span> ButtonDispatcher(R.id.menu_container));</div><div class="line">    mDeadZone = <span class="keyword">new</span> DeadZone(<span class="keyword">this</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="NavigationBarView-reloadNavIcons"><a href="#NavigationBarView-reloadNavIcons" class="headerlink" title="NavigationBarView#reloadNavIcons"></a>NavigationBarView#reloadNavIcons</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">reloadNavIcons</span><span class="params">()</span> </span>&#123;</div><div class="line">    updateIcons(mContext, Configuration.EMPTY, mConfiguration);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">updateIcons</span><span class="params">(Context ctx, Configuration oldConfig, Configuration newConfig)</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> dualToneDarkTheme = Utils.getThemeAttr(ctx, R.attr.darkIconTheme);</div><div class="line">    <span class="keyword">int</span> dualToneLightTheme = Utils.getThemeAttr(ctx, R.attr.lightIconTheme);</div><div class="line">    <span class="comment">//亮色的icon资源</span></div><div class="line">    Context lightContext = <span class="keyword">new</span> ContextThemeWrapper(ctx, dualToneLightTheme);</div><div class="line">    <span class="comment">//暗色的icon资源</span></div><div class="line">    Context darkContext = <span class="keyword">new</span> ContextThemeWrapper(ctx, dualToneDarkTheme);</div><div class="line">    <span class="keyword">if</span> (oldConfig.orientation != newConfig.orientation</div><div class="line">            || oldConfig.densityDpi != newConfig.densityDpi) &#123;</div><div class="line">        mDockedIcon = getDrawable(lightContext, darkContext, R.drawable.ic_sysbar_docked);</div><div class="line">        mHomeDefaultIcon = getHomeDrawable(lightContext, darkContext);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (oldConfig.densityDpi != newConfig.densityDpi</div><div class="line">            || oldConfig.getLayoutDirection() != newConfig.getLayoutDirection()) &#123;</div><div class="line">        mBackIcon = getBackDrawable(lightContext, darkContext);</div><div class="line">        mRecentIcon = getDrawable(lightContext, darkContext, R.drawable.ic_sysbar_recent);</div><div class="line">        mMenuIcon = getDrawable(lightContext, darkContext, R.drawable.ic_sysbar_menu);</div><div class="line">        mAccessibilityIcon = getDrawable(lightContext, darkContext,</div><div class="line">                R.drawable.ic_sysbar_accessibility_button, <span class="keyword">false</span> <span class="comment">/* hasShadow */</span>);</div><div class="line">        mImeIcon = getDrawable(lightContext, darkContext, R.drawable.ic_ime_switcher_default,</div><div class="line">                <span class="keyword">false</span> <span class="comment">/* hasShadow */</span>);</div><div class="line">        updateRotateSuggestionButtonStyle(mRotateBtnStyle, <span class="keyword">false</span>);</div><div class="line">        <span class="keyword">if</span> (ALTERNATE_CAR_MODE_UI) &#123;</div><div class="line">            updateCarModeIcons(ctx);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> KeyButtonDrawable <span class="title">getBackDrawable</span><span class="params">(Context lightContext, Context darkContext)</span> </span>&#123;</div><div class="line">    KeyButtonDrawable drawable = chooseNavigationIconDrawable(lightContext, darkContext,</div><div class="line">            R.drawable.ic_sysbar_back, R.drawable.ic_sysbar_back_quick_step);</div><div class="line">    orientBackButton(drawable);</div><div class="line">    <span class="keyword">return</span> drawable;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">orientBackButton</span><span class="params">(KeyButtonDrawable drawable)</span> </span>&#123;</div><div class="line">    <span class="keyword">final</span> <span class="keyword">boolean</span> useAltBack =</div><div class="line">        (mNavigationIconHints &amp; StatusBarManager.NAVIGATION_HINT_BACK_ALT) != <span class="number">0</span>;</div><div class="line">    drawable.setRotation(useAltBack</div><div class="line">            ? -<span class="number">90</span> : (getLayoutDirection() == View.LAYOUT_DIRECTION_RTL) ? <span class="number">180</span> : <span class="number">0</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>这里看到 NavigationBar icon 加载，点击事件在哪里写了呢？看 NavigationBarFragment#onViewCreated。</p><h2 id="NavigationBarFragment-onViewCreated"><a href="#NavigationBarFragment-onViewCreated" class="headerlink" title="NavigationBarFragment#onViewCreated"></a>NavigationBarFragment#onViewCreated</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onViewCreated</span><span class="params">(View view, @Nullable Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">    <span class="keyword">super</span>.onViewCreated(view, savedInstanceState);</div><div class="line">    mNavigationBarView = (NavigationBarView) view;</div><div class="line">    <span class="comment">//省略其他代码</span></div><div class="line">    prepareNavigationBarView();</div><div class="line">    <span class="comment">//省略其他代码</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">prepareNavigationBarView</span><span class="params">()</span> </span>&#123;</div><div class="line">    mNavigationBarView.reorient();</div><div class="line">    ButtonDispatcher recentsButton = mNavigationBarView.getRecentsButton();</div><div class="line">    recentsButton.setOnClickListener(<span class="keyword">this</span>::onRecentsClick);</div><div class="line">    recentsButton.setOnTouchListener(<span class="keyword">this</span>::onRecentsTouch);</div><div class="line">    recentsButton.setLongClickable(<span class="keyword">true</span>);</div><div class="line">    recentsButton.setOnLongClickListener(<span class="keyword">this</span>::onLongPressBackRecents);</div><div class="line">    ButtonDispatcher backButton = mNavigationBarView.getBackButton();</div><div class="line">    backButton.setLongClickable(<span class="keyword">true</span>);</div><div class="line">    ButtonDispatcher homeButton = mNavigationBarView.getHomeButton();</div><div class="line">    homeButton.setOnTouchListener(<span class="keyword">this</span>::onHomeTouch);</div><div class="line">    homeButton.setOnLongClickListener(<span class="keyword">this</span>::onHomeLongClick);</div><div class="line">    ButtonDispatcher accessibilityButton = mNavigationBarView.getAccessibilityButton();</div><div class="line">    accessibilityButton.setOnClickListener(<span class="keyword">this</span>::onAccessibilityClick);</div><div class="line">    accessibilityButton.setOnLongClickListener(<span class="keyword">this</span>::onAccessibilityLongClick);</div><div class="line">    updateAccessibilityServicesState(mAccessibilityManager);</div><div class="line">    ButtonDispatcher rotateSuggestionButton = mNavigationBarView.getRotateSuggestionButton();</div><div class="line">    rotateSuggestionButton.setOnClickListener(<span class="keyword">this</span>::onRotateSuggestionClick);</div><div class="line">    rotateSuggestionButton.setOnHoverListener(<span class="keyword">this</span>::onRotateSuggestionHover);</div><div class="line">    updateScreenPinningGestures();</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>从 mButtonDispatchers 获得 recents、back、home，然后设置点击、长按等事件，比如 onRecentsClick 方法：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">onRecentsClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (LatencyTracker.isEnabled(getContext())) &#123;</div><div class="line">        LatencyTracker.getInstance(getContext()).onActionStart(</div><div class="line">                LatencyTracker.ACTION_TOGGLE_RECENTS);</div><div class="line">    &#125;</div><div class="line">    mStatusBar.awakenDreams();</div><div class="line">    mCommandQueue.toggleRecentApps();</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>至此，SystemUI NavigationBar 模块代码流程分析完毕。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;导航栏有返回(back)，桌面（home），最近任务（recent），本篇主要学习这三个是如何加载的，点击事件在哪里写的？基于 AOSP 9.0 分析。&lt;/p&gt;
&lt;p&gt;NavigationBar 创建是从 StatusBar#makeStatusBarView 开始的。&lt;/p&gt;
&lt;h2 id=&quot;StatusBar-makeStatusBarView&quot;&gt;&lt;a href=&quot;#StatusBar-makeStatusBarView&quot; class=&quot;headerlink&quot; title=&quot;StatusBar#makeStatusBarView&quot;&gt;&lt;/a&gt;StatusBar#makeStatusBarView&lt;/h2&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;makeStatusBarView&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//省略其他代码&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; showNav = mWindowManagerService.hasNavigationBar();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (DEBUG) Log.v(TAG, &lt;span class=&quot;string&quot;&gt;&quot;hasNavigationBar=&quot;&lt;/span&gt; + showNav);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (showNav) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            createNavigationBar();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (RemoteException ex) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// no window manager? good luck with that&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//省略其他代码&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;createNavigationBar&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    mNavigationBarView = NavigationBarFragment.create(mContext, (tag, fragment) -&amp;gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mNavigationBar = (NavigationBarFragment) fragment;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mLightBarController != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            mNavigationBar.setLightBarController(mLightBarController);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mNavigationBar.setCurrentSysuiVisibility(mSystemUiVisibility);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="SystemUI" scheme="http://wuxiaolong.github.io/categories/SystemUI/"/>
    
    
      <category term="SystemUI" scheme="http://wuxiaolong.github.io/tags/SystemUI/"/>
    
  </entry>
  
  <entry>
    <title>Android 9.0 SystemUI Notification</title>
    <link href="http://wuxiaolong.github.io/2019/08/12/SystemUI4/"/>
    <id>http://wuxiaolong.github.io/2019/08/12/SystemUI4/</id>
    <published>2019-08-12T01:54:41.000Z</published>
    <updated>2020-10-28T14:11:06.459Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要分享 SystemUI Notification 具体如何呈现的？基于 AOSP 9.0 分析。</p><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p><img src="/images/StatusBar5.png" alt=""><br>在《Android 9.0 SystemUI 主要视图 SystemBars》知道通知在折叠时状态栏、下拉状态栏、锁屏都有通知，其中锁屏和下拉状态栏是一个布局，折叠状态栏 是在 <code>CollapsedStatusBarFragment，status_bar.xml，PhoneStatusBarView</code>，锁屏是 <code>NotificationStackScrollLayout，@+id/notification_stack_scroller</code>，先来看看锁屏的通知，NotificationStackScrollLayout 是 ViewGroup，如果来了条通知，肯定是有地方进行 addView，我们就沿着这个思路去 AOSP 寻找答案。</p><a id="more"></a><h2 id="序列图"><a href="#序列图" class="headerlink" title="序列图"></a>序列图</h2><p><img src="/images/StatusBar6.png" alt=""><br>序列图为来通知到 SystemUI 锁屏通知呈现整个流程。</p><h2 id="锁屏通知"><a href="#锁屏通知" class="headerlink" title="锁屏通知"></a>锁屏通知</h2><h2 id="NotificationStackScrollLayout-addContainerView"><a href="#NotificationStackScrollLayout-addContainerView" class="headerlink" title="NotificationStackScrollLayout#addContainerView"></a>NotificationStackScrollLayout#addContainerView</h2><p>锁屏是 NotificationStackScrollLayout，直接找 NotificationStackScrollLayout，看到有个 addContainerView方法，一看，果然是目标 addView：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addContainerView</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">    addView(v);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>反查，看到  addContainerView 被 NotificationViewHierarchyManager#updateNotificationViews 方法调用了。</p><h3 id="NotificationViewHierarchyManager-updateNotificationViews"><a href="#NotificationViewHierarchyManager-updateNotificationViews" class="headerlink" title="NotificationViewHierarchyManager#updateNotificationViews"></a>NotificationViewHierarchyManager#updateNotificationViews</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateNotificationViews</span><span class="params">()</span> </span>&#123;</div><div class="line">    ArrayList&lt;NotificationData.Entry&gt; activeNotifications = mEntryManager.getNotificationData()</div><div class="line">            .getActiveNotifications();</div><div class="line">    ArrayList&lt;ExpandableNotificationRow&gt; toShow = <span class="keyword">new</span> ArrayList&lt;&gt;(activeNotifications.size());</div><div class="line">   <span class="comment">//省略其他代码</span></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; toShow.size(); i++) &#123;</div><div class="line">        View v = toShow.get(i);</div><div class="line">        <span class="keyword">if</span> (v.getParent() == <span class="keyword">null</span>) &#123;</div><div class="line">            mVisualStabilityManager.notifyViewAddition(v);</div><div class="line">            mListContainer.addContainerView(v);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">   <span class="comment">//省略其他代码</span></div><div class="line">&#125;</div></pre></td></tr></table></figure><p>这里 mListContainer 是 NotificationListContainer，NotificationStackScrollLayout#addContainerView 进行了重写。</p><p>反查， NotificationViewHierarchyManager#updateNotificationViews 被 StatusBar#updateNotificationViews 方法调用了。</p><h3 id="StatusBar-updateNotificationViews"><a href="#StatusBar-updateNotificationViews" class="headerlink" title="StatusBar#updateNotificationViews"></a>StatusBar#updateNotificationViews</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateNotificationViews</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="comment">//省略其他代码</span></div><div class="line">    mViewHierarchyManager.updateNotificationViews();</div><div class="line">    <span class="comment">//省略其他代码</span></div><div class="line">    <span class="comment">//这里和折叠状态栏相关</span></div><div class="line">    mNotificationIconAreaController.updateNotificationIcons();</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>StatusBar#updateNotificationViews 被 NotificationEntryManager#updateNotifications 调用了。</p><h3 id="NotificationEntryManager-updateNotifications"><a href="#NotificationEntryManager-updateNotifications" class="headerlink" title="NotificationEntryManager#updateNotifications"></a>NotificationEntryManager#updateNotifications</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateNotifications</span><span class="params">()</span> </span>&#123;</div><div class="line">    mNotificationData.filterAndSort();</div><div class="line">    mPresenter.updateNotificationViews();</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>presenter 是 NotificationPresenter 对象，从 StatusBar#makeStatusBarView 传过来了，继续看 NotificationEntryManager#updateNotifications 哪里被调用了，是 NotificationEntryManager#addNotificationViews。</p><h3 id="NotificationEntryManager-addNotificationViews"><a href="#NotificationEntryManager-addNotificationViews" class="headerlink" title="NotificationEntryManager#addNotificationViews"></a>NotificationEntryManager#addNotificationViews</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">addNotificationViews</span><span class="params">(NotificationData.Entry entry)</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (entry == <span class="keyword">null</span>) &#123;</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// Add the expanded view and icon.</span></div><div class="line">    mNotificationData.add(entry);</div><div class="line">    tagForeground(entry.notification);</div><div class="line">    updateNotifications();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//NotificationEntryManager#addNotificationViews 由 addEntry 调用了</span></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">addEntry</span><span class="params">(NotificationData.Entry shadeEntry)</span> </span>&#123;</div><div class="line">    <span class="keyword">boolean</span> isHeadsUped = shouldPeek(shadeEntry);</div><div class="line">    <span class="keyword">if</span> (isHeadsUped) &#123;</div><div class="line">        mHeadsUpManager.showNotification(shadeEntry);</div><div class="line">        <span class="comment">// Mark as seen immediately</span></div><div class="line">        setNotificationShown(shadeEntry.notification);</div><div class="line">    &#125;</div><div class="line">    addNotificationViews(shadeEntry);</div><div class="line">    mCallback.onNotificationAdded(shadeEntry);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>NotificationEntryManager#addEntry 由 NotificationEntryManager#onAsyncInflationFinished 调用了。</p><h3 id="NotificationEntryManager-onAsyncInflationFinished"><a href="#NotificationEntryManager-onAsyncInflationFinished" class="headerlink" title="NotificationEntryManager#onAsyncInflationFinished"></a>NotificationEntryManager#onAsyncInflationFinished</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAsyncInflationFinished</span><span class="params">(NotificationData.Entry entry)</span> </span>&#123;</div><div class="line">    mPendingNotifications.remove(entry.key);</div><div class="line">    <span class="comment">// If there was an async task started after the removal, we don't want to add it back to</span></div><div class="line">    <span class="comment">// the list, otherwise we might get leaks.</span></div><div class="line">    <span class="keyword">boolean</span> isNew = mNotificationData.get(entry.key) == <span class="keyword">null</span>;</div><div class="line">    <span class="keyword">if</span> (isNew &amp;&amp; !entry.row.isRemoved()) &#123;</div><div class="line">        addEntry(entry);</div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!isNew &amp;&amp; entry.row.hasLowPriorityStateUpdated()) &#123;</div><div class="line">        mVisualStabilityManager.onLowPriorityUpdated(entry);</div><div class="line">        mPresenter.updateNotificationViews();</div><div class="line">    &#125;</div><div class="line">    entry.row.setLowPriorityStateUpdated(<span class="keyword">false</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>问题来了，NotificationEntryManager#onAsyncInflationFinished 哪里被调到了，似乎断掉了，是怎么和来通知关联起来的？这得需要看看通知的流程。</p><h2 id="通知流程"><a href="#通知流程" class="headerlink" title="通知流程"></a>通知流程</h2><p>这部分分析按照正常的调用顺序来分析。</p><h3 id="NotificationManager-notify"><a href="#NotificationManager-notify" class="headerlink" title="NotificationManager#notify"></a>NotificationManager#notify</h3><p>NotificationManager 调用 notify 方法发送 notification，最后调用到 notifyAsUser() 方法：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@UnsupportedAppUsage</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">notifyAsUser</span><span class="params">(String tag, <span class="keyword">int</span> id, Notification notification, UserHandle user)</span></span></div><div class="line">&#123;</div><div class="line">    INotificationManager service = getService();</div><div class="line">    String pkg = mContext.getPackageName();</div><div class="line">    <span class="comment">// Fix the notification as best we can.</span></div><div class="line">    Notification.addFieldsFromContext(mContext, notification);</div><div class="line">    <span class="keyword">if</span> (notification.sound != <span class="keyword">null</span>) &#123;</div><div class="line">        notification.sound = notification.sound.getCanonicalUri();</div><div class="line">        <span class="keyword">if</span> (StrictMode.vmFileUriExposureEnabled()) &#123;</div><div class="line">            notification.sound.checkFileUriExposed(<span class="string">"Notification.sound"</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    fixLegacySmallIcon(notification, pkg);</div><div class="line">    <span class="keyword">if</span> (mContext.getApplicationInfo().targetSdkVersion &gt; Build.VERSION_CODES.LOLLIPOP_MR1) &#123;</div><div class="line">        <span class="keyword">if</span> (notification.getSmallIcon() == <span class="keyword">null</span>) &#123;</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Invalid notification (no valid small icon): "</span></div><div class="line">                    + notification);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (localLOGV) Log.v(TAG, pkg + <span class="string">": notify("</span> + id + <span class="string">", "</span> + notification + <span class="string">")"</span>);</div><div class="line">    notification.reduceImageSizes(mContext);</div><div class="line">    ActivityManager am = (ActivityManager) mContext.getSystemService(Context.ACTIVITY_SERVICE);</div><div class="line">    <span class="keyword">boolean</span> isLowRam = am.isLowRamDevice();</div><div class="line">    <span class="keyword">final</span> Notification copy = Builder.maybeCloneStrippedForDelivery(notification, isLowRam,</div><div class="line">            mContext);</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        service.enqueueNotificationWithTag(pkg, mContext.getOpPackageName(), tag, id,</div><div class="line">                copy, user.getIdentifier());</div><div class="line">    &#125; <span class="keyword">catch</span> (RemoteException e) &#123;</div><div class="line">        <span class="keyword">throw</span> e.rethrowFromSystemServer();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>这里 service 是 INotificationManager，对应的是 NotificationManagerService，看 NotificationManagerService#enqueueNotificationWithTag，又调用了 NotificationManagerService#enqueueNotificationInternal。</p><h3 id="NotificationManagerService-enqueueNotificationInternal"><a href="#NotificationManagerService-enqueueNotificationInternal" class="headerlink" title="NotificationManagerService#enqueueNotificationInternal"></a>NotificationManagerService#enqueueNotificationInternal</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">enqueueNotificationInternal</span><span class="params">(<span class="keyword">final</span> String pkg, <span class="keyword">final</span> String opPkg, <span class="keyword">final</span> <span class="keyword">int</span> callingUid,</span></span></div><div class="line">        <span class="keyword">final</span> <span class="keyword">int</span> callingPid, <span class="keyword">final</span> String tag, <span class="keyword">final</span> <span class="keyword">int</span> id, <span class="keyword">final</span> Notification notification,</div><div class="line">        <span class="keyword">int</span> incomingUserId) &#123;</div><div class="line">    <span class="comment">//省略其他代码</span></div><div class="line">    <span class="keyword">final</span> NotificationRecord r = <span class="keyword">new</span> NotificationRecord(getContext(), n, channel);</div><div class="line">    r.setIsAppImportanceLocked(mRankingHelper.getIsAppImportanceLocked(pkg, callingUid));</div><div class="line">    <span class="comment">//省略其他代码</span></div><div class="line">    mHandler.post(<span class="keyword">new</span> EnqueueNotificationRunnable(userId, r));</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="EnqueueNotificationRunnable-run"><a href="#EnqueueNotificationRunnable-run" class="headerlink" title="EnqueueNotificationRunnable#run"></a>EnqueueNotificationRunnable#run</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">protected</span> <span class="class"><span class="keyword">class</span> <span class="title">EnqueueNotificationRunnable</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> NotificationRecord r;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> userId;</div><div class="line">    EnqueueNotificationRunnable(<span class="keyword">int</span> userId, NotificationRecord r) &#123;</div><div class="line">        <span class="keyword">this</span>.userId = userId;</div><div class="line">        <span class="keyword">this</span>.r = r;</div><div class="line">    &#125;;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">synchronized</span> (mNotificationLock) &#123;       </div><div class="line">            <span class="comment">// 省略其他代码</span></div><div class="line">            <span class="keyword">if</span> (mAssistants.isEnabled()) &#123;</div><div class="line">                mAssistants.onNotificationEnqueued(r);</div><div class="line">                mHandler.postDelayed(<span class="keyword">new</span> PostNotificationRunnable(r.getKey()),</div><div class="line">                        DELAY_FOR_ASSISTANT_TIME);</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                mHandler.post(<span class="keyword">new</span> PostNotificationRunnable(r.getKey()));</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="PostNotificationRunnable-run"><a href="#PostNotificationRunnable-run" class="headerlink" title="PostNotificationRunnable#run"></a>PostNotificationRunnable#run</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">protected</span> <span class="class"><span class="keyword">class</span> <span class="title">PostNotificationRunnable</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String key;</div><div class="line">    PostNotificationRunnable(String key) &#123;</div><div class="line">        <span class="keyword">this</span>.key = key;</div><div class="line">    &#125;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">synchronized</span> (mNotificationLock) &#123;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                <span class="comment">// 省略其他代码</span></div><div class="line">                <span class="keyword">if</span> (notification.getSmallIcon() != <span class="keyword">null</span>) &#123;</div><div class="line">                    StatusBarNotification oldSbn = (old != <span class="keyword">null</span>) ? old.sbn : <span class="keyword">null</span>;</div><div class="line">                    mListeners.notifyPostedLocked(r, old);</div><div class="line">                    <span class="keyword">if</span> (oldSbn == <span class="keyword">null</span> || !Objects.equals(oldSbn.getGroup(), n.getGroup())) &#123;</div><div class="line">                        mHandler.post(<span class="keyword">new</span> Runnable() &#123;</div><div class="line">                            <span class="meta">@Override</span></div><div class="line">                            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">                                mGroupHelper.onNotificationPosted(</div><div class="line">                                        n, hasAutoGroupSummaryLocked(n));</div><div class="line">                            &#125;</div><div class="line">                        &#125;);</div><div class="line">                    &#125;</div><div class="line">                &#125;  <span class="comment">// 省略其他代码</span></div><div class="line">            &#125; <span class="keyword">finally</span> &#123;</div><div class="line">                <span class="comment">// 省略其他代码</span></div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>mListeners 是 NotificationListeners，调用 NotificationManagerService#notifyPostedLocked。</p><h3 id="NotificationManagerService-notifyPostedLocked"><a href="#NotificationManagerService-notifyPostedLocked" class="headerlink" title="NotificationManagerService#notifyPostedLocked"></a>NotificationManagerService#notifyPostedLocked</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@GuardedBy</span>(<span class="string">"mNotificationLock"</span>)</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">notifyPostedLocked</span><span class="params">(NotificationRecord r, NotificationRecord old)</span> </span>&#123;</div><div class="line">    notifyPostedLocked(r, old, <span class="keyword">true</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">@GuardedBy</span>(<span class="string">"mNotificationLock"</span>)</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">notifyPostedLocked</span><span class="params">(NotificationRecord r, NotificationRecord old,</span></span></div><div class="line">        <span class="keyword">boolean</span> notifyAllListeners) &#123;</div><div class="line">    <span class="comment">// Lazily initialized snapshots of the notification.</span></div><div class="line">    StatusBarNotification sbn = r.sbn;</div><div class="line">    StatusBarNotification oldSbn = (old != <span class="keyword">null</span>) ? old.sbn : <span class="keyword">null</span>;</div><div class="line">    TrimCache trimCache = <span class="keyword">new</span> TrimCache(sbn);</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">final</span> ManagedServiceInfo info : getServices()) &#123;</div><div class="line">        <span class="comment">//省略其他代码</span></div><div class="line">        <span class="keyword">final</span> NotificationRankingUpdate update = makeRankingUpdateLocked(info);</div><div class="line">        <span class="comment">// This notification became invisible -&gt; remove the old one.</span></div><div class="line">        <span class="keyword">if</span> (oldSbnVisible &amp;&amp; !sbnVisible) &#123;</div><div class="line">            <span class="keyword">final</span> StatusBarNotification oldSbnLightClone = oldSbn.cloneLight();</div><div class="line">            mHandler.post(<span class="keyword">new</span> Runnable() &#123;</div><div class="line">                <span class="meta">@Override</span></div><div class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">                    notifyRemoved(</div><div class="line">                            info, oldSbnLightClone, update, <span class="keyword">null</span>, REASON_USER_STOPPED);</div><div class="line">                &#125;</div><div class="line">            &#125;);</div><div class="line">            <span class="keyword">continue</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">// Grant access before listener is notified</span></div><div class="line">        <span class="keyword">final</span> <span class="keyword">int</span> targetUserId = (info.userid == UserHandle.USER_ALL)</div><div class="line">                ? UserHandle.USER_SYSTEM : info.userid;</div><div class="line">        updateUriPermissions(r, old, info.component.getPackageName(), targetUserId);</div><div class="line">        <span class="keyword">final</span> StatusBarNotification sbnToPost = trimCache.ForListener(info);</div><div class="line">        mHandler.post(<span class="keyword">new</span> Runnable() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">                <span class="comment">//调用NotificationManagerService#notifyPosted</span></div><div class="line">                notifyPosted(info, sbnToPost, update);</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">notifyPosted</span><span class="params">(<span class="keyword">final</span> ManagedServiceInfo info,</span></span></div><div class="line">        <span class="keyword">final</span> StatusBarNotification sbn, NotificationRankingUpdate rankingUpdate) &#123;</div><div class="line">    <span class="keyword">final</span> INotificationListener listener = (INotificationListener) info.service;</div><div class="line">    StatusBarNotificationHolder sbnHolder = <span class="keyword">new</span> StatusBarNotificationHolder(sbn);</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        listener.onNotificationPosted(sbnHolder, rankingUpdate);</div><div class="line">    &#125; <span class="keyword">catch</span> (RemoteException ex) &#123;</div><div class="line">        Log.e(TAG, <span class="string">"unable to notify listener (posted): "</span> + listener, ex);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>这里 service 是 INotificationListener，对应的是 NotificationListenerWrapper，看 NotificationListenerWrapper#onNotificationPosted。</p><h3 id="NotificationListenerWrapper-onNotificationPosted"><a href="#NotificationListenerWrapper-onNotificationPosted" class="headerlink" title="NotificationListenerWrapper#onNotificationPosted"></a>NotificationListenerWrapper#onNotificationPosted</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">protected</span> <span class="class"><span class="keyword">class</span> <span class="title">NotificationListenerWrapper</span> <span class="keyword">extends</span> <span class="title">INotificationListener</span>.<span class="title">Stub</span> </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onNotificationPosted</span><span class="params">(IStatusBarNotificationHolder sbnHolder,</span></span></div><div class="line">            NotificationRankingUpdate update) &#123;</div><div class="line">        StatusBarNotification sbn;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            sbn = sbnHolder.get();</div><div class="line">        &#125; <span class="keyword">catch</span> (RemoteException e) &#123;</div><div class="line">            Log.w(TAG, <span class="string">"onNotificationPosted: Error receiving StatusBarNotification"</span>, e);</div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="comment">// convert icon metadata to legacy format for older clients</span></div><div class="line">            createLegacyIconExtras(sbn.getNotification());</div><div class="line">            maybePopulateRemoteViews(sbn.getNotification());</div><div class="line">            maybePopulatePeople(sbn.getNotification());</div><div class="line">        &#125; <span class="keyword">catch</span> (IllegalArgumentException e) &#123;</div><div class="line">            <span class="comment">// warn and drop corrupt notification</span></div><div class="line">            Log.w(TAG, <span class="string">"onNotificationPosted: can't rebuild notification from "</span> +</div><div class="line">                    sbn.getPackageName());</div><div class="line">            sbn = <span class="keyword">null</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">// protect subclass from concurrent modifications of (@link mNotificationKeys&#125;.</span></div><div class="line">        <span class="keyword">synchronized</span> (mLock) &#123;</div><div class="line">            applyUpdateLocked(update);</div><div class="line">            <span class="keyword">if</span> (sbn != <span class="keyword">null</span>) &#123;</div><div class="line">                SomeArgs args = SomeArgs.obtain();</div><div class="line">                args.arg1 = sbn;</div><div class="line">                args.arg2 = mRankingMap;</div><div class="line">                mHandler.obtainMessage(MyHandler.MSG_ON_NOTIFICATION_POSTED,</div><div class="line">                        args).sendToTarget();</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                <span class="comment">// still pass along the ranking map, it may contain other information</span></div><div class="line">                mHandler.obtainMessage(MyHandler.MSG_ON_NOTIFICATION_RANKING_UPDATE,</div><div class="line">                        mRankingMap).sendToTarget();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>看 MyHandler 处理中的 MSG_ON_NOTIFICATION_POSTED。</p><h3 id="MyHandler-handleMessage"><a href="#MyHandler-handleMessage" class="headerlink" title="MyHandler#handleMessage"></a>MyHandler#handleMessage</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">MyHandler</span> <span class="keyword">extends</span> <span class="title">Handler</span> </span>&#123;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MSG_ON_NOTIFICATION_POSTED = <span class="number">1</span>;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MSG_ON_NOTIFICATION_REMOVED = <span class="number">2</span>;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MSG_ON_LISTENER_CONNECTED = <span class="number">3</span>;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MSG_ON_NOTIFICATION_RANKING_UPDATE = <span class="number">4</span>;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MSG_ON_LISTENER_HINTS_CHANGED = <span class="number">5</span>;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MSG_ON_INTERRUPTION_FILTER_CHANGED = <span class="number">6</span>;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MSG_ON_NOTIFICATION_CHANNEL_MODIFIED = <span class="number">7</span>;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MSG_ON_NOTIFICATION_CHANNEL_GROUP_MODIFIED = <span class="number">8</span>;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyHandler</span><span class="params">(Looper looper)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>(looper, <span class="keyword">null</span>, <span class="keyword">false</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleMessage</span><span class="params">(Message msg)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (!isConnected) &#123;</div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">switch</span> (msg.what) &#123;</div><div class="line">            <span class="keyword">case</span> MSG_ON_NOTIFICATION_POSTED: &#123;</div><div class="line">                SomeArgs args = (SomeArgs) msg.obj;</div><div class="line">                StatusBarNotification sbn = (StatusBarNotification) args.arg1;</div><div class="line">                RankingMap rankingMap = (RankingMap) args.arg2;</div><div class="line">                args.recycle();</div><div class="line">                onNotificationPosted(sbn, rankingMap);</div><div class="line">            &#125; <span class="keyword">break</span>;</div><div class="line">           <span class="comment">//省略其他代码</span></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="NotificationListenerService-onNotificationPosted"><a href="#NotificationListenerService-onNotificationPosted" class="headerlink" title="NotificationListenerService#onNotificationPosted"></a>NotificationListenerService#onNotificationPosted</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onNotificationPosted</span><span class="params">(StatusBarNotification sbn, RankingMap rankingMap)</span> </span>&#123;</div><div class="line">    onNotificationPosted(sbn);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>NotificationListenerService 是抽象类，NotificationListenerService#onNotificationPosted 在 NotificationListener##onNotificationPosted 有重写。</p><h3 id="NotificationListener-onNotificationPosted"><a href="#NotificationListener-onNotificationPosted" class="headerlink" title="NotificationListener#onNotificationPosted"></a>NotificationListener#onNotificationPosted</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onNotificationPosted</span><span class="params">(<span class="keyword">final</span> StatusBarNotification sbn,</span></span></div><div class="line">        <span class="keyword">final</span> RankingMap rankingMap) &#123;</div><div class="line">    <span class="keyword">if</span> (DEBUG) Log.d(TAG, <span class="string">"onNotificationPosted: "</span> + sbn);</div><div class="line">    <span class="keyword">if</span> (sbn != <span class="keyword">null</span> &amp;&amp; !onPluginNotificationPosted(sbn, rankingMap)) &#123;</div><div class="line">        mPresenter.getHandler().post(() -&gt; &#123;</div><div class="line">            <span class="comment">//省略其他代码</span></div><div class="line">            <span class="keyword">if</span> (isUpdate) &#123;</div><div class="line">                mEntryManager.updateNotification(sbn, rankingMap);</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                mEntryManager.addNotification(sbn, rankingMap);</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>调用了 NotificationEntryManager#addNotification。</p><h3 id="NotificationEntryManager-addNotification"><a href="#NotificationEntryManager-addNotification" class="headerlink" title="NotificationEntryManager#addNotification"></a>NotificationEntryManager#addNotification</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addNotification</span><span class="params">(StatusBarNotification notification,</span></span></div><div class="line">        NotificationListenerService.RankingMap ranking) &#123;</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        addNotificationInternal(notification, ranking);</div><div class="line">    &#125; <span class="keyword">catch</span> (InflationException e) &#123;</div><div class="line">        handleInflationException(notification, e);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">addNotificationInternal</span><span class="params">(StatusBarNotification notification,</span></span></div><div class="line">        NotificationListenerService.RankingMap ranking) <span class="keyword">throws</span> InflationException &#123;</div><div class="line">    String key = notification.getKey();</div><div class="line">    <span class="keyword">if</span> (DEBUG) Log.d(TAG, <span class="string">"addNotification key="</span> + key);</div><div class="line">    mNotificationData.updateRanking(ranking);</div><div class="line">    <span class="comment">//继续看 createNotificationViews</span></div><div class="line">    NotificationData.Entry shadeEntry = createNotificationViews(notification);</div><div class="line">    <span class="comment">//省略其他代码</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">protected</span> NotificationData.<span class="function">Entry <span class="title">createNotificationViews</span><span class="params">(StatusBarNotification sbn)</span></span></div><div class="line">        <span class="keyword">throws</span> InflationException &#123;</div><div class="line">    <span class="keyword">if</span> (DEBUG) &#123;</div><div class="line">        Log.d(TAG, <span class="string">"createNotificationViews(notification="</span> + sbn);</div><div class="line">    &#125;</div><div class="line">    NotificationData.Entry entry = <span class="keyword">new</span> NotificationData.Entry(sbn);</div><div class="line">    Dependency.get(LeakDetector.class).trackInstance(entry);</div><div class="line">    entry.createIcons(mContext, sbn);</div><div class="line">    <span class="comment">// Construct the expanded view.</span></div><div class="line">    inflateViews(entry, mListContainer.getViewParentForNotification(entry));</div><div class="line">    <span class="keyword">return</span> entry;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>从 NotificationEntryManager#addNotification 到 NotificationEntryManager#addNotificationInternal 再到 NotificationEntryManager#inflateViews 方法。</p><h3 id="NotificationEntryManager-inflateViews"><a href="#NotificationEntryManager-inflateViews" class="headerlink" title="NotificationEntryManager#inflateViews"></a>NotificationEntryManager#inflateViews</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">inflateViews</span><span class="params">(NotificationData.Entry entry, ViewGroup parent)</span> </span>&#123;</div><div class="line">    PackageManager pmUser = StatusBar.getPackageManagerForUser(mContext,</div><div class="line">            entry.notification.getUser().getIdentifier());</div><div class="line">    <span class="keyword">final</span> StatusBarNotification sbn = entry.notification;</div><div class="line">    <span class="keyword">if</span> (entry.row != <span class="keyword">null</span>) &#123;</div><div class="line">        entry.reset();</div><div class="line">        updateNotification(entry, pmUser, sbn, entry.row);</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="comment">//来通知会走到这里</span></div><div class="line">        <span class="keyword">new</span> RowInflaterTask().inflate(mContext, parent, entry,</div><div class="line">                row -&gt; &#123;</div><div class="line">                    bindRow(entry, pmUser, sbn, row);</div><div class="line">                    updateNotification(entry, pmUser, sbn, row);</div><div class="line">                &#125;);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="RowInflaterTask-inflate"><a href="#RowInflaterTask-inflate" class="headerlink" title="RowInflaterTask#inflate"></a>RowInflaterTask#inflate</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">inflate</span><span class="params">(Context context, ViewGroup parent, NotificationData.Entry entry,</span></span></div><div class="line">        RowInflationFinishedListener listener) &#123;</div><div class="line">    <span class="keyword">if</span> (TRACE_ORIGIN) &#123;</div><div class="line">        mInflateOrigin = <span class="keyword">new</span> Throwable(<span class="string">"inflate requested here"</span>);</div><div class="line">    &#125;</div><div class="line">    mListener = listener;</div><div class="line">    AsyncLayoutInflater inflater = <span class="keyword">new</span> AsyncLayoutInflater(context);</div><div class="line">    mEntry = entry;</div><div class="line">    entry.setInflationTask(<span class="keyword">this</span>);</div><div class="line">    <span class="comment">//这里是Notification布局文件</span></div><div class="line">    inflater.inflate(R.layout.status_bar_notification_row, parent, <span class="keyword">this</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>再看 RowInflaterTask#onInflateFinished：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onInflateFinished</span><span class="params">(View view, <span class="keyword">int</span> resid, ViewGroup parent)</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (!mCancelled) &#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            mEntry.onInflationTaskFinished();</div><div class="line">            <span class="comment">//1. 调 RowInflationFinishedListener#onInflationFinished</span></div><div class="line">            mListener.onInflationFinished((ExpandableNotificationRow) view);</div><div class="line">        &#125; <span class="keyword">catch</span> (Throwable t) &#123;</div><div class="line">            <span class="keyword">if</span> (mInflateOrigin != <span class="keyword">null</span>) &#123;</div><div class="line">                Log.e(TAG, <span class="string">"Error in inflation finished listener: "</span> + t, mInflateOrigin);</div><div class="line">                t.addSuppressed(mInflateOrigin);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">throw</span> t;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RowInflationFinishedListener</span> </span>&#123;</div><div class="line">    <span class="comment">//2. 在 NotificationEntryManager#row 实现</span></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">onInflationFinished</span><span class="params">(ExpandableNotificationRow row)</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>看 NotificationEntryManager#row 会调用 bindRow 和 updateNotification，看 updateNotification方法最终会调用 ExpandableNotificationRow#updateNotification。</p><h3 id="ExpandableNotificationRow-updateNotification"><a href="#ExpandableNotificationRow-updateNotification" class="headerlink" title="ExpandableNotificationRow#updateNotification"></a>ExpandableNotificationRow#updateNotification</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateNotification</span><span class="params">(NotificationData.Entry entry)</span> </span>&#123;</div><div class="line">    mEntry = entry;</div><div class="line">    mStatusBarNotification = entry.notification;</div><div class="line">    mNotificationInflater.inflateNotificationViews();</div><div class="line">    cacheIsSystemNotification();</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>继续跟，到 NotificationInflater#inflateNotificationViews。</p><h3 id="NotificationInflater-inflateNotificationViews"><a href="#NotificationInflater-inflateNotificationViews" class="headerlink" title="NotificationInflater#inflateNotificationViews"></a>NotificationInflater#inflateNotificationViews</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@VisibleForTesting</span></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">inflateNotificationViews</span><span class="params">(<span class="keyword">int</span> reInflateFlags)</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (mRow.isRemoved()) &#123;</div><div class="line">       <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line">    StatusBarNotification sbn = mRow.getEntry().notification;</div><div class="line">    AsyncInflationTask task = <span class="keyword">new</span> AsyncInflationTask(sbn, reInflateFlags, mRow,</div><div class="line">            mIsLowPriority,</div><div class="line">            mIsChildInGroup, mUsesIncreasedHeight, mUsesIncreasedHeadsUpHeight, mRedactAmbient,</div><div class="line">            mCallback, mRemoteViewClickHandler);</div><div class="line">    <span class="keyword">if</span> (mCallback != <span class="keyword">null</span> &amp;&amp; mCallback.doInflateSynchronous()) &#123;</div><div class="line">        task.onPostExecute(task.doInBackground());</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        task.execute();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>看 AsyncInflationTask 执行的结果：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">AsyncInflationTask</span> <span class="keyword">extends</span> <span class="title">AsyncTask</span>&lt;<span class="title">Void</span>, <span class="title">Void</span>, <span class="title">InflationProgress</span>&gt;</span></div><div class="line">        <span class="keyword">implements</span> <span class="title">InflationCallback</span>, <span class="title">InflationTask</span> &#123;</div><div class="line">       <span class="comment">//省略其他代码</span></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> InflationProgress <span class="title">doInBackground</span><span class="params">(Void... params)</span> </span>&#123;</div><div class="line">        <span class="comment">//省略其他代码</span></div><div class="line">    &#125;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onPostExecute</span><span class="params">(InflationProgress result)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (mError == <span class="keyword">null</span>) &#123;</div><div class="line">            mCancellationSignal = apply(result, mReInflateFlags, mRow, mRedactAmbient,</div><div class="line">                    mRemoteViewClickHandler, <span class="keyword">this</span>);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            handleError(mError);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>调用 NotificationInflater#apply，最终会到 NotificationInflater#applyRemoteView<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@VisibleForTesting</span></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">applyRemoteView</span><span class="params">(<span class="keyword">final</span> InflationProgress result,</span></span></div><div class="line">        <span class="keyword">final</span> <span class="keyword">int</span> reInflateFlags, <span class="keyword">int</span> inflationId,</div><div class="line">        <span class="keyword">final</span> ExpandableNotificationRow row,</div><div class="line">        <span class="keyword">final</span> <span class="keyword">boolean</span> redactAmbient, <span class="keyword">boolean</span> isNewView,</div><div class="line">        RemoteViews.OnClickHandler remoteViewClickHandler,</div><div class="line">        @Nullable <span class="keyword">final</span> InflationCallback callback, NotificationData.Entry entry,</div><div class="line">        NotificationContentView parentLayout, View existingView,</div><div class="line">        NotificationViewWrapper existingWrapper,</div><div class="line">        <span class="keyword">final</span> HashMap&lt;Integer, CancellationSignal&gt; runningInflations,</div><div class="line">        ApplyCallback applyCallback) &#123;</div><div class="line">    RemoteViews newContentView = applyCallback.getRemoteView();</div><div class="line">    <span class="comment">//省略其他代码</span></div><div class="line">    RemoteViews.OnViewAppliedListener listener</div><div class="line">            = <span class="keyword">new</span> RemoteViews.OnViewAppliedListener() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onViewApplied</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">            <span class="keyword">if</span> (isNewView) &#123;</div><div class="line">                v.setIsRootNamespace(<span class="keyword">true</span>);</div><div class="line">                applyCallback.setResultView(v);</div><div class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (existingWrapper != <span class="keyword">null</span>) &#123;</div><div class="line">                existingWrapper.onReinflated();</div><div class="line">            &#125;</div><div class="line">            runningInflations.remove(inflationId);</div><div class="line">            finishIfDone(result, reInflateFlags, runningInflations, callback, row,</div><div class="line">                    redactAmbient);</div><div class="line">        &#125;</div><div class="line">        <span class="comment">//</span></div><div class="line">    &#125;;</div><div class="line">    CancellationSignal cancellationSignal;</div><div class="line">    <span class="keyword">if</span> (isNewView) &#123;</div><div class="line">        <span class="comment">//调用RemoteViews#applyAsync，最终回调了上面的onViewApplied方法。</span></div><div class="line">        cancellationSignal = newContentView.applyAsync(</div><div class="line">                result.packageContext,</div><div class="line">                parentLayout,</div><div class="line">                EXECUTOR,</div><div class="line">                listener,</div><div class="line">                remoteViewClickHandler);</div><div class="line">    &#125;<span class="comment">//省略其他代码</span></div><div class="line">    runningInflations.put(inflationId, cancellationSignal);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>继续看 NotificationInflater#finishIfDone，这个方法看到最后的<code>endListener.onAsyncInflationFinished(row.getEntry());</code> 实现方法在 NotificationEntryManager#onAsyncInflationFinished。</p><h3 id="NotificationEntryManager-onAsyncInflationFinished-1"><a href="#NotificationEntryManager-onAsyncInflationFinished-1" class="headerlink" title="NotificationEntryManager#onAsyncInflationFinished"></a>NotificationEntryManager#onAsyncInflationFinished</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAsyncInflationFinished</span><span class="params">(NotificationData.Entry entry)</span> </span>&#123;</div><div class="line">    mPendingNotifications.remove(entry.key);</div><div class="line">    <span class="comment">// If there was an async task started after the removal, we don't want to add it back to</span></div><div class="line">    <span class="comment">// the list, otherwise we might get leaks.</span></div><div class="line">    <span class="keyword">boolean</span> isNew = mNotificationData.get(entry.key) == <span class="keyword">null</span>;</div><div class="line">    <span class="keyword">if</span> (isNew &amp;&amp; !entry.row.isRemoved()) &#123;</div><div class="line">        addEntry(entry);</div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!isNew &amp;&amp; entry.row.hasLowPriorityStateUpdated()) &#123;</div><div class="line">        mVisualStabilityManager.onLowPriorityUpdated(entry);</div><div class="line">        mPresenter.updateNotificationViews();</div><div class="line">    &#125;</div><div class="line">    entry.row.setLowPriorityStateUpdated(<span class="keyword">false</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>这里的 addEntry 方法调用了addNotificationViews，好了，终于和 SystemUI 的通知关联起来了，这样，锁屏来通知分析结束。</p><h2 id="折叠状态栏通知"><a href="#折叠状态栏通知" class="headerlink" title="折叠状态栏通知"></a>折叠状态栏通知</h2><p>有了以上锁屏通知分析，再来分析折叠状态栏通知就简单很多了，先看来折叠状态栏初始化部分。</p><h3 id="status-bar-xml"><a href="#status-bar-xml" class="headerlink" title="status_bar.xml"></a>status_bar.xml</h3><p>折叠状态栏对应的布局文件是 status_bar.xml：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">com.android.systemui.statusbar.AlphaOptimizedFrameLayout</span></span></div><div class="line">    <span class="attr">android:id</span>=<span class="string">"@+id/notification_icon_area"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"0dp"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_weight</span>=<span class="string">"1"</span></div><div class="line">    <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span></div><div class="line">    <span class="attr">android:clipChildren</span>=<span class="string">"false"</span>/&gt;</div></pre></td></tr></table></figure></p><p>如果来通知，就在 notification_icon_area 进行 addView 填充。再看看代码初始化。</p><h3 id="StatusBar-makeStatusBarView"><a href="#StatusBar-makeStatusBarView" class="headerlink" title="StatusBar#makeStatusBarView"></a>StatusBar#makeStatusBarView</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//NotificationIconAreaController 初始化</span></div><div class="line">mNotificationIconAreaController = SystemUIFactory.getInstance()</div><div class="line">        .createNotificationIconAreaController(context, <span class="keyword">this</span>);</div><div class="line">inflateShelf();</div><div class="line">mNotificationIconAreaController.setupShelf(mNotificationShelf);</div><div class="line">mStackScroller.setIconAreaController(mNotificationIconAreaController);</div><div class="line">Dependency.get(DarkIconDispatcher.class).addDarkReceiver(mNotificationIconAreaController);</div><div class="line">FragmentHostManager.get(mStatusBarWindow)</div><div class="line">        .addTagListener(CollapsedStatusBarFragment.TAG, (tag, fragment) -&gt; &#123;</div><div class="line">            CollapsedStatusBarFragment statusBarFragment =</div><div class="line">                    (CollapsedStatusBarFragment) fragment;</div><div class="line">            statusBarFragment.initNotificationIconArea(mNotificationIconAreaController);</div><div class="line">            <span class="comment">//省略其他代码</span></div><div class="line">        &#125;).getFragmentManager()</div><div class="line">        .beginTransaction()</div><div class="line">        .replace(R.id.status_bar_container, <span class="keyword">new</span> CollapsedStatusBarFragment(),</div><div class="line">                CollapsedStatusBarFragment.TAG)</div><div class="line">        .commit();</div></pre></td></tr></table></figure><h3 id="CollapsedStatusBarFragment-initNotificationIconArea"><a href="#CollapsedStatusBarFragment-initNotificationIconArea" class="headerlink" title="CollapsedStatusBarFragment#initNotificationIconArea"></a>CollapsedStatusBarFragment#initNotificationIconArea</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initNotificationIconArea</span><span class="params">(NotificationIconAreaController</span></span></div><div class="line">        notificationIconAreaController) &#123;</div><div class="line">    ViewGroup notificationIconArea = mStatusBar.findViewById(R.id.notification_icon_area);</div><div class="line">    mNotificationIconAreaInner =</div><div class="line">            notificationIconAreaController.getNotificationInnerAreaView();</div><div class="line">    <span class="keyword">if</span> (mNotificationIconAreaInner.getParent() != <span class="keyword">null</span>) &#123;</div><div class="line">        ((ViewGroup) mNotificationIconAreaInner.getParent())</div><div class="line">                .removeView(mNotificationIconAreaInner);</div><div class="line">    &#125;</div><div class="line">    notificationIconArea.addView(mNotificationIconAreaInner);</div><div class="line">    <span class="comment">// Default to showing until we know otherwise.</span></div><div class="line">    showNotificationIconArea(<span class="keyword">false</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>看到这里的<code>notificationIconArea.addView(mNotificationIconAreaInner);</code> ，notificationIconArea 被 mNotificationIconAreaInner 填充，因此我们要重点关注 NotificationIconAreaController 什么时候被填充。</p><p>有以上锁屏通知分析知道有通知来最后会调用 StatusBar#updateNotificationViews。</p><h3 id="StatusBar-updateNotificationViews-1"><a href="#StatusBar-updateNotificationViews-1" class="headerlink" title="StatusBar#updateNotificationViews"></a>StatusBar#updateNotificationViews</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateNotificationViews</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="comment">// 省略其他代码</span></div><div class="line">    mNotificationIconAreaController.updateNotificationIcons();</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>调用 NotificationIconAreaController#updateNotificationIcons。</p><h3 id="NotificationIconAreaController-updateNotificationIcons"><a href="#NotificationIconAreaController-updateNotificationIcons" class="headerlink" title="NotificationIconAreaController#updateNotificationIcons"></a>NotificationIconAreaController#updateNotificationIcons</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateNotificationIcons</span><span class="params">()</span> </span>&#123;</div><div class="line">    updateStatusBarIcons();</div><div class="line">    updateShelfIcons();</div><div class="line">    updateHasShelfIconsWhenFullyDark();</div><div class="line">    applyNotificationIconsTint();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateStatusBarIcons</span><span class="params">()</span> </span>&#123;</div><div class="line">    updateIconsForLayout(entry -&gt; entry.icon, mNotificationIcons,</div><div class="line">            <span class="keyword">false</span> <span class="comment">/* showAmbient */</span>, <span class="keyword">true</span> <span class="comment">/* hideDismissed */</span>, <span class="keyword">true</span> <span class="comment">/* hideRepliedMessages */</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">updateIconsForLayout</span><span class="params">(Function&lt;NotificationData.Entry, StatusBarIconView&gt; function,</span></span></div><div class="line">        NotificationIconContainer hostLayout, <span class="keyword">boolean</span> showAmbient, <span class="keyword">boolean</span> hideDismissed,</div><div class="line">        <span class="keyword">boolean</span> hideRepliedMessages) &#123;</div><div class="line">    ArrayList&lt;StatusBarIconView&gt; toShow = <span class="keyword">new</span> ArrayList&lt;&gt;(</div><div class="line">            mNotificationScrollLayout.getChildCount());</div><div class="line">    <span class="comment">//省略其他代码</span></div><div class="line">    <span class="keyword">final</span> FrameLayout.LayoutParams params = generateIconLayoutParams();</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; toShow.size(); i++) &#123;</div><div class="line">        StatusBarIconView v = toShow.get(i);</div><div class="line">        <span class="comment">// The view might still be transiently added if it was just removed and added again</span></div><div class="line">        hostLayout.removeTransientView(v);</div><div class="line">        <span class="keyword">if</span> (v.getParent() == <span class="keyword">null</span>) &#123;</div><div class="line">            <span class="keyword">if</span> (hideDismissed) &#123;</div><div class="line">                v.setOnDismissListener(mUpdateStatusBarIcons);</div><div class="line">            &#125;</div><div class="line">            hostLayout.addView(v, i, params);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    hostLayout.setChangingViewPositions(<span class="keyword">true</span>);</div><div class="line">    <span class="comment">// Re-sort notification icons</span></div><div class="line">    <span class="keyword">final</span> <span class="keyword">int</span> childCount = hostLayout.getChildCount();</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; childCount; i++) &#123;</div><div class="line">        View actual = hostLayout.getChildAt(i);</div><div class="line">        StatusBarIconView expected = toShow.get(i);</div><div class="line">        <span class="keyword">if</span> (actual == expected) &#123;</div><div class="line">            <span class="keyword">continue</span>;</div><div class="line">        &#125;</div><div class="line">        hostLayout.removeView(expected);</div><div class="line">        hostLayout.addView(expected, i);</div><div class="line">    &#125;</div><div class="line">    hostLayout.setChangingViewPositions(<span class="keyword">false</span>);</div><div class="line">    hostLayout.setReplacingIcons(<span class="keyword">null</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>OK，折叠状态栏通知分析结束。</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>本篇梳理了 SystemUI Notification 大致流程，分为锁屏的通知和状态栏通知，代码很多，细节没有去纠结，省略了很多代码，有兴趣，可以自己去 AOSP 查看。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要分享 SystemUI Notification 具体如何呈现的？基于 AOSP 9.0 分析。&lt;/p&gt;
&lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/images/StatusBar5.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;在《Android 9.0 SystemUI 主要视图 SystemBars》知道通知在折叠时状态栏、下拉状态栏、锁屏都有通知，其中锁屏和下拉状态栏是一个布局，折叠状态栏 是在 &lt;code&gt;CollapsedStatusBarFragment，status_bar.xml，PhoneStatusBarView&lt;/code&gt;，锁屏是 &lt;code&gt;NotificationStackScrollLayout，@+id/notification_stack_scroller&lt;/code&gt;，先来看看锁屏的通知，NotificationStackScrollLayout 是 ViewGroup，如果来了条通知，肯定是有地方进行 addView，我们就沿着这个思路去 AOSP 寻找答案。&lt;/p&gt;
    
    </summary>
    
      <category term="SystemUI" scheme="http://wuxiaolong.github.io/categories/SystemUI/"/>
    
    
      <category term="SystemUI" scheme="http://wuxiaolong.github.io/tags/SystemUI/"/>
    
  </entry>
  
  <entry>
    <title>Android 9.0 SystemUI 下拉状态栏快捷开关</title>
    <link href="http://wuxiaolong.github.io/2019/07/05/SystemUI3/"/>
    <id>http://wuxiaolong.github.io/2019/07/05/SystemUI3/</id>
    <published>2019-07-05T01:54:41.000Z</published>
    <updated>2020-10-28T14:11:01.813Z</updated>
    
    <content type="html"><![CDATA[<p>SystemUI 下拉状态栏快捷开关是 QSPanel，qs_panel.xml，@+id/quick_settings_panel，本篇文章就来看看这些快捷开关是如何呈现的以及如何新增一个快捷开关？基于 AOSP 9.0 分析。</p><h2 id="SystemUI-下拉状态栏快捷开关"><a href="#SystemUI-下拉状态栏快捷开关" class="headerlink" title="SystemUI 下拉状态栏快捷开关"></a>SystemUI 下拉状态栏快捷开关</h2><p>QSPanel 创建是从 StatusBar#makeStatusBarView 开始的。</p><h3 id="StatusBar-makeStatusBarView"><a href="#StatusBar-makeStatusBarView" class="headerlink" title="StatusBar#makeStatusBarView"></a>StatusBar#makeStatusBarView</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">makeStatusBarView</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="comment">//省略其他代码</span></div><div class="line">    <span class="keyword">final</span> QSTileHost qsh = SystemUIFactory.getInstance().createQSTileHost(mContext, <span class="keyword">this</span>,</div><div class="line">            mIconController);</div><div class="line">    mBrightnessMirrorController = <span class="keyword">new</span> BrightnessMirrorController(mStatusBarWindow,</div><div class="line">            (visible) -&gt; &#123;</div><div class="line">                mBrightnessMirrorVisible = visible;</div><div class="line">                updateScrimController();</div><div class="line">            &#125;);</div><div class="line">    fragmentHostManager.addTagListener(QS.TAG, (tag, f) -&gt; &#123;</div><div class="line">        QS qs = (QS) f;</div><div class="line">        <span class="keyword">if</span> (qs <span class="keyword">instanceof</span> QSFragment) &#123;</div><div class="line">            ((QSFragment) qs).setHost(qsh);</div><div class="line">            mQSPanel = ((QSFragment) qs).getQsPanel();</div><div class="line">            mQSPanel.setBrightnessMirror(mBrightnessMirrorController);</div><div class="line">            mKeyguardStatusBar.setQSPanel(mQSPanel);</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">    <span class="comment">//省略其他代码</span></div><div class="line">&#125;</div></pre></td></tr></table></figure><a id="more"></a><p>先看  SystemUIFactory#createQSTileHost。</p><h3 id="SystemUIFactory-createQSTileHost"><a href="#SystemUIFactory-createQSTileHost" class="headerlink" title="SystemUIFactory#createQSTileHost"></a>SystemUIFactory#createQSTileHost</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> QSTileHost <span class="title">createQSTileHost</span><span class="params">(Context context, StatusBar statusBar,</span></span></div><div class="line">        StatusBarIconController iconController) &#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">new</span> QSTileHost(context, statusBar, iconController);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>这里进行 QSTileHost 初始化。</p><h3 id="QSTileHost-构造函数"><a href="#QSTileHost-构造函数" class="headerlink" title="QSTileHost#构造函数"></a>QSTileHost#构造函数</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="title">QSTileHost</span><span class="params">(Context context, StatusBar statusBar,</span></span></div><div class="line">        StatusBarIconController iconController) &#123;</div><div class="line">    <span class="comment">//省略其他代码</span></div><div class="line">    Dependency.get(TunerService.class).addTunable(<span class="keyword">this</span>, TILES_SETTING);</div><div class="line">    <span class="comment">//省略其他代码</span></div><div class="line">&#125;</div></pre></td></tr></table></figure><p>这里进行了 TunerService 注册，在 TunerServiceImpl#addTunable 重写。</p><h3 id="TunerServiceImpl-addTunable"><a href="#TunerServiceImpl-addTunable" class="headerlink" title="TunerServiceImpl#addTunable"></a>TunerServiceImpl#addTunable</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addTunable</span><span class="params">(Tunable tunable, String... keys)</span> </span>&#123;</div><div class="line">    <span class="keyword">for</span> (String key : keys) &#123;</div><div class="line">        addTunable(tunable, key);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">addTunable</span><span class="params">(Tunable tunable, String key)</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (!mTunableLookup.containsKey(key)) &#123;</div><div class="line">        mTunableLookup.put(key, <span class="keyword">new</span> ArraySet&lt;Tunable&gt;());</div><div class="line">    &#125;</div><div class="line">    mTunableLookup.get(key).add(tunable);</div><div class="line">    <span class="keyword">if</span> (LeakDetector.ENABLED) &#123;</div><div class="line">        mTunables.add(tunable);</div><div class="line">        Dependency.get(LeakDetector.class).trackCollection(mTunables, <span class="string">"TunerService.mTunables"</span>);</div><div class="line">    &#125;</div><div class="line">    Uri uri = Settings.Secure.getUriFor(key);</div><div class="line">    <span class="keyword">if</span> (!mListeningUris.containsKey(uri)) &#123;</div><div class="line">        mListeningUris.put(uri, key);</div><div class="line">        mContentResolver.registerContentObserver(uri, <span class="keyword">false</span>, mObserver, mCurrentUser);</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// Send the first state.</span></div><div class="line">    String value = Settings.Secure.getStringForUser(mContentResolver, key, mCurrentUser);</div><div class="line">    tunable.onTuningChanged(key, value);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><code>tunable.onTuningChanged</code> 回调 QSTileHost#onTuningChanged。</p><h3 id="QSTileHost-onTuningChanged"><a href="#QSTileHost-onTuningChanged" class="headerlink" title="QSTileHost#onTuningChanged"></a>QSTileHost#onTuningChanged</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onTuningChanged</span><span class="params">(String key, String newValue)</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (!TILES_SETTING.equals(key)) &#123;</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (DEBUG) Log.d(TAG, <span class="string">"Recreating tiles"</span>);</div><div class="line">    <span class="keyword">if</span> (newValue == <span class="keyword">null</span> &amp;&amp; UserManager.isDeviceInDemoMode(mContext)) &#123;</div><div class="line">        newValue = mContext.getResources().getString(R.string.quick_settings_tiles_retail_mode);</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//调用 QSTileHost#loadTileSpecs，获得 config 里字符串信息</span></div><div class="line">    <span class="keyword">final</span> List&lt;String&gt; tileSpecs = loadTileSpecs(mContext, newValue);</div><div class="line">    <span class="keyword">int</span> currentUser = ActivityManager.getCurrentUser();</div><div class="line">    <span class="keyword">if</span> (tileSpecs.equals(mTileSpecs) &amp;&amp; currentUser == mCurrentUser) <span class="keyword">return</span>;</div><div class="line">    <span class="comment">//进行了过滤</span></div><div class="line">    mTiles.entrySet().stream().filter(tile -&gt; !tileSpecs.contains(tile.getKey())).forEach(</div><div class="line">            tile -&gt; &#123;</div><div class="line">                <span class="keyword">if</span> (DEBUG) Log.d(TAG, <span class="string">"Destroying tile: "</span> + tile.getKey());</div><div class="line">                tile.getValue().destroy();</div><div class="line">            &#125;);</div><div class="line">    <span class="keyword">final</span> LinkedHashMap&lt;String, QSTile&gt; newTiles = <span class="keyword">new</span> LinkedHashMap&lt;&gt;();</div><div class="line">    <span class="keyword">for</span> (String tileSpec : tileSpecs) &#123;</div><div class="line">        QSTile tile = mTiles.get(tileSpec);</div><div class="line">        <span class="keyword">if</span> (tile != <span class="keyword">null</span> &amp;&amp; (!(tile <span class="keyword">instanceof</span> CustomTile)</div><div class="line">                || ((CustomTile) tile).getUser() == currentUser)) &#123;</div><div class="line">            <span class="keyword">if</span> (tile.isAvailable()) &#123;</div><div class="line">                <span class="keyword">if</span> (DEBUG) Log.d(TAG, <span class="string">"Adding "</span> + tile);</div><div class="line">                tile.removeCallbacks();</div><div class="line">                <span class="keyword">if</span> (!(tile <span class="keyword">instanceof</span> CustomTile) &amp;&amp; mCurrentUser != currentUser) &#123;</div><div class="line">                    tile.userSwitch(currentUser);</div><div class="line">                &#125;</div><div class="line">                newTiles.put(tileSpec, tile);</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                tile.destroy();</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">if</span> (DEBUG) Log.d(TAG, <span class="string">"Creating tile: "</span> + tileSpec);</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                <span class="comment">//这里通过 字符串 一个个实例化 Tile</span></div><div class="line">                tile = createTile(tileSpec);</div><div class="line">                <span class="keyword">if</span> (tile != <span class="keyword">null</span>) &#123;</div><div class="line">                    <span class="keyword">if</span> (tile.isAvailable()) &#123;</div><div class="line">                        tile.setTileSpec(tileSpec);</div><div class="line">                        newTiles.put(tileSpec, tile);</div><div class="line">                    &#125; <span class="keyword">else</span> &#123;</div><div class="line">                        tile.destroy();</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125; <span class="keyword">catch</span> (Throwable t) &#123;</div><div class="line">                Log.w(TAG, <span class="string">"Error creating tile for spec: "</span> + tileSpec, t);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    mCurrentUser = currentUser;</div><div class="line">    mTileSpecs.clear();</div><div class="line">    mTileSpecs.addAll(tileSpecs);</div><div class="line">    mTiles.clear();</div><div class="line">    mTiles.putAll(newTiles);</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; mCallbacks.size(); i++) &#123;</div><div class="line">        <span class="comment">//注册，当开发状态改变时回调</span></div><div class="line">        mCallbacks.get(i).onTilesChanged();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>看下 QSTileHost#loadTileSpecs，是获得 config 里字符串信息。</p><h3 id="QSTileHost-loadTileSpecs"><a href="#QSTileHost-loadTileSpecs" class="headerlink" title="QSTileHost#loadTileSpecs"></a>QSTileHost#loadTileSpecs</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">protected</span> List&lt;String&gt; <span class="title">loadTileSpecs</span><span class="params">(Context context, String tileList)</span> </span>&#123;</div><div class="line">    <span class="keyword">final</span> Resources res = context.getResources();</div><div class="line">    <span class="keyword">final</span> String defaultTileList = res.getString(R.string.quick_settings_tiles_default);</div><div class="line">    <span class="keyword">if</span> (tileList == <span class="keyword">null</span>) &#123;</div><div class="line">        tileList = res.getString(R.string.quick_settings_tiles);</div><div class="line">        <span class="keyword">if</span> (DEBUG) Log.d(TAG, <span class="string">"Loaded tile specs from config: "</span> + tileList);</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="keyword">if</span> (DEBUG) Log.d(TAG, <span class="string">"Loaded tile specs from setting: "</span> + tileList);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">final</span> ArrayList&lt;String&gt; tiles = <span class="keyword">new</span> ArrayList&lt;String&gt;();</div><div class="line">    <span class="keyword">boolean</span> addedDefault = <span class="keyword">false</span>;</div><div class="line">    <span class="keyword">for</span> (String tile : tileList.split(<span class="string">","</span>)) &#123;</div><div class="line">        tile = tile.trim();</div><div class="line">        <span class="keyword">if</span> (tile.isEmpty()) <span class="keyword">continue</span>;</div><div class="line">        <span class="keyword">if</span> (tile.equals(<span class="string">"default"</span>)) &#123;</div><div class="line">            <span class="keyword">if</span> (!addedDefault) &#123;</div><div class="line">                tiles.addAll(Arrays.asList(defaultTileList.split(<span class="string">","</span>)));</div><div class="line">                addedDefault = <span class="keyword">true</span>;</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            tiles.add(tile);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> tiles;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>其中 quick_settings_tiles_default 值在 AOSP/frameworks/base/packages/SystemUI/res/values/config.xml 里：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"quick_settings_tiles_default"</span> <span class="attr">translatable</span>=<span class="string">"false"</span>&gt;</span></div><div class="line">    wifi,bt,dnd,flashlight,rotation,battery,cell,airplane,cast</div><div class="line"><span class="tag">&lt;/<span class="name">string</span>&gt;</span></div></pre></td></tr></table></figure></p><p>这里就是我们所看到的快捷开关的文本描述。</p><p>再看 QSTileHost#onTuningChanged 中的调用 QSTileHost#createTile 方法。</p><h3 id="QSTileHost-createTile"><a href="#QSTileHost-createTile" class="headerlink" title="QSTileHost#createTile"></a>QSTileHost#createTile</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> QSTile <span class="title">createTile</span><span class="params">(String tileSpec)</span> </span>&#123;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; mQsFactories.size(); i++) &#123;</div><div class="line">        QSTile t = mQsFactories.get(i).createTile(tileSpec);</div><div class="line">        <span class="keyword">if</span> (t != <span class="keyword">null</span>) &#123;</div><div class="line">            <span class="keyword">return</span> t;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>调用 QSFactory#createTile，由 QSFactoryImpl#createTile 实现了。</p><h3 id="QSFactoryImpl-createTile"><a href="#QSFactoryImpl-createTile" class="headerlink" title="QSFactoryImpl#createTile"></a>QSFactoryImpl#createTile</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> QSTile <span class="title">createTile</span><span class="params">(String tileSpec)</span> </span>&#123;</div><div class="line">    QSTileImpl tile = createTileInternal(tileSpec);</div><div class="line">    <span class="keyword">if</span> (tile != <span class="keyword">null</span>) &#123;</div><div class="line">        tile.handleStale(); <span class="comment">// Tile was just created, must be stale.</span></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> tile;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">private</span> QSTileImpl <span class="title">createTileInternal</span><span class="params">(String tileSpec)</span> </span>&#123;</div><div class="line">    <span class="comment">// Stock tiles.</span></div><div class="line">    <span class="keyword">switch</span> (tileSpec) &#123;</div><div class="line">        <span class="keyword">case</span> <span class="string">"wifi"</span>:</div><div class="line">            <span class="keyword">return</span> <span class="keyword">new</span> WifiTile(mHost);</div><div class="line">        <span class="keyword">case</span> <span class="string">"bt"</span>:</div><div class="line">            <span class="keyword">return</span> <span class="keyword">new</span> BluetoothTile(mHost);</div><div class="line">        <span class="keyword">case</span> <span class="string">"cell"</span>:</div><div class="line">            <span class="keyword">return</span> <span class="keyword">new</span> CellularTile(mHost);</div><div class="line">        <span class="keyword">case</span> <span class="string">"dnd"</span>:</div><div class="line">            <span class="keyword">return</span> <span class="keyword">new</span> DndTile(mHost);</div><div class="line">        <span class="keyword">case</span> <span class="string">"inversion"</span>:</div><div class="line">            <span class="keyword">return</span> <span class="keyword">new</span> ColorInversionTile(mHost);</div><div class="line">        <span class="keyword">case</span> <span class="string">"airplane"</span>:</div><div class="line">            <span class="keyword">return</span> <span class="keyword">new</span> AirplaneModeTile(mHost);</div><div class="line">        <span class="keyword">case</span> <span class="string">"work"</span>:</div><div class="line">            <span class="keyword">return</span> <span class="keyword">new</span> WorkModeTile(mHost);</div><div class="line">        <span class="keyword">case</span> <span class="string">"rotation"</span>:</div><div class="line">            <span class="keyword">return</span> <span class="keyword">new</span> RotationLockTile(mHost);</div><div class="line">        <span class="keyword">case</span> <span class="string">"flashlight"</span>:</div><div class="line">            <span class="keyword">return</span> <span class="keyword">new</span> FlashlightTile(mHost);</div><div class="line">        <span class="keyword">case</span> <span class="string">"location"</span>:</div><div class="line">            <span class="keyword">return</span> <span class="keyword">new</span> LocationTile(mHost);</div><div class="line">        <span class="keyword">case</span> <span class="string">"cast"</span>:</div><div class="line">            <span class="keyword">return</span> <span class="keyword">new</span> CastTile(mHost);</div><div class="line">        <span class="keyword">case</span> <span class="string">"hotspot"</span>:</div><div class="line">            <span class="keyword">return</span> <span class="keyword">new</span> HotspotTile(mHost);</div><div class="line">        <span class="keyword">case</span> <span class="string">"user"</span>:</div><div class="line">            <span class="keyword">return</span> <span class="keyword">new</span> UserTile(mHost);</div><div class="line">        <span class="keyword">case</span> <span class="string">"battery"</span>:</div><div class="line">            <span class="keyword">return</span> <span class="keyword">new</span> BatterySaverTile(mHost);</div><div class="line">        <span class="keyword">case</span> <span class="string">"saver"</span>:</div><div class="line">            <span class="keyword">return</span> <span class="keyword">new</span> DataSaverTile(mHost);</div><div class="line">        <span class="keyword">case</span> <span class="string">"night"</span>:</div><div class="line">            <span class="keyword">return</span> <span class="keyword">new</span> NightDisplayTile(mHost);</div><div class="line">        <span class="keyword">case</span> <span class="string">"nfc"</span>:</div><div class="line">            <span class="keyword">return</span> <span class="keyword">new</span> NfcTile(mHost);</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// Intent tiles.</span></div><div class="line">    <span class="keyword">if</span> (tileSpec.startsWith(IntentTile.PREFIX)) <span class="keyword">return</span> IntentTile.create(mHost, tileSpec);</div><div class="line">    <span class="keyword">if</span> (tileSpec.startsWith(CustomTile.PREFIX)) <span class="keyword">return</span> CustomTile.create(mHost, tileSpec);</div><div class="line">    <span class="comment">// Debug tiles.</span></div><div class="line">    <span class="keyword">if</span> (Build.IS_DEBUGGABLE) &#123;</div><div class="line">        <span class="keyword">if</span> (tileSpec.equals(GarbageMonitor.MemoryTile.TILE_SPEC)) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">new</span> GarbageMonitor.MemoryTile(mHost);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// Broken tiles.</span></div><div class="line">    Log.w(TAG, <span class="string">"Bad tile spec: "</span> + tileSpec);</div><div class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>看到这里通过对应的字符串分别实例化 Tile。</p><p>以上涉及资源文件加载及对应实例化，接下来看看代码如何加载的，看 QSPanel#onAttachedToWindow 方法。</p><h3 id="QSPanel-onAttachedToWindow"><a href="#QSPanel-onAttachedToWindow" class="headerlink" title="QSPanel#onAttachedToWindow"></a>QSPanel#onAttachedToWindow</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onAttachedToWindow</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">super</span>.onAttachedToWindow();</div><div class="line">    <span class="keyword">final</span> TunerService tunerService = Dependency.get(TunerService.class);</div><div class="line">    tunerService.addTunable(<span class="keyword">this</span>, QS_SHOW_BRIGHTNESS);</div><div class="line">    <span class="keyword">if</span> (mHost != <span class="keyword">null</span>) &#123;</div><div class="line">        setTiles(mHost.getTiles());</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (mBrightnessMirrorController != <span class="keyword">null</span>) &#123;</div><div class="line">        mBrightnessMirrorController.addCallback(<span class="keyword">this</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTiles</span><span class="params">(Collection&lt;QSTile&gt; tiles)</span> </span>&#123;</div><div class="line">    setTiles(tiles, <span class="keyword">false</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTiles</span><span class="params">(Collection&lt;QSTile&gt; tiles, <span class="keyword">boolean</span> collapsedView)</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (!collapsedView) &#123;</div><div class="line">        mQsTileRevealController.updateRevealedTiles(tiles);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span> (TileRecord record : mRecords) &#123;</div><div class="line">        mTileLayout.removeTile(record);</div><div class="line">        record.tile.removeCallback(record.callback);</div><div class="line">    &#125;</div><div class="line">    mRecords.clear();</div><div class="line">    <span class="keyword">for</span> (QSTile tile : tiles) &#123;</div><div class="line">        addTile(tile, collapsedView);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">protected</span> TileRecord <span class="title">addTile</span><span class="params">(<span class="keyword">final</span> QSTile tile, <span class="keyword">boolean</span> collapsedView)</span> </span>&#123;</div><div class="line">    <span class="keyword">final</span> TileRecord r = <span class="keyword">new</span> TileRecord();</div><div class="line">    r.tile = tile;</div><div class="line">    r.tileView = createTileView(tile, collapsedView);</div><div class="line">    <span class="comment">//省略其他代码</span></div><div class="line">    r.tileView.init(r.tile);</div><div class="line">    r.tile.refreshState();</div><div class="line">    mRecords.add(r);</div><div class="line">    <span class="keyword">if</span> (mTileLayout != <span class="keyword">null</span>) &#123;</div><div class="line">        mTileLayout.addTile(r);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> r;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>mTileLayout.addTile(r);由 PagedTileLayout#addTile 实现。</p><h3 id="PagedTileLayout-addTile"><a href="#PagedTileLayout-addTile" class="headerlink" title="PagedTileLayout#addTile"></a>PagedTileLayout#addTile</h3><p>PagedTileLayout 是 ViewPager，重点看  setAdapter，看数据源如何 add 的。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addTile</span><span class="params">(TileRecord tile)</span> </span>&#123;</div><div class="line">    mTiles.add(tile);</div><div class="line">    postDistributeTiles();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">postDistributeTiles</span><span class="params">()</span> </span>&#123;</div><div class="line">    removeCallbacks(mDistribute);</div><div class="line">    post(mDistribute);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">private</span> <span class="keyword">final</span> Runnable mDistribute = <span class="keyword">new</span> Runnable() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">        distributeTiles();</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">distributeTiles</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (DEBUG) Log.d(TAG, <span class="string">"Distributing tiles"</span>);</div><div class="line">    <span class="keyword">final</span> <span class="keyword">int</span> NP = mPages.size();</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; NP; i++) &#123;</div><div class="line">        mPages.get(i).removeAllViews();</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">int</span> index = <span class="number">0</span>;</div><div class="line">    <span class="keyword">final</span> <span class="keyword">int</span> NT = mTiles.size();</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; NT; i++) &#123;</div><div class="line">        TileRecord tile = mTiles.get(i);</div><div class="line">        <span class="keyword">if</span> (mPages.get(index).isFull()) &#123;</div><div class="line">            <span class="keyword">if</span> (++index == mPages.size()) &#123;</div><div class="line">                <span class="keyword">if</span> (DEBUG) Log.d(TAG, <span class="string">"Adding page for "</span></div><div class="line">                        + tile.tile.getClass().getSimpleName());</div><div class="line">                mPages.add((TilePage) LayoutInflater.from(getContext())</div><div class="line">                        .inflate(R.layout.qs_paged_page, <span class="keyword">this</span>, <span class="keyword">false</span>));</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (DEBUG) Log.d(TAG, <span class="string">"Adding "</span> + tile.tile.getClass().getSimpleName() + <span class="string">" to "</span></div><div class="line">                + index);</div><div class="line">        mPages.get(index).addTile(tile);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (mNumPages != index + <span class="number">1</span>) &#123;</div><div class="line">        mNumPages = index + <span class="number">1</span>;</div><div class="line">        <span class="keyword">while</span> (mPages.size() &gt; mNumPages) &#123;</div><div class="line">            mPages.remove(mPages.size() - <span class="number">1</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (DEBUG) Log.d(TAG, <span class="string">"Size: "</span> + mNumPages);</div><div class="line">        mPageIndicator.setNumPages(mNumPages);</div><div class="line">        setAdapter(mAdapter);</div><div class="line">        mAdapter.notifyDataSetChanged();</div><div class="line">        setCurrentItem(<span class="number">0</span>, <span class="keyword">false</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>至此，SystemUI 下拉状态栏快捷开关模块代码流程分析完毕。</p><h2 id="新增一个快捷开关"><a href="#新增一个快捷开关" class="headerlink" title="新增一个快捷开关"></a>新增一个快捷开关</h2><p>0、国际惯例，先上效果图，新增一个Camera，随便用了蓝牙的图标：</p><p><img src="https://smartloong.oss-cn-shanghai.aliyuncs.com/StatusBar8.jpg" alt=""></p><p>1、首先在 AOSP/frameworks/base/packages/SystemUI/res/values/config.xml 里面添加截屏 Camera 的选项</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"quick_settings_tiles_default"</span> <span class="attr">translatable</span>=<span class="string">"false"</span>&gt;</span></div><div class="line">    wifi,bt,dnd,flashlight,rotation,battery,cell,airplane,cast,camera</div><div class="line"><span class="tag">&lt;/<span class="name">string</span>&gt;</span></div></pre></td></tr></table></figure><p>2、在 AOSP/frameworks/base/packages/SystemUI/res/values/strings.xml 里面还要加一个字符串<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"quick_settings_camera_label"</span>&gt;</span>Camera<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div></pre></td></tr></table></figure></p><p>3、在 AOSP/frameworks/base/packages/SystemUI/src/com/android/systemui/qs/tiles/ 目录下创建 CameraTile.java，实现 QSTileImpl：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.android.systemui.qs.tiles;</div><div class="line"></div><div class="line"><span class="keyword">import</span> android.content.Intent;</div><div class="line"><span class="keyword">import</span> android.provider.MediaStore;</div><div class="line"><span class="keyword">import</span> android.widget.Toast;</div><div class="line"><span class="comment">//手动添加</span></div><div class="line"><span class="keyword">import</span> com.android.systemui.R;</div><div class="line"><span class="keyword">import</span> com.android.systemui.plugins.qs.QSTile;</div><div class="line"><span class="keyword">import</span> com.android.systemui.qs.QSHost;</div><div class="line"><span class="keyword">import</span> com.android.systemui.qs.tileimpl.QSTileImpl;</div><div class="line"><span class="comment">//手动添加</span></div><div class="line"><span class="keyword">import</span> com.android.internal.logging.nano.MetricsProto.MetricsEvent;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CameraTile</span> <span class="keyword">extends</span> <span class="title">QSTileImpl</span>&lt;<span class="title">QSTile</span>.<span class="title">BooleanState</span>&gt; </span>&#123;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CameraTile</span><span class="params">(QSHost host)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>(host);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> BooleanState <span class="title">newTileState</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> BooleanState();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">handleClick</span><span class="params">()</span> </span>&#123;</div><div class="line">        Toast.makeText(mContext,<span class="string">"Camera Click"</span>,Toast.LENGTH_LONG).show();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">handleUpdateState</span><span class="params">(BooleanState state, Object arg)</span> </span>&#123;</div><div class="line">        state.label = mContext.getString(R.string.quick_settings_camera_label);</div><div class="line">        <span class="comment">//定义图标，随便用了蓝牙的图标</span></div><div class="line">        state.icon = ResourceIcon.get(R.drawable.ic_qs_bluetooth_on);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getMetricsCategory</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> MetricsEvent.QS_CAMERA;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> Intent <span class="title">getLongClickIntent</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Intent(MediaStore.ACTION_IMAGE_CAPTURE);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">handleSetListening</span><span class="params">(<span class="keyword">boolean</span> listening)</span> </span>&#123;</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> CharSequence <span class="title">getTileLabel</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> mContext.getString(R.string.quick_settings_camera_label);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>4、在 AOSP/frameworks/base/proto/src/metrics_constants.proto，增加常量：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">QS_CAMERA = <span class="number">1568</span>;</div></pre></td></tr></table></figure></p><p>5、在 AOSP/frameworks/base/packages/SystemUI/src/com/android/systemui/qs/tileimpl/QSFactoryImpl.java，增加：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> QSTileImpl <span class="title">createTileInternal</span><span class="params">(String tileSpec)</span> </span>&#123;</div><div class="line">    <span class="comment">// Stock tiles.</span></div><div class="line">    <span class="keyword">switch</span> (tileSpec) &#123;</div><div class="line">        <span class="keyword">case</span> <span class="string">"wifi"</span>:</div><div class="line">            <span class="keyword">return</span> <span class="keyword">new</span> WifiTile(mHost);</div><div class="line">        <span class="comment">// 省略部分代码</span></div><div class="line">        <span class="keyword">case</span> <span class="string">"nfc"</span>:</div><div class="line">            <span class="keyword">return</span> <span class="keyword">new</span> NfcTile(mHost);</div><div class="line">        <span class="keyword">case</span> <span class="string">"camera"</span>:</div><div class="line">            <span class="keyword">return</span> <span class="keyword">new</span> CameraTile(mHost);</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// 省略部分代码</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>6、整编代码，运行模拟器，有效果，棒棒哒。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;SystemUI 下拉状态栏快捷开关是 QSPanel，qs_panel.xml，@+id/quick_settings_panel，本篇文章就来看看这些快捷开关是如何呈现的以及如何新增一个快捷开关？基于 AOSP 9.0 分析。&lt;/p&gt;
&lt;h2 id=&quot;SystemUI-下拉状态栏快捷开关&quot;&gt;&lt;a href=&quot;#SystemUI-下拉状态栏快捷开关&quot; class=&quot;headerlink&quot; title=&quot;SystemUI 下拉状态栏快捷开关&quot;&gt;&lt;/a&gt;SystemUI 下拉状态栏快捷开关&lt;/h2&gt;&lt;p&gt;QSPanel 创建是从 StatusBar#makeStatusBarView 开始的。&lt;/p&gt;
&lt;h3 id=&quot;StatusBar-makeStatusBarView&quot;&gt;&lt;a href=&quot;#StatusBar-makeStatusBarView&quot; class=&quot;headerlink&quot; title=&quot;StatusBar#makeStatusBarView&quot;&gt;&lt;/a&gt;StatusBar#makeStatusBarView&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;makeStatusBarView&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//省略其他代码&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; QSTileHost qsh = SystemUIFactory.getInstance().createQSTileHost(mContext, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            mIconController);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    mBrightnessMirrorController = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BrightnessMirrorController(mStatusBarWindow,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            (visible) -&amp;gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                mBrightnessMirrorVisible = visible;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                updateScrimController();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    fragmentHostManager.addTagListener(QS.TAG, (tag, f) -&amp;gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        QS qs = (QS) f;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (qs &lt;span class=&quot;keyword&quot;&gt;instanceof&lt;/span&gt; QSFragment) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            ((QSFragment) qs).setHost(qsh);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            mQSPanel = ((QSFragment) qs).getQsPanel();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            mQSPanel.setBrightnessMirror(mBrightnessMirrorController);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            mKeyguardStatusBar.setQSPanel(mQSPanel);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//省略其他代码&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="SystemUI" scheme="http://wuxiaolong.github.io/categories/SystemUI/"/>
    
    
      <category term="SystemUI" scheme="http://wuxiaolong.github.io/tags/SystemUI/"/>
    
  </entry>
  
  <entry>
    <title>Android 9.0 SystemUI 主要视图 SystemBars</title>
    <link href="http://wuxiaolong.github.io/2019/06/03/SystemUI2/"/>
    <id>http://wuxiaolong.github.io/2019/06/03/SystemUI2/</id>
    <published>2019-06-03T01:54:41.000Z</published>
    <updated>2020-10-28T14:10:55.898Z</updated>
    
    <content type="html"><![CDATA[<p>SystemBars 是 SystemUI 主要视图，接下来看看它是如何呈现？基于 AOSP 9.0 分析。</p><h2 id="SystemBars-start"><a href="#SystemBars-start" class="headerlink" title="SystemBars#start"></a>SystemBars#start</h2><p>SystemBars 启动中 mServices[i].start() 将调用 SystemBars.start()：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SystemBars</span> <span class="keyword">extends</span> <span class="title">SystemUI</span> </span>&#123;</div><div class="line">    <span class="comment">//省略部分代码</span></div><div class="line">    <span class="keyword">private</span> SystemUI mStatusBar;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (DEBUG) Log.d(TAG, <span class="string">"start"</span>);</div><div class="line">        createStatusBarFromConfig();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//省略部分代码</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">createStatusBarFromConfig</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (DEBUG) Log.d(TAG, <span class="string">"createStatusBarFromConfig"</span>);</div><div class="line">        <span class="keyword">final</span> String clsName = mContext.getString(R.string.config_statusBarComponent);</div><div class="line">        <span class="keyword">if</span> (clsName == <span class="keyword">null</span> || clsName.length() == <span class="number">0</span>) &#123;</div><div class="line">            <span class="keyword">throw</span> andLog(<span class="string">"No status bar component configured"</span>, <span class="keyword">null</span>);</div><div class="line">        &#125;</div><div class="line">        Class&lt;?&gt; cls = <span class="keyword">null</span>;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            cls = mContext.getClassLoader().loadClass(clsName);</div><div class="line">        &#125; <span class="keyword">catch</span> (Throwable t) &#123;</div><div class="line">            <span class="keyword">throw</span> andLog(<span class="string">"Error loading status bar component: "</span> + clsName, t);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            mStatusBar = (SystemUI) cls.newInstance();</div><div class="line">        &#125; <span class="keyword">catch</span> (Throwable t) &#123;</div><div class="line">            <span class="keyword">throw</span> andLog(<span class="string">"Error creating status bar component: "</span> + clsName, t);</div><div class="line">        &#125;</div><div class="line">        mStatusBar.mContext = mContext;</div><div class="line">        mStatusBar.mComponents = mComponents;</div><div class="line">        mStatusBar.start();</div><div class="line">        <span class="keyword">if</span> (DEBUG) Log.d(TAG, <span class="string">"started "</span> + mStatusBar.getClass().getSimpleName());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//省略部分代码</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p><a id="more"></a><p>这里 config_statusBarComponent 在 AOSP/frameworks/base/packages/SystemUI/res/values/config.xml 里，值为：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">"config_statusBarComponent"</span> <span class="attr">translatable</span>=<span class="string">"false"</span>&gt;</span>com.android.systemui.statusbar.phone.StatusBar<span class="tag">&lt;/<span class="name">string</span>&gt;</span></div></pre></td></tr></table></figure></p><p>上面 mStatusBar.start() 通过反射机制 start 了 StatusBar。</p><h2 id="StatusBar-start"><a href="#StatusBar-start" class="headerlink" title="StatusBar#start"></a>StatusBar#start</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">()</span> </span>&#123;</div><div class="line">    mGroupManager = Dependency.get(NotificationGroupManager.class);</div><div class="line">    mVisualStabilityManager = Dependency.get(VisualStabilityManager.class);</div><div class="line">    mNotificationLogger = Dependency.get(NotificationLogger.class);</div><div class="line">    <span class="comment">//省略部分代码，主要是实例化</span></div><div class="line">    <span class="comment">//创建并添加视图</span></div><div class="line">    createAndAddWindows();</div><div class="line">    <span class="comment">//省略其他代码</span></div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="StatusBar-addStatusBarWindow"><a href="#StatusBar-addStatusBarWindow" class="headerlink" title="StatusBar#addStatusBarWindow"></a>StatusBar#addStatusBarWindow</h2><p>看 createAndAddWindows 方法，又调了 addStatusBarWindow：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">createAndAddWindows</span><span class="params">()</span> </span>&#123;</div><div class="line">    addStatusBarWindow();</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">addStatusBarWindow</span><span class="params">()</span> </span>&#123;</div><div class="line">    makeStatusBarView();</div><div class="line">    <span class="comment">//省略其他代码</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p><h2 id="StatusBar-makeStatusBarView"><a href="#StatusBar-makeStatusBarView" class="headerlink" title="StatusBar#makeStatusBarView"></a>StatusBar#makeStatusBarView</h2><p>makeStatusBarView 是关键方法，创建 StatusBarView，makeStatusBarView 内容很多，本篇先看布局部分：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">makeStatusBarView</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">final</span> Context context = mContext;</div><div class="line">    updateDisplaySize(); <span class="comment">// populates mDisplayMetrics</span></div><div class="line">    updateResources();</div><div class="line">    updateTheme();</div><div class="line">    <span class="comment">//对应布局文件：super_status_bar.xml</span></div><div class="line">    inflateStatusBarWindow(context);</div><div class="line">    <span class="comment">//省略其他代码</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p><h2 id="StatusBar-inflateStatusBarWindow"><a href="#StatusBar-inflateStatusBarWindow" class="headerlink" title="StatusBar#inflateStatusBarWindow"></a>StatusBar#inflateStatusBarWindow</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">inflateStatusBarWindow</span><span class="params">(Context context)</span> </span>&#123;</div><div class="line">    mStatusBarWindow = (StatusBarWindowView) View.inflate(context,</div><div class="line">            R.layout.super_status_bar, <span class="keyword">null</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>super_status_bar.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">com.android.systemui.statusbar.phone.StatusBarWindowView</span></span></div><div class="line">    <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></div><div class="line">    <span class="attr">xmlns:sysui</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:fitsSystemWindows</span>=<span class="string">"true"</span>&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">com.android.systemui.statusbar.BackDropView</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/backdrop"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:visibility</span>=<span class="string">"gone"</span></div><div class="line">            <span class="attr">sysui:ignoreRightInset</span>=<span class="string">"true"</span></div><div class="line">            &gt;</div><div class="line">        <span class="tag">&lt;<span class="name">ImageView</span> <span class="attr">android:id</span>=<span class="string">"@+id/backdrop_back"</span></span></div><div class="line">                   <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">                   <span class="attr">android:scaleType</span>=<span class="string">"centerCrop"</span></div><div class="line">                   <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span> /&gt;</div><div class="line">        <span class="tag">&lt;<span class="name">ImageView</span> <span class="attr">android:id</span>=<span class="string">"@+id/backdrop_front"</span></span></div><div class="line">                   <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">                   <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">                   <span class="attr">android:scaleType</span>=<span class="string">"centerCrop"</span></div><div class="line">                   <span class="attr">android:visibility</span>=<span class="string">"invisible"</span> /&gt;</div><div class="line">    <span class="tag">&lt;/<span class="name">com.android.systemui.statusbar.BackDropView</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">com.android.systemui.statusbar.ScrimView</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/scrim_behind"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:importantForAccessibility</span>=<span class="string">"no"</span></div><div class="line">        <span class="attr">sysui:ignoreRightInset</span>=<span class="string">"true"</span></div><div class="line">        /&gt;</div><div class="line">    <span class="comment">&lt;!--解锁，在桌面时状态栏，通知+系统icon--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">FrameLayout</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/status_bar_container"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span> /&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">ViewStub</span> <span class="attr">android:id</span>=<span class="string">"@+id/fullscreen_user_switcher_stub"</span></span></div><div class="line">              <span class="attr">android:layout</span>=<span class="string">"@layout/car_fullscreen_user_switcher"</span></div><div class="line">              <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">              <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>/&gt;</div><div class="line">    <span class="comment">&lt;!--包含锁屏布局和下拉状态栏布局--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">layout</span>=<span class="string">"@layout/status_bar_expanded"</span></span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:visibility</span>=<span class="string">"invisible"</span> /&gt;</div><div class="line">    <span class="comment">&lt;!--下拉全部状态栏亮度布局--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">layout</span>=<span class="string">"@layout/brightness_mirror"</span> /&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">com.android.systemui.statusbar.ScrimView</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/scrim_in_front"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:importantForAccessibility</span>=<span class="string">"no"</span></div><div class="line">        <span class="attr">sysui:ignoreRightInset</span>=<span class="string">"true"</span></div><div class="line">        /&gt;</div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">com.android.systemui.statusbar.phone.StatusBarWindowView</span>&gt;</span></div></pre></td></tr></table></figure></p><h2 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h2><p>下面具体看看视图，有图有真相，更加直观。</p><h3 id="桌面"><a href="#桌面" class="headerlink" title="桌面"></a>桌面</h3><p><img src="/images/StatusBar2.png" alt=""></p><p>1、CollapsedStatusBarFragment，status_bar.xml，PhoneStatusBarView，折叠状态栏，包含左边时间通知和右边系统 icon<br>2、NavigationBarFragment，navigation_bar.xml，底部导航栏</p><h3 id="下拉状态栏"><a href="#下拉状态栏" class="headerlink" title="下拉状态栏"></a>下拉状态栏</h3><p><img src="/images/StatusBar3.png" alt=""></p><p>1、quick_status_bar_expanded_header.xml<br>1.1、quick_status_bar_header_system_icons.xml，时间和电量<br>1.2、quick_qs_status_icons.xml，日期和系统 icon<br>1.3、QuickQSPanel，quick_status_bar_expanded_header.xml，@+id/quick_qs_panel，快捷设置<br>2、NotificationStackScrollLayout，@+id/notification_stack_scroller，通知<br>3、status_bar_notification_footer.xml，通知管理和 clear all</p><h3 id="下拉全部状态栏"><a href="#下拉全部状态栏" class="headerlink" title="下拉全部状态栏"></a>下拉全部状态栏</h3><p><img src="/images/StatusBar4.png" alt=""></p><p>1、quick_settings_brightness_dialog.xml，亮度设置<br>2、QSPanel，qs_panel.xml，@+id/quick_settings_panel，快捷设置<br>3、qs_footer_impl.xml，快捷设置排序和设置入口</p><h3 id="锁屏"><a href="#锁屏" class="headerlink" title="锁屏"></a>锁屏</h3><p>增加锁屏模式为 Swipe：</p><p><img src="/images/StatusBar1.png" alt=""></p><p>整个布局，NotificationPanelView，status_bar_expanded.xml<br>1、KeyguardStatusBarView，keyguard_status_bar.xml ，状态栏<br>2、KeyguardStatusView，keyguard_status_view.xml ，时间和日期<br>3、NotificationStackScrollLayout，@+id/notification_stack_scroller，通知<br>4、KeyguardBottomAreaView，keyguard_bottom_area.xml，底部解锁</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>好了，这篇结束了，主要学习 StatusBar 相关布局在哪里写了，先有个直观认识。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;SystemBars 是 SystemUI 主要视图，接下来看看它是如何呈现？基于 AOSP 9.0 分析。&lt;/p&gt;
&lt;h2 id=&quot;SystemBars-start&quot;&gt;&lt;a href=&quot;#SystemBars-start&quot; class=&quot;headerlink&quot; title=&quot;SystemBars#start&quot;&gt;&lt;/a&gt;SystemBars#start&lt;/h2&gt;&lt;p&gt;SystemBars 启动中 mServices[i].start() 将调用 SystemBars.start()：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SystemBars&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SystemUI&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//省略部分代码&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; SystemUI mStatusBar;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (DEBUG) Log.d(TAG, &lt;span class=&quot;string&quot;&gt;&quot;start&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        createStatusBarFromConfig();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//省略部分代码&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;createStatusBarFromConfig&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (DEBUG) Log.d(TAG, &lt;span class=&quot;string&quot;&gt;&quot;createStatusBarFromConfig&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String clsName = mContext.getString(R.string.config_statusBarComponent);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (clsName == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; || clsName.length() == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; andLog(&lt;span class=&quot;string&quot;&gt;&quot;No status bar component configured&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        Class&amp;lt;?&amp;gt; cls = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            cls = mContext.getClassLoader().loadClass(clsName);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (Throwable t) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; andLog(&lt;span class=&quot;string&quot;&gt;&quot;Error loading status bar component: &quot;&lt;/span&gt; + clsName, t);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            mStatusBar = (SystemUI) cls.newInstance();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (Throwable t) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; andLog(&lt;span class=&quot;string&quot;&gt;&quot;Error creating status bar component: &quot;&lt;/span&gt; + clsName, t);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mStatusBar.mContext = mContext;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mStatusBar.mComponents = mComponents;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mStatusBar.start();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (DEBUG) Log.d(TAG, &lt;span class=&quot;string&quot;&gt;&quot;started &quot;&lt;/span&gt; + mStatusBar.getClass().getSimpleName());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//省略部分代码&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="SystemUI" scheme="http://wuxiaolong.github.io/categories/SystemUI/"/>
    
    
      <category term="SystemUI" scheme="http://wuxiaolong.github.io/tags/SystemUI/"/>
    
  </entry>
  
  <entry>
    <title>Android 9.0 SystemUI 启动流程</title>
    <link href="http://wuxiaolong.github.io/2019/05/02/SystemUI1/"/>
    <id>http://wuxiaolong.github.io/2019/05/02/SystemUI1/</id>
    <published>2019-05-02T01:54:41.000Z</published>
    <updated>2020-10-28T14:06:43.725Z</updated>
    
    <content type="html"><![CDATA[<p>基于 AOSP 9.0 分析。</p><h2 id="开机流程"><a href="#开机流程" class="headerlink" title="开机流程"></a>开机流程</h2><p>开机大致会经历如下几个过程：</p><ol><li>uboot 在引导 os 启动，然后加载 kernel；</li><li>当 kernel 加载完成后，进入 init 进程，fork 出 zygote，然后由 zygote 去启动 SystemServer；</li><li>SystemServer 会启动系统运行所需的众多核心服务和普通服务，以及初始化和加载一些应用；</li><li>之后就进入到锁屏或者 Launcher，开机过程就基本结束了。</li></ol><p>SystemUI 启动就是从 SystemServer 开始的。</p><a id="more"></a><h2 id="序列图"><a href="#序列图" class="headerlink" title="序列图"></a>序列图</h2><p><img src="https://smartloong.oss-cn-shanghai.aliyuncs.com/SystemUI1.png" alt=""></p><h2 id="SystemServer-main"><a href="#SystemServer-main" class="headerlink" title="SystemServer#main"></a>SystemServer#main</h2><p>SystemServer 名为系统服务进程，负责启动 Android 系统的关键服务，其入口是 SystemServer.main()：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">    <span class="keyword">new</span> SystemServer().run();</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>可以看到 main() 中生成了 SystemServer 对象并执行了 run 方法：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="comment">//省略部分代码</span></div><div class="line">    <span class="comment">// Start services.</span></div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        traceBeginAndSlog(<span class="string">"StartServices"</span>);</div><div class="line">        startBootstrapServices();</div><div class="line">        startCoreServices();</div><div class="line">        startOtherServices();</div><div class="line">        SystemServerInitThreadPool.shutdown();</div><div class="line">    &#125; <span class="keyword">catch</span> (Throwable ex) &#123;</div><div class="line">        Slog.e(<span class="string">"System"</span>, <span class="string">"******************************************"</span>);</div><div class="line">        Slog.e(<span class="string">"System"</span>, <span class="string">"************ Failure starting system services"</span>, ex);</div><div class="line">        <span class="keyword">throw</span> ex;</div><div class="line">    &#125; <span class="keyword">finally</span> &#123;</div><div class="line">        traceEnd();</div><div class="line">    &#125;</div><div class="line">   <span class="comment">//省略部分代码</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>查看 startOtherServices()：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">startOtherServices</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="comment">//省略部分代码</span></div><div class="line">    traceBeginAndSlog(<span class="string">"StartSystemUI"</span>);</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        startSystemUi(context, windowManagerF);</div><div class="line">    &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">        reportWtf(<span class="string">"starting System UI"</span>, e);</div><div class="line">    &#125;</div><div class="line">    traceEnd();</div><div class="line">    <span class="comment">//省略部分代码</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">startSystemUi</span><span class="params">(Context context, WindowManagerService windowManager)</span> </span>&#123;</div><div class="line">    Intent intent = <span class="keyword">new</span> Intent();</div><div class="line">    intent.setComponent(<span class="keyword">new</span> ComponentName(<span class="string">"com.android.systemui"</span>,</div><div class="line">                <span class="string">"com.android.systemui.SystemUIService"</span>));</div><div class="line">    intent.addFlags(Intent.FLAG_DEBUG_TRIAGED_MISSING);</div><div class="line">    <span class="comment">//Slog.d(TAG, "Starting service: " + intent);</span></div><div class="line">    context.startServiceAsUser(intent, UserHandle.SYSTEM);</div><div class="line">    windowManager.onSystemUiStarted();</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>通过<figure class="highlight plain"><figcaption><span>ComponentName("com.android.systemui",</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&quot;com.android.systemui.SystemUIService&quot;))```启动了服务 SystemUIService，进入 SystemUIService。</div><div class="line"></div><div class="line">## SystemUIService#onCreate</div><div class="line">```java</div><div class="line">public class SystemUIService extends Service &#123;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void onCreate() &#123;</div><div class="line">        super.onCreate();</div><div class="line">        ((SystemUIApplication) getApplication()).startServicesIfNeeded();</div><div class="line">        //省略其他代码</div></pre></td></tr></table></figure></p><p>onCreate 方法中获得 SystemUIApplication 对象并调用其 startServicesIfNeeded 方法。</p><h2 id="SystemUIApplication-startServicesIfNeeded"><a href="#SystemUIApplication-startServicesIfNeeded" class="headerlink" title="SystemUIApplication#startServicesIfNeeded"></a>SystemUIApplication#startServicesIfNeeded</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">public void startServicesIfNeeded() &#123;</div><div class="line">    String[] names = getResources().getStringArray(R.array.config_systemUIServiceComponents);</div><div class="line">    startServicesIfNeeded(names);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>其中 config_systemUIServiceComponents 值在 AOSP/frameworks/base/packages/SystemUI/res/values/config.xml 里：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">string-array</span> <span class="attr">name</span>=<span class="string">"config_systemUIServiceComponents"</span> <span class="attr">translatable</span>=<span class="string">"false"</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 对其他模块提供组件支持 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span>com.android.systemui.Dependency<span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- NotificationChannel --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span>com.android.systemui.util.NotificationChannels<span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span>com.android.systemui.statusbar.CommandQueue$CommandQueueStart<span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 锁屏模块 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span>com.android.systemui.keyguard.KeyguardViewMediator<span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 最近应用 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span>com.android.systemui.recents.Recents<span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 全局音量控制 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span>com.android.systemui.volume.VolumeUI<span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 分屏功能调节器 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span>com.android.systemui.stackdivider.Divider<span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 系统状态栏，包括 StatusBar、NavigationBar、快捷菜单等等 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span>com.android.systemui.SystemBars<span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- Storage 存储通知 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span>com.android.systemui.usb.StorageNotification<span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 电量管理相关 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span>com.android.systemui.power.PowerUI<span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 铃声播放 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span>com.android.systemui.media.RingtonePlayer<span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 键盘相关 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span>com.android.systemui.keyboard.KeyboardUI<span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 画中画界面 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span>com.android.systemui.pip.PipUI<span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 快捷键调度程序 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span>com.android.systemui.shortcut.ShortcutKeyDispatcher<span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span>@string/config_systemUIVendorServiceComponent<span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span>com.android.systemui.util.leak.GarbageMonitor$Service<span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span>com.android.systemui.LatencyTester<span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span>com.android.systemui.globalactions.GlobalActionsComponent<span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 截屏界面 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span>com.android.systemui.ScreenDecorations<span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 指纹相关 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span>com.android.systemui.fingerprint.FingerprintDialogImpl<span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span>com.android.systemui.SliceBroadcastRelayHandler<span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">string-array</span>&gt;</span></div></pre></td></tr></table></figure></p><h2 id="SystemUIApplication-startServicesIfNeeded-1"><a href="#SystemUIApplication-startServicesIfNeeded-1" class="headerlink" title="SystemUIApplication#startServicesIfNeeded"></a>SystemUIApplication#startServicesIfNeeded</h2><p>继续看 startServicesIfNeeded 方法：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">startServicesIfNeeded</span><span class="params">(String[] services)</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (mServicesStarted) &#123;</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line">    mServices = <span class="keyword">new</span> SystemUI[services.length];</div><div class="line">    <span class="keyword">if</span> (!mBootCompleted) &#123;</div><div class="line">        <span class="comment">// check to see if maybe it was already completed long before we began</span></div><div class="line">        <span class="comment">// see ActivityManagerService.finishBooting()</span></div><div class="line">        <span class="keyword">if</span> (<span class="string">"1"</span>.equals(SystemProperties.get(<span class="string">"sys.boot_completed"</span>))) &#123;</div><div class="line">            mBootCompleted = <span class="keyword">true</span>;</div><div class="line">            <span class="keyword">if</span> (DEBUG) Log.v(TAG, <span class="string">"BOOT_COMPLETED was already sent"</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    Log.v(TAG, <span class="string">"Starting SystemUI services for user "</span> +</div><div class="line">            Process.myUserHandle().getIdentifier() + <span class="string">"."</span>);</div><div class="line">    TimingsTraceLog log = <span class="keyword">new</span> TimingsTraceLog(<span class="string">"SystemUIBootTiming"</span>,</div><div class="line">            Trace.TRACE_TAG_APP);</div><div class="line">    log.traceBegin(<span class="string">"StartServices"</span>);</div><div class="line">    <span class="keyword">final</span> <span class="keyword">int</span> N = services.length;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;</div><div class="line">        String clsName = services[i];</div><div class="line">        <span class="keyword">if</span> (DEBUG) Log.d(TAG, <span class="string">"loading: "</span> + clsName);</div><div class="line">        log.traceBegin(<span class="string">"StartServices"</span> + clsName);</div><div class="line">        <span class="keyword">long</span> ti = System.currentTimeMillis();</div><div class="line">        Class cls;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            cls = Class.forName(clsName);</div><div class="line">            mServices[i] = (SystemUI) cls.newInstance();</div><div class="line">        &#125; <span class="keyword">catch</span>(ClassNotFoundException ex)&#123;</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(ex);</div><div class="line">        &#125; <span class="keyword">catch</span> (IllegalAccessException ex) &#123;</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(ex);</div><div class="line">        &#125; <span class="keyword">catch</span> (InstantiationException ex) &#123;</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(ex);</div><div class="line">        &#125;</div><div class="line">        mServices[i].mContext = <span class="keyword">this</span>;</div><div class="line">        mServices[i].mComponents = mComponents;</div><div class="line">        <span class="keyword">if</span> (DEBUG) Log.d(TAG, <span class="string">"running: "</span> + mServices[i]);</div><div class="line">        mServices[i].start();</div><div class="line">        log.traceEnd();</div><div class="line">        <span class="comment">//省略其他代码</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>可以看到 startServicesIfNeeded() 循环 start 了config_systemUIServiceComponents 里的 Service，这里的 Service 都是继承了 SystemUI 类的子服务，后续将一一分析这些 Service。这样，SystemUI 启动流程分析完毕。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;基于 AOSP 9.0 分析。&lt;/p&gt;
&lt;h2 id=&quot;开机流程&quot;&gt;&lt;a href=&quot;#开机流程&quot; class=&quot;headerlink&quot; title=&quot;开机流程&quot;&gt;&lt;/a&gt;开机流程&lt;/h2&gt;&lt;p&gt;开机大致会经历如下几个过程：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;uboot 在引导 os 启动，然后加载 kernel；&lt;/li&gt;
&lt;li&gt;当 kernel 加载完成后，进入 init 进程，fork 出 zygote，然后由 zygote 去启动 SystemServer；&lt;/li&gt;
&lt;li&gt;SystemServer 会启动系统运行所需的众多核心服务和普通服务，以及初始化和加载一些应用；&lt;/li&gt;
&lt;li&gt;之后就进入到锁屏或者 Launcher，开机过程就基本结束了。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;SystemUI 启动就是从 SystemServer 开始的。&lt;/p&gt;
    
    </summary>
    
      <category term="SystemUI" scheme="http://wuxiaolong.github.io/categories/SystemUI/"/>
    
    
      <category term="SystemUI" scheme="http://wuxiaolong.github.io/tags/SystemUI/"/>
    
  </entry>
  
  <entry>
    <title>Android 当点击飞行模式都发生了什么？</title>
    <link href="http://wuxiaolong.github.io/2019/04/14/AirplaneMode/"/>
    <id>http://wuxiaolong.github.io/2019/04/14/AirplaneMode/</id>
    <published>2019-04-14T13:47:31.000Z</published>
    <updated>2019-08-10T14:06:19.841Z</updated>
    
    <content type="html"><![CDATA[<p>今天中午午休时，我把手机开飞行模式了，能看到 WiFi 、蜂窝数据和蓝牙都关闭了，心想，这时候还能收到短信吗？顺着好奇心，我们不妨来研究一下源码，看看点击飞行模式都发生了什么？</p><p>基于 Android 9.0 源码分析。</p><h2 id="AirplaneModeTile-handleClick"><a href="#AirplaneModeTile-handleClick" class="headerlink" title="AirplaneModeTile#handleClick"></a>AirplaneModeTile#handleClick</h2><p>飞行模式设置入口，下拉状态栏，点击飞行模式图标，我们就从这里看起，其他入口逻辑差不多。这个源码位于<code>AOSP/frameworks/base/packages/SystemUI/src/com/android/systemui/qs/tiles/AirplaneModeTile.java</code>直接看其点击事件。<br><a id="more"></a><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AirplaneModeTile</span> <span class="keyword">extends</span> <span class="title">QSTileImpl</span>&lt;<span class="title">BooleanState</span>&gt; </span>&#123;</div><div class="line">    </div><div class="line">    <span class="comment">//省略其他代码</span></div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleClick</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">boolean</span> airplaneModeEnabled = mState.value;</div><div class="line">        MetricsLogger.action(mContext, getMetricsCategory(), !airplaneModeEnabled);</div><div class="line">        <span class="keyword">if</span> (!airplaneModeEnabled &amp;&amp; Boolean.parseBoolean(</div><div class="line">                SystemProperties.get(TelephonyProperties.PROPERTY_INECM_MODE))) &#123;</div><div class="line">            Dependency.get(ActivityStarter.class).postStartActivityDismissingKeyguard(</div><div class="line">                    <span class="keyword">new</span> Intent(TelephonyIntents.ACTION_SHOW_NOTICE_ECM_BLOCK_OTHERS), <span class="number">0</span>);</div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line">        setEnabled(!airplaneModeEnabled);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setEnabled</span><span class="params">(<span class="keyword">boolean</span> enabled)</span> </span>&#123;</div><div class="line">        <span class="keyword">final</span> ConnectivityManager mgr =</div><div class="line">                (ConnectivityManager) mContext.getSystemService(Context.CONNECTIVITY_SERVICE);</div><div class="line">        mgr.setAirplaneMode(enabled);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="comment">//省略其他代码</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>接下来调用 ConnectivityManager#setAirplaneMode 方法。</p><h2 id="ConnectivityManager-setAirplaneMode"><a href="#ConnectivityManager-setAirplaneMode" class="headerlink" title="ConnectivityManager#setAirplaneMode"></a>ConnectivityManager#setAirplaneMode</h2><p>AOSP/frameworks/base/core/java/android/net/ConnectivityManager.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RequiresPermission</span>(anyOf = &#123;</div><div class="line">        android.Manifest.permission.NETWORK_SETTINGS,</div><div class="line">        android.Manifest.permission.NETWORK_SETUP_WIZARD,</div><div class="line">        android.Manifest.permission.NETWORK_STACK&#125;)</div><div class="line"><span class="meta">@SystemApi</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAirplaneMode</span><span class="params">(<span class="keyword">boolean</span> enable)</span> </span>&#123;</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        mService.setAirplaneMode(enable);</div><div class="line">    &#125; <span class="keyword">catch</span> (RemoteException e) &#123;</div><div class="line">        <span class="keyword">throw</span> e.rethrowFromSystemServer();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>mService 是 IConnectivityManager，是个接口，其实现看 ConnectivityService#setAirplaneMode。</p><h2 id="ConnectivityService-setAirplaneMode"><a href="#ConnectivityService-setAirplaneMode" class="headerlink" title="ConnectivityService#setAirplaneMode"></a>ConnectivityService#setAirplaneMode</h2><p>/AOSP/frameworks/base/services/core/java/com/android/server</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAirplaneMode</span><span class="params">(<span class="keyword">boolean</span> enable)</span> </span>&#123;</div><div class="line">    enforceNetworkStackSettingsOrSetup();</div><div class="line">    <span class="keyword">final</span> <span class="keyword">long</span> ident = Binder.clearCallingIdentity();</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        <span class="keyword">final</span> ContentResolver cr = mContext.getContentResolver();</div><div class="line">        Settings.Global.putInt(cr, Settings.Global.AIRPLANE_MODE_ON, encodeBool(enable));</div><div class="line">        Intent intent = <span class="keyword">new</span> Intent(Intent.ACTION_AIRPLANE_MODE_CHANGED);</div><div class="line">        intent.putExtra(<span class="string">"state"</span>, enable);</div><div class="line">        mContext.sendBroadcastAsUser(intent, UserHandle.ALL);</div><div class="line">    &#125; <span class="keyword">finally</span> &#123;</div><div class="line">        Binder.restoreCallingIdentity(ident);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>这里设置了飞行模式状态的系统变量以及发送 ACTION_AIRPLANE_MODE_CHANGED 系统广播，接下来看看该广播的接受。经过查找，ACTION_AIRPLANE_MODE_CHANGED 广播接受有好几次，，而手机开启或关闭飞行模式时，主要是开启或关闭 Radio 无线通信，其处理逻辑在 PhoneGlobals 类中。另外 WiFi 、蜂窝数据和蓝牙处理都能相应追踪到。</p><p>补充：什么是 Radio？Radio 是无线通信模块的驱动程序，负责网络通信。</p><h2 id="PhoneGlobals"><a href="#PhoneGlobals" class="headerlink" title="PhoneGlobals"></a>PhoneGlobals</h2><p>AOSP/packages/services/Telephony/src/com/android/phone/PhoneGlobals.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PhoneGlobals</span> <span class="keyword">extends</span> <span class="title">ContextWrapper</span> </span>&#123;</div><div class="line"> </div><div class="line">    <span class="comment">//省略其他代码</span></div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">handleAirplaneModeChange</span><span class="params">(Context context, <span class="keyword">int</span> newMode)</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span> cellState = Settings.Global.getInt(context.getContentResolver(),</div><div class="line">                Settings.Global.CELL_ON, PhoneConstants.CELL_ON_FLAG);</div><div class="line">        <span class="keyword">boolean</span> isAirplaneNewlyOn = (newMode == <span class="number">1</span>);</div><div class="line">        <span class="keyword">switch</span> (cellState) &#123;</div><div class="line">            <span class="keyword">case</span> PhoneConstants.CELL_OFF_FLAG:</div><div class="line">                <span class="comment">// Airplane mode does not affect the cell radio if user</span></div><div class="line">                <span class="comment">// has turned it off.</span></div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> PhoneConstants.CELL_ON_FLAG:</div><div class="line">                maybeTurnCellOff(context, isAirplaneNewlyOn);</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> PhoneConstants.CELL_OFF_DUE_TO_AIRPLANE_MODE_FLAG:</div><div class="line">                maybeTurnCellOn(context, isAirplaneNewlyOn);</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/*</span></div><div class="line">     * Returns true if the radio must be turned off when entering airplane mode.</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isCellOffInAirplaneMode</span><span class="params">(Context context)</span> </span>&#123;</div><div class="line">        String airplaneModeRadios = Settings.Global.getString(context.getContentResolver(),</div><div class="line">                Settings.Global.AIRPLANE_MODE_RADIOS);</div><div class="line">        <span class="keyword">return</span> airplaneModeRadios == <span class="keyword">null</span></div><div class="line">                || airplaneModeRadios.contains(Settings.Global.RADIO_CELL);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setRadioPowerOff</span><span class="params">(Context context)</span> </span>&#123;</div><div class="line">        Log.i(LOG_TAG, <span class="string">"Turning radio off - airplane"</span>);</div><div class="line">        Settings.Global.putInt(context.getContentResolver(), Settings.Global.CELL_ON,</div><div class="line">                 PhoneConstants.CELL_OFF_DUE_TO_AIRPLANE_MODE_FLAG);</div><div class="line">        SystemProperties.set(<span class="string">"persist.radio.airplane_mode_on"</span>, <span class="string">"1"</span>);</div><div class="line">        Settings.Global.putInt(getContentResolver(), Settings.Global.ENABLE_CELLULAR_ON_BOOT, <span class="number">0</span>);</div><div class="line">        PhoneUtils.setRadioPower(<span class="keyword">false</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setRadioPowerOn</span><span class="params">(Context context)</span> </span>&#123;</div><div class="line">        Log.i(LOG_TAG, <span class="string">"Turning radio on - airplane"</span>);</div><div class="line">        Settings.Global.putInt(context.getContentResolver(), Settings.Global.CELL_ON,</div><div class="line">                PhoneConstants.CELL_ON_FLAG);</div><div class="line">        Settings.Global.putInt(getContentResolver(), Settings.Global.ENABLE_CELLULAR_ON_BOOT,</div><div class="line">                <span class="number">1</span>);</div><div class="line">        SystemProperties.set(<span class="string">"persist.radio.airplane_mode_on"</span>, <span class="string">"0"</span>);</div><div class="line">        PhoneUtils.setRadioPower(<span class="keyword">true</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">maybeTurnCellOff</span><span class="params">(Context context, <span class="keyword">boolean</span> isAirplaneNewlyOn)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (isAirplaneNewlyOn) &#123;</div><div class="line">            <span class="comment">// If we are trying to turn off the radio, make sure there are no active</span></div><div class="line">            <span class="comment">// emergency calls.  If there are, switch airplane mode back to off.</span></div><div class="line">            TelecomManager tm = (TelecomManager) context.getSystemService(TELECOM_SERVICE);</div><div class="line"></div><div class="line">            <span class="keyword">if</span> (tm != <span class="keyword">null</span> &amp;&amp; tm.isInEmergencyCall()) &#123;</div><div class="line">                <span class="comment">// Switch airplane mode back to off.</span></div><div class="line">                ConnectivityManager.from(<span class="keyword">this</span>).setAirplaneMode(<span class="keyword">false</span>);</div><div class="line">                Toast.makeText(<span class="keyword">this</span>, R.string.radio_off_during_emergency_call, Toast.LENGTH_LONG)</div><div class="line">                        .show();</div><div class="line">                Log.i(LOG_TAG, <span class="string">"Ignoring airplane mode: emergency call. Turning airplane off"</span>);</div><div class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (isCellOffInAirplaneMode(context)) &#123;</div><div class="line">                setRadioPowerOff(context);</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                Log.i(LOG_TAG, <span class="string">"Ignoring airplane mode: settings prevent cell radio power off"</span>);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">maybeTurnCellOn</span><span class="params">(Context context, <span class="keyword">boolean</span> isAirplaneNewlyOn)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (!isAirplaneNewlyOn) &#123;</div><div class="line">            setRadioPowerOn(context);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Receiver for misc intent broadcasts the Phone app cares about.</div><div class="line">     */</div><div class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">PhoneAppBroadcastReceiver</span> <span class="keyword">extends</span> <span class="title">BroadcastReceiver</span> </span>&#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceive</span><span class="params">(Context context, Intent intent)</span> </span>&#123;</div><div class="line">            String action = intent.getAction();</div><div class="line">            <span class="keyword">if</span> (action.equals(Intent.ACTION_AIRPLANE_MODE_CHANGED)) &#123;</div><div class="line">                <span class="keyword">int</span> airplaneMode = Settings.Global.getInt(getContentResolver(),</div><div class="line">                        Settings.Global.AIRPLANE_MODE_ON, AIRPLANE_OFF);</div><div class="line">                <span class="comment">// Treat any non-OFF values as ON.</span></div><div class="line">                <span class="keyword">if</span> (airplaneMode != AIRPLANE_OFF) &#123;</div><div class="line">                    airplaneMode = AIRPLANE_ON;</div><div class="line">                &#125;</div><div class="line">                handleAirplaneModeChange(context, airplaneMode);</div><div class="line">            &#125; <span class="comment">//省略其他代码</span></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">  <span class="comment">//省略其他代码</span></div><div class="line">&#125;</div></pre></td></tr></table></figure><p>PhoneUtils.setRadioPower 会继续调用 GsmCdmaPhone#setRadioPower，调用 mSST.setRadioPower，最终由 mSST 对象向 RIL 对象发起关闭或开启 Radio 无线通信模块的请求，这里就不细看了，有兴趣可以自己继续跟下去。到这里我们就对“Android 当点击飞行模式都发生了什么？”流程有了大致了解，就酱紫，Over。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天中午午休时，我把手机开飞行模式了，能看到 WiFi 、蜂窝数据和蓝牙都关闭了，心想，这时候还能收到短信吗？顺着好奇心，我们不妨来研究一下源码，看看点击飞行模式都发生了什么？&lt;/p&gt;
&lt;p&gt;基于 Android 9.0 源码分析。&lt;/p&gt;
&lt;h2 id=&quot;AirplaneModeTile-handleClick&quot;&gt;&lt;a href=&quot;#AirplaneModeTile-handleClick&quot; class=&quot;headerlink&quot; title=&quot;AirplaneModeTile#handleClick&quot;&gt;&lt;/a&gt;AirplaneModeTile#handleClick&lt;/h2&gt;&lt;p&gt;飞行模式设置入口，下拉状态栏，点击飞行模式图标，我们就从这里看起，其他入口逻辑差不多。这个源码位于&lt;code&gt;AOSP/frameworks/base/packages/SystemUI/src/com/android/systemui/qs/tiles/AirplaneModeTile.java&lt;/code&gt;直接看其点击事件。&lt;br&gt;
    
    </summary>
    
      <category term="AOSP" scheme="http://wuxiaolong.github.io/categories/AOSP/"/>
    
    
      <category term="AOSP" scheme="http://wuxiaolong.github.io/tags/AOSP/"/>
    
  </entry>
  
  <entry>
    <title>Android 亮度自动调节</title>
    <link href="http://wuxiaolong.github.io/2019/03/18/AutoBrightness/"/>
    <id>http://wuxiaolong.github.io/2019/03/18/AutoBrightness/</id>
    <published>2019-03-18T13:47:31.000Z</published>
    <updated>2019-08-10T14:06:29.722Z</updated>
    
    <content type="html"><![CDATA[<p>下拉状态栏有个亮度的进度条，如果开启了亮度自动调节开关，会随着周围光线变化，这个进度条也会随着变化，接下来就是看看这个功能是如何实现的。</p><h1 id="源码版本"><a href="#源码版本" class="headerlink" title="源码版本"></a>源码版本</h1><p>基于 Android 9.0 分析。</p><p>BrightnessDialog，位于：<br>frameworks/base/packages/SystemUI/src/com/android/systemui/settings/BrightnessDialog.java<br><a id="more"></a><br>ToggleSliderView，位于：<br>frameworks/base/packages/SystemUI/src/com/android/systemui/settings/ToggleSliderView.java</p><p>DisplayPowerController，位于：<br>frameworks/base/services/core/java/com/android/server/display/DisplayPowerController.java</p><p>AutomaticBrightnessController，位于：<br>frameworks/base/services/core/java/com/android/server/display/AutomaticBrightnessController.java</p><p>BrightnessMappingStrategy，</p><h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>状态栏里亮度页面是 BrightnessDialog，其中进度条设置是 ToggleSliderView，亮度自动调节主要是 DisplayPowerController 和 AutomaticBrightnessController 两个类，当亮度发生变化时，如果关联到 ToggleSliderView，用的是 ContentObserver，Uri 为 Settings.System.SCREEN_AUTO_BRIGHTNESS_ADJ。</p><h1 id="源码梳理"><a href="#源码梳理" class="headerlink" title="源码梳理"></a>源码梳理</h1><p>1、BrightnessDialog#onCreate：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">    <span class="comment">//省略部分代码</span></div><div class="line">    mBrightnessController = <span class="keyword">new</span> BrightnessController(<span class="keyword">this</span>, icon, slider);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>2、这里进行了 BrightnessController 初始化，来看下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="title">BrightnessController</span><span class="params">(Context context, ImageView icon, ToggleSlider control)</span> </span>&#123;</div><div class="line">    <span class="comment">//省略部分代码</span></div><div class="line">    mBrightnessObserver = <span class="keyword">new</span> BrightnessObserver(mHandler);</div><div class="line">    <span class="comment">//省略部分代码</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>又进行了 BrightnessObserver 初始化：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/** ContentObserver to watch brightness **/</span></div><div class="line"><span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">BrightnessObserver</span> <span class="keyword">extends</span> <span class="title">ContentObserver</span> </span>&#123;</div><div class="line">    <span class="comment">//省略部分代码</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Uri BRIGHTNESS_FOR_VR_URI =</div><div class="line">            Settings.System.getUriFor(Settings.System.SCREEN_BRIGHTNESS_FOR_VR);</div><div class="line">    <span class="comment">//Add By WuXiaolong for AutomaticBrightness</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Uri BRIGHTNESS_ADJ_URI =</div><div class="line">            Settings.System.getUriFor(Settings.System.SCREEN_AUTO_BRIGHTNESS_ADJ);</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BrightnessObserver</span><span class="params">(Handler handler)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>(handler);</div><div class="line">    &#125;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onChange</span><span class="params">(<span class="keyword">boolean</span> selfChange)</span> </span>&#123;</div><div class="line">        onChange(selfChange, <span class="keyword">null</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onChange</span><span class="params">(<span class="keyword">boolean</span> selfChange, Uri uri)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (selfChange) <span class="keyword">return</span>;</div><div class="line">        <span class="keyword">if</span> (BRIGHTNESS_MODE_URI.equals(uri)) &#123;</div><div class="line">            mBackgroundHandler.post(mUpdateModeRunnable);</div><div class="line">            mBackgroundHandler.post(mUpdateSliderRunnable);</div><div class="line">        &#125; </div><div class="line">        <span class="comment">//省略部分代码</span></div><div class="line">        <span class="comment">//Add By WuXiaolong for AutomaticBrightness</span></div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (BRIGHTNESS_ADJ_URI.equals(uri) &amp;&amp; mAutomatic) &#123;</div><div class="line">            mBackgroundHandler.post(mUpdateSliderRunnable);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            mBackgroundHandler.post(mUpdateModeRunnable);</div><div class="line">            mBackgroundHandler.post(mUpdateSliderRunnable);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">for</span> (BrightnessStateChangeCallback cb : mChangeCallbacks) &#123;</div><div class="line">            cb.onBrightnessLevelChanged();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startObserving</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">final</span> ContentResolver cr = mContext.getContentResolver();</div><div class="line">        cr.unregisterContentObserver(<span class="keyword">this</span>);</div><div class="line">        <span class="comment">//省略部分代码</span></div><div class="line">        cr.registerContentObserver(</div><div class="line">                BRIGHTNESS_FOR_VR_URI,</div><div class="line">                <span class="keyword">false</span>, <span class="keyword">this</span>, UserHandle.USER_ALL);</div><div class="line">        <span class="comment">//Add By WuXiaolong for AutomaticBrightness</span></div><div class="line">        cr.registerContentObserver(</div><div class="line">                BRIGHTNESS_ADJ_URI,</div><div class="line">                <span class="keyword">false</span>, <span class="keyword">this</span>, UserHandle.USER_ALL);</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">stopObserving</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">final</span> ContentResolver cr = mContext.getContentResolver();</div><div class="line">        cr.unregisterContentObserver(<span class="keyword">this</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>其实我目前下载的源码，这块功能是不全的，我已经加上了，哪里进行 BrightnessObserver 的 ContentObserver 注册呢？</p><p>3、回到 BrightnessDialog#onStart：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onStart</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">super</span>.onStart();</div><div class="line">    mBrightnessController.registerCallbacks();</div><div class="line">    MetricsLogger.visible(<span class="keyword">this</span>, MetricsEvent.BRIGHTNESS_DIALOG);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>4、调用<code>mBrightnessController.registerCallbacks();</code>最终走到 mStartListeningRunnable：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> <span class="keyword">final</span> Runnable mStartListeningRunnable = <span class="keyword">new</span> Runnable() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="comment">//BrightnessObserver 注册</span></div><div class="line">        mBrightnessObserver.startObserving();</div><div class="line">        mUserTracker.startTracking();</div><div class="line">        <span class="comment">// Update the slider and mode before attaching the listener so we don't</span></div><div class="line">        <span class="comment">// receive the onChanged notifications for the initial values.</span></div><div class="line">        mUpdateModeRunnable.run();</div><div class="line">        mUpdateSliderRunnable.run();</div><div class="line">        mHandler.sendEmptyMessage(MSG_ATTACH_LISTENER);</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure></p><p>当亮度有变化时，会走 BrightnessObserver#onChange，最终走到：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> <span class="keyword">final</span> Handler mHandler = <span class="keyword">new</span> Handler() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleMessage</span><span class="params">(Message msg)</span> </span>&#123;</div><div class="line">        mExternalChange = <span class="keyword">true</span>;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="keyword">switch</span> (msg.what) &#123;</div><div class="line">                <span class="comment">//省略部分代码</span></div><div class="line">                <span class="keyword">case</span> MSG_UPDATE_SLIDER:</div><div class="line">                    updateSlider(msg.arg1, msg.arg2 != <span class="number">0</span>);</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                <span class="comment">//省略部分代码</span></div><div class="line">                <span class="keyword">default</span>:</div><div class="line">                    <span class="keyword">super</span>.handleMessage(msg);</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">finally</span> &#123;</div><div class="line">            mExternalChange = <span class="keyword">false</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure></p><p>走 updateSlider方法，到 ：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">animateSliderTo</span><span class="params">(<span class="keyword">int</span> target)</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (!mControlValueInitialized) &#123;</div><div class="line">        <span class="comment">// Don't animate the first value since it's default state isn't mea</span></div><div class="line">        mControl.setValue(target);</div><div class="line">        mControlValueInitialized = <span class="keyword">true</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//省略部分代码</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>5、跳到 ToggleSliderView#setValue：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setValue</span><span class="params">(<span class="keyword">int</span> value)</span> </span>&#123;</div><div class="line">    <span class="comment">//这里正是修改进度条</span></div><div class="line">    mSlider.setProgress(value);</div><div class="line">    <span class="keyword">if</span> (mMirror != <span class="keyword">null</span>) &#123;</div><div class="line">        mMirror.setValue(value);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>接下来就是看看亮度自动调节主要的两个类 DisplayPowerController 和 AutomaticBrightnessController。DisplayPowerController 属于 Display 模块，其控制设备屏幕亮灭、背光、与Power关系密切，这里主要看下屏幕亮度的控制这方面的逻辑。</p><p>6、首先，在 DisplayManagerService 中初始化 DisplayPowerController，如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">LocalService</span> <span class="keyword">extends</span> <span class="title">DisplayManagerInternal</span> </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initPowerManagement</span><span class="params">(<span class="keyword">final</span> DisplayPowerCallbacks callbacks, Handler handler,</span></span></div><div class="line">            SensorManager sensorManager) &#123;</div><div class="line">        <span class="keyword">synchronized</span> (mSyncRoot) &#123;</div><div class="line">            <span class="comment">//省略部分代码</span></div><div class="line">            mDisplayPowerController = <span class="keyword">new</span> DisplayPowerController(</div><div class="line">                    mContext, callbacks, handler, sensorManager, blanker);</div><div class="line">        &#125;</div><div class="line">        mHandler.sendEmptyMessage(MSG_LOAD_BRIGHTNESS_CONFIGURATION);</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p><p>7、接着看下 DisplayPowerController 构造方法，如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="title">DisplayPowerController</span><span class="params">(Context context,</span></span></div><div class="line">        DisplayPowerCallbacks callbacks, Handler handler,</div><div class="line">        SensorManager sensorManager, DisplayBlanker blanker) &#123;</div><div class="line">    <span class="comment">//省略部分代码</span></div><div class="line">    mUseSoftwareAutoBrightnessConfig = resources.getBoolean(</div><div class="line">            com.android.internal.R.bool.config_automatic_brightness_available);</div><div class="line">    <span class="comment">//省略部分代码</span></div><div class="line">    <span class="keyword">if</span> (mUseSoftwareAutoBrightnessConfig) &#123;</div><div class="line">        <span class="comment">//省略部分代码</span></div><div class="line">        mBrightnessMapper = BrightnessMappingStrategy.create(resources);</div><div class="line">        <span class="keyword">if</span> (mBrightnessMapper != <span class="keyword">null</span>) &#123;</div><div class="line">            mAutomaticBrightnessController = <span class="keyword">new</span> AutomaticBrightnessController(<span class="keyword">this</span>,</div><div class="line">                    handler.getLooper(), sensorManager, mBrightnessMapper,</div><div class="line">                    lightSensorWarmUpTimeConfig, mScreenBrightnessRangeMinimum,</div><div class="line">                    mScreenBrightnessRangeMaximum, dozeScaleFactor, lightSensorRate,</div><div class="line">                    initialLightSensorRate, brighteningLightDebounce, darkeningLightDebounce,</div><div class="line">                    autoBrightnessResetAmbientLuxAfterWarmUp, hysteresisLevels);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            mUseSoftwareAutoBrightnessConfig = <span class="keyword">false</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//省略部分代码</span></div><div class="line">    mAutoBrightnessAdjustment = getAutoBrightnessAdjustmentSetting();</div><div class="line">    mTemporaryAutoBrightnessAdjustment = Float.NaN;</div><div class="line">    <span class="comment">//省略部分代码</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>由于亮屏之后屏幕自动亮度才会生效，所以在亮屏的时候，流程会走到 DisplayPowerController 中的核心函数 updatePowerState()：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">updatePowerState</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="comment">// Update the power state request.</span></div><div class="line">    <span class="comment">//省略部分代码</span></div><div class="line">    </div><div class="line">    <span class="keyword">final</span> <span class="keyword">boolean</span> autoBrightnessAdjustmentChanged = updateAutoBrightnessAdjustment();</div><div class="line">    <span class="keyword">if</span> (autoBrightnessAdjustmentChanged) &#123;</div><div class="line">        mTemporaryAutoBrightnessAdjustment = Float.NaN;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// Use the autobrightness adjustment override if set.</span></div><div class="line">    <span class="keyword">final</span> <span class="keyword">float</span> autoBrightnessAdjustment;</div><div class="line">    <span class="keyword">if</span> (!Float.isNaN(mTemporaryAutoBrightnessAdjustment)) &#123;</div><div class="line">        autoBrightnessAdjustment = mTemporaryAutoBrightnessAdjustment;</div><div class="line">        mAppliedTemporaryAutoBrightnessAdjustment = <span class="keyword">true</span>;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        autoBrightnessAdjustment = mAutoBrightnessAdjustment;</div><div class="line">        mAppliedTemporaryAutoBrightnessAdjustment = <span class="keyword">false</span>;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">boolean</span> hadUserBrightnessPoint = <span class="keyword">false</span>;</div><div class="line">    <span class="comment">// Configure auto-brightness.</span></div><div class="line">    <span class="keyword">if</span> (mAutomaticBrightnessController != <span class="keyword">null</span>) &#123;</div><div class="line">        hadUserBrightnessPoint = mAutomaticBrightnessController.hasUserDataPoints();</div><div class="line">        mAutomaticBrightnessController.configure(autoBrightnessEnabled,</div><div class="line">                mBrightnessConfiguration,</div><div class="line">                mLastUserSetScreenBrightness / (<span class="keyword">float</span>) PowerManager.BRIGHTNESS_ON,</div><div class="line">                userSetBrightnessChanged, autoBrightnessAdjustment,</div><div class="line">                autoBrightnessAdjustmentChanged, mPowerRequest.policy);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="comment">// Apply auto-brightness.</span></div><div class="line">    <span class="keyword">boolean</span> slowChange = <span class="keyword">false</span>;</div><div class="line">    <span class="keyword">if</span> (brightness &lt; <span class="number">0</span>) &#123;</div><div class="line">        <span class="keyword">float</span> newAutoBrightnessAdjustment = autoBrightnessAdjustment;</div><div class="line">        <span class="keyword">if</span> (autoBrightnessEnabled) &#123;</div><div class="line">            brightness = mAutomaticBrightnessController.getAutomaticScreenBrightness();</div><div class="line">            newAutoBrightnessAdjustment =</div><div class="line">                    mAutomaticBrightnessController.getAutomaticScreenBrightnessAdjustment();</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (brightness &gt;= <span class="number">0</span>) &#123;</div><div class="line">            <span class="comment">// Use current auto-brightness value and slowly adjust to changes.</span></div><div class="line">            brightness = clampScreenBrightness(brightness);</div><div class="line">            <span class="keyword">if</span> (mAppliedAutoBrightness &amp;&amp; !autoBrightnessAdjustmentChanged) &#123;</div><div class="line">                slowChange = <span class="keyword">true</span>; <span class="comment">// slowly adapt to auto-brightness</span></div><div class="line">            &#125;</div><div class="line">            <span class="comment">// Tell the rest of the system about the new brightness. Note that we do this</span></div><div class="line">            <span class="comment">// before applying the low power or dim transformations so that the slider</span></div><div class="line">            <span class="comment">// accurately represents the full possible range, even if they range changes what</span></div><div class="line">            <span class="comment">// it means in absolute terms.</span></div><div class="line">            putScreenBrightnessSetting(brightness);</div><div class="line">            mAppliedAutoBrightness = <span class="keyword">true</span>;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            mAppliedAutoBrightness = <span class="keyword">false</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (autoBrightnessAdjustment != newAutoBrightnessAdjustment) &#123;</div><div class="line">            <span class="comment">// If the autobrightness controller has decided to change the adjustment value</span></div><div class="line">            <span class="comment">// used, make sure that's reflected in settings.</span></div><div class="line">            putAutoBrightnessAdjustmentSetting(newAutoBrightnessAdjustment);</div><div class="line">        &#125;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        mAppliedAutoBrightness = <span class="keyword">false</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//省略部分代码</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>接下来分别看看 autoBrightnessAdjustment 和 newAutoBrightnessAdjustment 怎么来的？</p><p>autoBrightnessAdjustment 是来自 mTemporaryAutoBrightnessAdjustment 或 mAutoBrightnessAdjustment 赋值，mAutoBrightnessAdjustment 在第 7 步<code>mAutoBrightnessAdjustment = getAutoBrightnessAdjustmentSetting();</code>有初始化，看下 getAutoBrightnessAdjustmentSetting()：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">float</span> <span class="title">getAutoBrightnessAdjustmentSetting</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">final</span> <span class="keyword">float</span> adj = Settings.System.getFloatForUser(mContext.getContentResolver(),</div><div class="line">            Settings.System.SCREEN_AUTO_BRIGHTNESS_ADJ, <span class="number">0.0f</span>, UserHandle.USER_CURRENT);</div><div class="line">    <span class="keyword">return</span> Float.isNaN(adj) ? <span class="number">0.0f</span> : clampAutoBrightnessAdjustment(adj);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>继续看下 clampAutoBrightnessAdjustment：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">float</span> <span class="title">clampAutoBrightnessAdjustment</span><span class="params">(<span class="keyword">float</span> value)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> MathUtils.constrain(value, -<span class="number">1.0f</span>, <span class="number">1.0f</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>这里注意下 MathUtils.constrain() 表示百分比缩放函数，比如 MathUtils.constrain(0.5, 0, 255) 表示 （255-0）*0.5。</p><p>这样了解了 autoBrightnessAdjustment，接下来看 newAutoBrightnessAdjustment。</p><p>8、回到 DisplayPowerController#updatePowerState()，看到 newAutoBrightnessAdjustment 调用了 <code>AutomaticBrightnessController.getAutomaticScreenBrightnessAdjustment()</code>，最终是到了 <code>BrightnessMapper#getAutoBrightnessAdjustment()</code> 其中 mAutoBrightnessAdjustment 变量，赋值是在 <code>BrightnessMapper#setAutoBrightnessAdjustment</code>：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">setAutoBrightnessAdjustment</span><span class="params">(<span class="keyword">float</span> adjustment)</span> </span>&#123;</div><div class="line">    adjustment = MathUtils.constrain(adjustment, -<span class="number">1</span>, <span class="number">1</span>);</div><div class="line">    <span class="keyword">if</span> (adjustment == mAutoBrightnessAdjustment) &#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (DEBUG) &#123;</div><div class="line">        Slog.d(TAG, <span class="string">"setAutoBrightnessAdjustment: "</span> + mAutoBrightnessAdjustment + <span class="string">" =&gt; "</span> +</div><div class="line">                adjustment);</div><div class="line">        PLOG.start(<span class="string">"auto-brightness adjustment"</span>);</div><div class="line">    &#125;</div><div class="line">    mAutoBrightnessAdjustment = adjustment;</div><div class="line">    computeSpline();</div><div class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>9、BrightnessMapper#setAutoBrightnessAdjustment 这个方法调用又回到了 AutomaticBrightnessController#setAutoBrightnessAdjustment：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">setAutoBrightnessAdjustment</span><span class="params">(<span class="keyword">float</span> adjustment)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> mBrightnessMapper.setAutoBrightnessAdjustment(adjustment);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p><code>AutomaticBrightnessController#setAutoBrightnessAdjustment</code>调用是来到 <code>AutomaticBrightnessController#configure()</code>方法：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(<span class="keyword">boolean</span> enable, @Nullable BrightnessConfiguration configuration,</span></span></div><div class="line">        <span class="keyword">float</span> brightness, <span class="keyword">boolean</span> userChangedBrightness, <span class="keyword">float</span> adjustment,</div><div class="line">        <span class="keyword">boolean</span> userChangedAutoBrightnessAdjustment, <span class="keyword">int</span> displayPolicy) &#123;</div><div class="line">    <span class="comment">// While dozing, the application processor may be suspended which will prevent us from</span></div><div class="line">    <span class="comment">// receiving new information from the light sensor. On some devices, we may be able to</span></div><div class="line">    <span class="comment">// switch to a wake-up light sensor instead but for now we will simply disable the sensor</span></div><div class="line">    <span class="comment">// and hold onto the last computed screen auto brightness.  We save the dozing flag for</span></div><div class="line">    <span class="comment">// debugging purposes.</span></div><div class="line">    <span class="keyword">boolean</span> dozing = (displayPolicy == DisplayPowerRequest.POLICY_DOZE);</div><div class="line">    <span class="keyword">boolean</span> changed = setBrightnessConfiguration(configuration);</div><div class="line">    changed |= setDisplayPolicy(displayPolicy);</div><div class="line">    <span class="keyword">if</span> (userChangedAutoBrightnessAdjustment) &#123;</div><div class="line">        changed |= setAutoBrightnessAdjustment(adjustment);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (userChangedBrightness &amp;&amp; enable) &#123;</div><div class="line">        <span class="comment">// Update the brightness curve with the new user control point. It's critical this</span></div><div class="line">        <span class="comment">// happens after we update the autobrightness adjustment since it may reset it.</span></div><div class="line">        changed |= setScreenBrightnessByUser(brightness);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">final</span> <span class="keyword">boolean</span> userInitiatedChange =</div><div class="line">            userChangedBrightness || userChangedAutoBrightnessAdjustment;</div><div class="line">    <span class="keyword">if</span> (userInitiatedChange &amp;&amp; enable &amp;&amp; !dozing) &#123;</div><div class="line">        prepareBrightnessAdjustmentSample();</div><div class="line">    &#125;</div><div class="line">    changed |= setLightSensorEnabled(enable &amp;&amp; !dozing);</div><div class="line">    <span class="keyword">if</span> (changed) &#123;</div><div class="line">        updateAutoBrightness(<span class="keyword">false</span> <span class="comment">/*sendUpdate*/</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p><code>AutomaticBrightnessController#configure()</code>调用来到了 <code>DisplayPowerController #updatePowerState()</code>。</p><p>这样也知道了 newAutoBrightnessAdjustment，继续 putAutoBrightnessAdjustmentSetting：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">putAutoBrightnessAdjustmentSetting</span><span class="params">(<span class="keyword">float</span> adjustment)</span> </span>&#123;</div><div class="line">    mAutoBrightnessAdjustment = adjustment;</div><div class="line">    Settings.System.putFloatForUser(mContext.getContentResolver(),</div><div class="line">            Settings.System.SCREEN_AUTO_BRIGHTNESS_ADJ, adjustment, UserHandle.USER_CURRENT);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>就调到第 4 步 BrightnessObserver#onChange，进度条随之变化，Over！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;下拉状态栏有个亮度的进度条，如果开启了亮度自动调节开关，会随着周围光线变化，这个进度条也会随着变化，接下来就是看看这个功能是如何实现的。&lt;/p&gt;
&lt;h1 id=&quot;源码版本&quot;&gt;&lt;a href=&quot;#源码版本&quot; class=&quot;headerlink&quot; title=&quot;源码版本&quot;&gt;&lt;/a&gt;源码版本&lt;/h1&gt;&lt;p&gt;基于 Android 9.0 分析。&lt;/p&gt;
&lt;p&gt;BrightnessDialog，位于：&lt;br&gt;frameworks/base/packages/SystemUI/src/com/android/systemui/settings/BrightnessDialog.java&lt;br&gt;
    
    </summary>
    
      <category term="AOSP" scheme="http://wuxiaolong.github.io/categories/AOSP/"/>
    
    
      <category term="AOSP" scheme="http://wuxiaolong.github.io/tags/AOSP/"/>
    
  </entry>
  
  <entry>
    <title>AOSP 预置 APP</title>
    <link href="http://wuxiaolong.github.io/2019/02/10/APPPreset/"/>
    <id>http://wuxiaolong.github.io/2019/02/10/APPPreset/</id>
    <published>2019-02-10T13:47:31.000Z</published>
    <updated>2019-08-10T14:01:54.751Z</updated>
    
    <content type="html"><![CDATA[<p>Android 系统预置 APP 是做 Framework 应用开发经常经常会遇到的工作，预置 APP 分为两种，一种是直接预置 APK，一种是预置带有源码的 APP。</p><h2 id="预置-apk"><a href="#预置-apk" class="headerlink" title="预置 apk"></a>预置 apk</h2><h3 id="示例说明"><a href="#示例说明" class="headerlink" title="示例说明"></a>示例说明</h3><p>以 Shadowsocks.apk 示例，在 AOSP/packages/apps 新建名为 Shadowsocks 的文件，放入 Shadowsocks.apk，再新建 Android.mk，内容如下：<br><a id="more"></a><br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">LOCAL_PATH := $(call my-dir)</div><div class="line"></div><div class="line">include $(CLEAR_VARS)</div><div class="line"></div><div class="line">LOCAL_MODULE_TAGS := optional</div><div class="line"></div><div class="line">LOCAL_MODULE := &lt; your app folder name &gt;</div><div class="line"></div><div class="line"># 签名</div><div class="line">LOCAL_CERTIFICATE := &lt; desired key &gt;</div><div class="line"></div><div class="line"># 指定 src 目录 </div><div class="line">LOCAL_SRC_FILES := &lt; app apk filename &gt;</div><div class="line"></div><div class="line">LOCAL_MODULE_CLASS := APPS</div><div class="line"></div><div class="line"># 该模块的后缀，不用定义</div><div class="line">#LOCAL_MODULE_SUFFIX := $(COMMON_ANDROID_PACKAGE_SUFFIX)</div><div class="line"></div><div class="line">include $(BUILD_PREBUILT)</div></pre></td></tr></table></figure></p><p><strong>解释：</strong></p><ul><li><code>LOCAL_PATH := $(call my-dir)</code></li></ul><p>每个 Android.mk 文件必须以定义 LOCAL_PATH 为开始，它用于在开发 tree 中查找源文件。</p><ul><li><code>include $(CLEAR_VARS)</code></li></ul><p>CLEAR_VARS 变量由 Build System 提供，并指向一个指定的 GNU Makefile，由它负责清理很多 LOCAL_xxx。</p><p>例如：LOCAL_MODULE, LOCAL_SRC_FILES, LOCAL_STATIC_LIBRARIES 等等，但不清理 LOCAL_PATH。</p><ul><li><code>LOCAL_MODULE_TAGS ：= user eng tests optional</code></li></ul><p>可选定义，表示在什么版本情况下编译该版本，默认 optional<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">user: 指该模块只在 user 版本下才编译</div><div class="line">eng: 指该模块只在 eng 版本下才编译</div><div class="line">tests: 指该模块只在 tests 版本下才编译</div><div class="line">optional:指该模块在所有版本下都编译</div></pre></td></tr></table></figure></p><ul><li>LOCAL_MODULE</li></ul><p>模块名，可不用定义，默认 = $(LOCAL_PACKAGE_NAME)，不能和既有模块相同，如果该变量未设置，则使用 LOCAL_PACKAGE_NAME，如果再没有，就会编译失败。</p><ul><li>LOCAL_CERTIFICATE</li></ul><p>在什么情况下签名。</p><p>testkey：普通 APK，默认情况下使用。</p><p>platform：该 APK 完成一些系统的核心功能。经过对系统中存在的文件夹的访问测试，<br>这种方式编译出来的 APK 所在进程的 UID 为 system，可以参见 Settings。</p><p>shared：该 APK 需要和 home/contacts 进程共享数据，可以参见 Launcher。</p><p>media：该 APK 是 media/download 系统中的一环，可以参见 Gallery。</p><ul><li>LOCAL_MODULE_CLASS</li></ul><p>指定模块的类型，可不用定义。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"># 编译 apk 文件</div><div class="line">LOCAL_MODULE_CLASS := APPS</div><div class="line"></div><div class="line"># 编译 jar 包</div><div class="line">LOCAL_MODULE_CLASS := JAVA_LIBRAYIES</div><div class="line"></div><div class="line"># 定义动态库文件</div><div class="line">LOCAL_MODULE_CLASS := SHARED_LIBRAYIES</div><div class="line"></div><div class="line"># 编译可执行文件</div><div class="line">LOCAL_MODULE_CLASS := EXECUTABLES</div></pre></td></tr></table></figure><ul><li><code>include $(BUILD_PACKAGE)</code></li></ul><p>表示生成一个 apk，它可以是多种类型</p><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">BUILD_PACKAGE（既可以编apk，也可以编资源包文件，但是需要指定LOCAL_EXPORT_PACKAGE_RESOURCES:=<span class="literal">true</span>)</div><div class="line"></div><div class="line">BUILD_JAVA_LIBRARY（java共享库）</div><div class="line"></div><div class="line">BUILD_STATIC_JAVA_LIBRARY（java静态库）</div><div class="line"></div><div class="line">BUILD_EXECUTABLE（执行文件）</div><div class="line"></div><div class="line">BUILD_SHARED_LIBRARY（native共享库）</div><div class="line"></div><div class="line">BUILD_STATIC_LIBRARY（native静态库）</div></pre></td></tr></table></figure><h3 id="完整示例"><a href="#完整示例" class="headerlink" title="完整示例"></a>完整示例</h3><p>Shadowsocks.apk 对应如下：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">LOCAL_PATH := $(call my-dir)</div><div class="line"></div><div class="line">include $(CLEAR_VARS)</div><div class="line"></div><div class="line">LOCAL_MODULE_TAGS := optional</div><div class="line"></div><div class="line">LOCAL_MODULE := Shadowsocks</div><div class="line"></div><div class="line"># 系统签名</div><div class="line">LOCAL_CERTIFICATE := PRESIGNED</div><div class="line"></div><div class="line">LOCAL_SRC_FILES := $(LOCAL_MODULE).apk</div><div class="line"></div><div class="line">LOCAL_MODULE_CLASS := APPS</div><div class="line"></div><div class="line">#LOCAL_MODULE_SUFFIX := $(COMMON_ANDROID_PACKAGE_SUFFIX)</div><div class="line"></div><div class="line">include $(BUILD_PREBUILT)</div></pre></td></tr></table></figure></p><h4 id="更改-device-mk-文件"><a href="#更改-device-mk-文件" class="headerlink" title="更改 device.mk 文件"></a>更改 device.mk 文件</h4><p>AOSP/build/target/board/lunch的版本/device.mk 文件，我编的是 aosp_x86-eng，所以增加或者更新 AOSP/build/target/board/generic_x86/device.mk：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">PRODUCT_PACKAGES += \</div><div class="line">Shadowsocks \</div></pre></td></tr></table></figure></p><p>使用 mmm 命令来编译指定的模块：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mmm packages/apps/Shadowsocks</div></pre></td></tr></table></figure></p><p>编译好模块后，还要重新打包一下 system.img 文件：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make snod</div></pre></td></tr></table></figure></p><p>完成后就可以烧录了。</p><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p><strong>1、如何将 APK 预置到 system/priv-app 里？</strong></p><p>加入 priv-app 方法:在 Android.mk 中增加 LOCAL_PRIVILEGED_MODULE := true</p><h2 id="预置有源码-APP"><a href="#预置有源码-APP" class="headerlink" title="预置有源码 APP"></a>预置有源码 APP</h2><p>预置有源码 APP 比预置 APK 要麻烦很多，可能会涉及 jar 包和 so 库等。现在基本都是基于 Android Studio 的项目 MyTestProject1，我们先在 AOSP/packages/apps 新建名为 MyTestProject2 的文件夹，在新建 MyTestProject2/libs、MyTestProject2/res、MyTestProject2/src，分别将 MyTestProject1 下 jar 包和 so 库拷到 MyTestProject2/libs 和 MyTestProject2/libs/armeabi，将 MyTestProject1/app/src/main/res 拷到 MyTestProject2/res，将 MyTestProject1/app/src/main/java 下文件拷到 MyTestProject2/src 下。</p><h3 id="引用第三方-jar-包"><a href="#引用第三方-jar-包" class="headerlink" title="引用第三方 jar 包"></a>引用第三方 jar 包</h3><p>假设，我们当前目录下的 libs 有 AndroidUtil.jar包，我们想引用它，需要做两个步骤：</p><p>第一步、 声明我们 jar 包所在的目录</p><p><code>LOCAL_PREBUILT_STATIC_JAVA_LIBRARIES := AndroidUtil:libs/AndroidUtil.jar</code></p><p>这行代码的意思大概可以理解成这样，声明一个变量 AndroidUtil，它的 value 是 libs/AndroidUtil.jar<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">include $(CLEAR_VARS)</div><div class="line">LOCAL_PREBUILT_STATIC_JAVA_LIBRARIES := AndroidUtil:libs/AndroidUtil.jar</div><div class="line">include $(BUILD_MULTI_PREBUILT)</div></pre></td></tr></table></figure></p><p>第二步、 引用我们声明 jar 包的变量<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">include $(CLEAR_VARS)</div><div class="line"># 省略其他</div><div class="line">LOCAL_STATIC_JAVA_LIBRARIES := \</div><div class="line">AndroidUtil</div><div class="line"># 省略其他</div><div class="line">include $(BUILD_PACKAGE)</div></pre></td></tr></table></figure></p><h3 id="引用-so-库"><a href="#引用-so-库" class="headerlink" title="引用 so 库"></a>引用 so 库</h3><p>假设，我们当前目录下的 libs/armeabi 有 libBaiduMapSDK1.so、libBaiduMapSDK1.so，libs/arm64-v8a 有 libBaiduMapSDK1.so、libBaiduMapSDK1.so，我们想引用它，有两种方法，可以在根目录 Android.mk 引用 so 库，也可以在 libs 下再建个 Android.mk 配置好 so 库，然后 include，推荐第二种方式。</p><p>libs/Android.mk<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">#====================================================</div><div class="line">include $(CLEAR_VARS)</div><div class="line">LOCAL_MODULE_TAGS := optional</div><div class="line">LOCAL_MODULE_SUFFIX := .so</div><div class="line">LOCAL_MODULE := libBaiduMapSDK1</div><div class="line">LOCAL_MODULE_CLASS := SHARED_LIBRARIES</div><div class="line">LOCAL_SRC_FILES_arm :=libs/armeabi/$(LOCAL_MODULE).so</div><div class="line">LOCAL_SRC_FILES_arm64 :=libs/arm64-v8a/$(LOCAL_MODULE).so</div><div class="line">LOCAL_MODULE_TARGET_ARCHS:= arm arm64</div><div class="line">LOCAL_MULTILIB := both</div><div class="line">include $(BUILD_PREBUILT)</div><div class="line">#====================================================</div><div class="line"></div><div class="line">#====================================================</div><div class="line">include $(CLEAR_VARS)</div><div class="line">LOCAL_MODULE_TAGS := optional</div><div class="line">LOCAL_MODULE_SUFFIX := .so</div><div class="line">LOCAL_MODULE := libBaiduMapSDK2</div><div class="line">LOCAL_MODULE_CLASS := SHARED_LIBRARIES</div><div class="line">LOCAL_SRC_FILES_arm :=libs/armeabi/$(LOCAL_MODULE).so</div><div class="line">LOCAL_SRC_FILES_arm64 :=libs/arm64-v8a/$(LOCAL_MODULE).so</div><div class="line">LOCAL_MODULE_TARGET_ARCHS:= arm arm64</div><div class="line">LOCAL_MULTILIB := both</div><div class="line">include $(BUILD_PREBUILT)</div></pre></td></tr></table></figure></p><p>引用 so 库<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">include $(CLEAR_VARS)</div><div class="line"># 省略其他</div><div class="line">LOCAL_JNI_SHARED_LIBRARIES :=  \</div><div class="line">libBaiduMapSDK1 \</div><div class="line">libBaiduMapSDK2</div><div class="line"># 省略其他</div><div class="line">include $(BUILD_PACKAGE)</div><div class="line"></div><div class="line">##########引用第三方 so 库##########</div><div class="line">include $(LOCAL_PATH)/libs/Android.mk</div></pre></td></tr></table></figure></p><h3 id="完整示例-1"><a href="#完整示例-1" class="headerlink" title="完整示例"></a>完整示例</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line">LOCAL_PATH:= $(call my-dir)</div><div class="line"></div><div class="line">include $(CLEAR_VARS)</div><div class="line"></div><div class="line">LOCAL_MODULE_TAGS := optional</div><div class="line"></div><div class="line">LOCAL_PACKAGE_NAME := TestName</div><div class="line"></div><div class="line">LOCAL_CERTIFICATE := platform</div><div class="line"></div><div class="line"># 引入系统资源文件</div><div class="line">LOCAL_USE_AAPT2 := <span class="literal">true</span></div><div class="line"></div><div class="line"># Java文件</div><div class="line">LOCAL_SRC_FILES := $(call all-java-files-under, src)</div><div class="line"></div><div class="line"># 资源文件，可选定义，推荐不定义</div><div class="line">#LOCAL_RESOURCE_DIR = \</div><div class="line">#        $(LOCAL_PATH)/res \</div><div class="line">#        frameworks/support/v7/appcompat/res \</div><div class="line">#        frameworks/support/design/res</div><div class="line"></div><div class="line"># 可以使用系统 hide api</div><div class="line">LOCAL_PRIVATE_PLATFORM_APIS := <span class="literal">true</span></div><div class="line"></div><div class="line"># 导入系统依赖</div><div class="line">LOCAL_STATIC_ANDROID_LIBRARIES := \</div><div class="line">        android-support-design \</div><div class="line">        android-support-v4 \</div><div class="line">        android-support-v7-appcompat \</div><div class="line">        android-support-v7-recyclerview </div><div class="line"></div><div class="line">LOCAL_STATIC_JAVA_LIBRARIES := \</div><div class="line">AndroidUtil</div><div class="line"></div><div class="line">LOCAL_JNI_SHARED_LIBRARIES :=  \</div><div class="line">libBaiduMapSDK1 \</div><div class="line">libBaiduMapSDK2</div><div class="line"></div><div class="line"># R资源生成别名，--extra-packages 是为资源文件设置别名：意思是通过该应用包名+R，com.android.test1.R 和 com.android.test2.R 都可以访问到资源</div><div class="line">LOCAL_AAPT_FLAGS := --<span class="keyword">auto</span>-add-overlay</div><div class="line">LOCAL_AAPT_FLAGS += --extra-packages android.support.v4</div><div class="line">LOCAL_AAPT_FLAGS += --extra-packages android.support.v7.appcompat</div><div class="line">LOCAL_AAPT_FLAGS += --extra-packages android.support.design</div><div class="line">LOCAL_AAPT_FLAGS += --extra-packages android.support.v7.recyclerview</div><div class="line"></div><div class="line"># 制定编译的工程，不要使用代码混淆的工具进行代码混淆</div><div class="line">LOCAL_PROGUARD_ENABLED := disabled</div><div class="line"># 指定不需要混淆的native方法与变量的proguard.flags文件</div><div class="line">LOCAL_PROGUARD_FLAG_FILES := proguard.flags</div><div class="line"></div><div class="line">include $(BUILD_PACKAGE)</div><div class="line"></div><div class="line"></div><div class="line">##########引用第三方 jar 包##########</div><div class="line">include $(CLEAR_VARS)</div><div class="line"></div><div class="line">LOCAL_PREBUILT_STATIC_JAVA_LIBRARIES := AndroidUtil:libs/AndroidUtil.jar</div><div class="line"></div><div class="line">include $(BUILD_MULTI_PREBUILT)</div><div class="line"></div><div class="line">##########引用第三方 so 库##########</div><div class="line">include $(LOCAL_PATH)/libs/Android.mk</div></pre></td></tr></table></figure><h3 id="问题-1"><a href="#问题-1" class="headerlink" title="问题"></a>问题</h3><p><strong>1、LOCAL_PRIVATE_PLATFORM_APIS 和 LOCAL_SDK_VERSION 有什么区别？</strong></p><p>LOCAL_PRIVATE_PLATFORM_APIS := true<br>设置后，会使用 sdk 的 hide 的 api 来编译。</p><p>LOCAL_SDK_VERSION 这个编译配置，就会使编译的应用不能访问 hide 的 api，有时一些系统的 class 被 import 后编译时说找不到这个类，就是这个原因造成的。</p><p><strong>2、如果直接用 mmm 编译然后 adb install -r xxx.apk 大概会出现如下错误：</strong><br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Failed to install out/target/product/p212/system/app/xxx/xxx.apk: Failure [INSTALL_FAILED_INVALID_APK: Package couldn't be installed in /data/app/com.droidlogic.mboxlauncher<span class="number">-1</span>: Package /data/app/com.droidlogic.mboxlauncher<span class="number">-1</span>/base.apk code is missing]</div></pre></td></tr></table></figure></p><p>解决方法：</p><p>在对应 app 的 Android.mk 文件中加入<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">LOCAL_DEX_PREOPT := <span class="literal">false</span></div></pre></td></tr></table></figure></p><p>关闭 dex 优化来提高调试过程，把编译后的 APK 直接替换安装 adb install -r XXX.apk，不然 APK 得 Push 到 system/app，重启设备。</p><p><strong>3、在 Android Studio Gradle 方式中通过 implementation 方式加载的三方库，并没有下载 jar 文件放到 libs 文件夹下啊，该如何集成？</strong></p><p>其实 jar 包有被下载到项目的 External Libraries 目录下，找到引用的 jar 包，点右键 Show in Files，就能得到了 jar 包的文件地址，然后把它拷到 libs 文件夹下，就能像别的 jar 包一样处理了。</p><p>另外在 External Libraries 目录还能看到隐藏的 jar，比如 retrofit，其实它有引用 okhttp，okhttp 又引用了 okio，这些也是需要的，一并拷到 libs 文件夹下。</p><p><strong>4、第三方无法定位？</strong></p><p>第三方定位如百度、高德，申请 SDK 时会需要填写包名和打包签名等信息，如何正确地预置源码 APP 可以定位，除了配置<code>LOCAL_CERTIFICATE := platform</code>使用系统的签名，还得在项目的AndroidMainfest.xml 根节点配置<code>android:sharedUserId=&quot;android.uid.system&quot;</code>。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Android 系统预置 APP 是做 Framework 应用开发经常经常会遇到的工作，预置 APP 分为两种，一种是直接预置 APK，一种是预置带有源码的 APP。&lt;/p&gt;
&lt;h2 id=&quot;预置-apk&quot;&gt;&lt;a href=&quot;#预置-apk&quot; class=&quot;headerlink&quot; title=&quot;预置 apk&quot;&gt;&lt;/a&gt;预置 apk&lt;/h2&gt;&lt;h3 id=&quot;示例说明&quot;&gt;&lt;a href=&quot;#示例说明&quot; class=&quot;headerlink&quot; title=&quot;示例说明&quot;&gt;&lt;/a&gt;示例说明&lt;/h3&gt;&lt;p&gt;以 Shadowsocks.apk 示例，在 AOSP/packages/apps 新建名为 Shadowsocks 的文件，放入 Shadowsocks.apk，再新建 Android.mk，内容如下：&lt;br&gt;
    
    </summary>
    
      <category term="AOSP" scheme="http://wuxiaolong.github.io/categories/AOSP/"/>
    
    
      <category term="AOSP" scheme="http://wuxiaolong.github.io/tags/AOSP/"/>
    
  </entry>
  
  <entry>
    <title>2019 关键字</title>
    <link href="http://wuxiaolong.github.io/2019/01/02/2019key/"/>
    <id>http://wuxiaolong.github.io/2019/01/02/2019key/</id>
    <published>2019-01-02T09:43:42.000Z</published>
    <updated>2021-03-30T13:55:37.018Z</updated>
    
    <content type="html"><![CDATA[<h1 id="回顾-18-年"><a href="#回顾-18-年" class="headerlink" title="回顾 18 年"></a>回顾 18 年</h1><p>转眼间 2018 年过去了，2018 年对我来说过得真的太快，在过去的一年，没啥成就感可言，2018 年 5 月份我换了工作，从此 996，大部分时间都投入了工作，勤勤恳恳，没什么说的。不过回顾《<a href="http://wuxiaolong.me/2018/01/02/2018key/" target="_blank" rel="noopener">2018 关键字</a>》，真的要说，恭喜，我又成功地浪费了一年：</p><h2 id="高级程序员"><a href="#高级程序员" class="headerlink" title="高级程序员"></a>高级程序员</h2><p><del>自己差不多属于高级程序员了，这些年没算白混，但还不够，很多知识点知道，浮在表层，开发中一些知识不常用很快也就忘记了，新的一年，还得继续查缺补漏，深入。</del></p><p>换了工作，现在做 Android Framework 了，小白，从零开始，Framework 比应用开发难很多，适应了很久。</p><a id="more"></a><h2 id="身体"><a href="#身体" class="headerlink" title="身体"></a>身体</h2><p><del>年纪大了，该注意起来了，15 年结完婚就很少运动，现在经常肩疼，周末偶尔去打打篮球，18 年，健身要列入日常。</del></p><p>现在的身体状况感觉比以往都要好，像之前一累，肩就很疼，现在偶尔也会疼，但已经很好了，和现在的团队氛围有关，每周能和大家打一次篮球，我觉得这个篮球还是很有必要的，没有好的身体，还怎么撸码。</p><h2 id="学历"><a href="#学历" class="headerlink" title="学历"></a>学历</h2><p><del>虽然说工作了更多地看重学历，但是一些公司学历是硬性条件，我也因此碰壁，想在学历方面晋升一下，不留遗憾。</del></p><p>What？还有这个目标？</p><h2 id="英语"><a href="#英语" class="headerlink" title="英语"></a>英语</h2><p><del>渣渣，不想多说了，年年目标都有英语这项，现在依旧是渣渣，根本没有行动起来，也没有坚持下来。</del></p><p>下载了百词斩 APP，下载完毕，打开过一次，后来貌似还打开过一次……英语真的很重要！</p><h2 id="书"><a href="#书" class="headerlink" title="书"></a>书</h2><p><del>人丑就应该多读点书，我发现我更加喜欢阅读电子版的，不管是什么，现在要多看看书，积累点底蕴。</del></p><p>看了《浪潮之巅》；《刻意练习》看了一大半；买了纸质《社会心理学》，看完了序……</p><h2 id="投资理财"><a href="#投资理财" class="headerlink" title="投资理财"></a>投资理财</h2><p><del>这方面知识是我比较缺乏的，可以说一窍不通，最主要的原因是穷，还没有闲钱能做理财，18 年，要学学这方面的知识，存点钱，以备不时之需。</del></p><p>了解了点基金股票知识；《小狗钱钱》看了一点，没看下去……</p><h2 id="Python、小程序"><a href="#Python、小程序" class="headerlink" title="Python、小程序"></a>Python、小程序</h2><p><del>持续关注，也许就转行了。</del></p><p>写有《<a href="http://mp.weixin.qq.com/s?__biz=MzI4MTQyNDg3Mg==&amp;mid=2247484282&amp;idx=1&amp;sn=86dba20c482b6b2a0c298ba3004b1f83&amp;chksm=eba825fddcdfacebcb9b9586702dea8cc7c38de67fc716f0f187be95eca36a5e9ed6dcc7d29c&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">Python 3 极简教程.pdf</a>》、《<a href="http://mp.weixin.qq.com/s?__biz=MzI4MTQyNDg3Mg==&amp;mid=2247484651&amp;idx=1&amp;sn=89dcd679f4e790b5c2ef31516bd8cb57&amp;chksm=eba8226cdcdfab7ac1d53e7284b7311ee0ac069cf25a0d18293d2cd35fb57d6967d5b2bce5f4&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">小程序入门</a>》，没转行，不过转 Framework 跨度有点大，差点折了。</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>Flutter 抢先体验了一番，没再深入；Python、小程序都是入门了，最后觉得方向还得是 Android；完成了夙愿《<a href="http://mp.weixin.qq.com/s?__biz=MzI4MTQyNDg3Mg==&amp;mid=2247484561&amp;idx=1&amp;sn=1ba133f7d0f3668c74f6d6f5e2bc3e7b&amp;chksm=eba82216dcdfab000c2a2c7e11c42a31ad4430c395de7a5224cabba124da6433c09ea2498961&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">Java 开发接口</a>》，还不惜买了好几百块的服务器；知识星球加了不少，看下来的也就几个，更多地是维护维护自己的星球；极客时间有 8 个课程，完整学完就 1 个，3 个课程学了一半，其他都学完第 1 讲；2018 年公众号新增读者不过四五千，可谓失败……</p><h1 id="展望-19-年"><a href="#展望-19-年" class="headerlink" title="展望 19 年"></a>展望 19 年</h1><h2 id="AOSP"><a href="#AOSP" class="headerlink" title="AOSP"></a>AOSP</h2><p>熟悉 AOSP 这套代码，是我现在时刻要做的，2019 年工作依旧是我的重点，力求做到更好。</p><h2 id="演讲能力"><a href="#演讲能力" class="headerlink" title="演讲能力"></a>演讲能力</h2><p>当众讲话我还是有些怵的，怂个毛，就是干，只要有机会多练，假以时日，我认为是可以做到令我自己满意的。</p><h2 id="英语-1"><a href="#英语-1" class="headerlink" title="英语"></a>英语</h2><p>渣渣，不说了……</p><h2 id="还有什么"><a href="#还有什么" class="headerlink" title="还有什么"></a>还有什么</h2><p>我也不知道，可能又是无聊的一年？多挣点钱吧，我娃要上学了。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;回顾-18-年&quot;&gt;&lt;a href=&quot;#回顾-18-年&quot; class=&quot;headerlink&quot; title=&quot;回顾 18 年&quot;&gt;&lt;/a&gt;回顾 18 年&lt;/h1&gt;&lt;p&gt;转眼间 2018 年过去了，2018 年对我来说过得真的太快，在过去的一年，没啥成就感可言，2018 年 5 月份我换了工作，从此 996，大部分时间都投入了工作，勤勤恳恳，没什么说的。不过回顾《&lt;a href=&quot;http://wuxiaolong.me/2018/01/02/2018key/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;2018 关键字&lt;/a&gt;》，真的要说，恭喜，我又成功地浪费了一年：&lt;/p&gt;
&lt;h2 id=&quot;高级程序员&quot;&gt;&lt;a href=&quot;#高级程序员&quot; class=&quot;headerlink&quot; title=&quot;高级程序员&quot;&gt;&lt;/a&gt;高级程序员&lt;/h2&gt;&lt;p&gt;&lt;del&gt;自己差不多属于高级程序员了，这些年没算白混，但还不够，很多知识点知道，浮在表层，开发中一些知识不常用很快也就忘记了，新的一年，还得继续查缺补漏，深入。&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;换了工作，现在做 Android Framework 了，小白，从零开始，Framework 比应用开发难很多，适应了很久。&lt;/p&gt;
    
    </summary>
    
      <category term="猿生活" scheme="http://wuxiaolong.github.io/categories/%E7%8C%BF%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="key word" scheme="http://wuxiaolong.github.io/tags/key-word/"/>
    
  </entry>
  
  <entry>
    <title>Android APP 冷启动流程</title>
    <link href="http://wuxiaolong.github.io/2018/09/16/AndroidColdStart/"/>
    <id>http://wuxiaolong.github.io/2018/09/16/AndroidColdStart/</id>
    <published>2018-09-16T05:49:31.000Z</published>
    <updated>2019-04-22T14:32:17.070Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://wuxiaolong.me/images/AndroidColdStart.png" alt=""><br><a id="more"></a><br>说明：</p><p>1、基于 Android 8.0 源码；</p><p>2、整个流程是从点击桌面 icon 到 APP 显示；</p><p>3、当我画完这个时序图时，我已经忘记了，捂脸，所以还是自己看吧，按照时序图走一遍。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://wuxiaolong.me/images/AndroidColdStart.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="AOSP" scheme="http://wuxiaolong.github.io/categories/AOSP/"/>
    
    
      <category term="AOSP" scheme="http://wuxiaolong.github.io/tags/AOSP/"/>
    
  </entry>
  
  <entry>
    <title>Android Studio 导入 AOSP 源码</title>
    <link href="http://wuxiaolong.github.io/2018/08/15/AOSP3/"/>
    <id>http://wuxiaolong.github.io/2018/08/15/AOSP3/</id>
    <published>2018-08-15T02:24:22.000Z</published>
    <updated>2019-01-05T03:19:00.810Z</updated>
    
    <content type="html"><![CDATA[<p>有了 AOSP 源码，接下来就是如何看了，可以直接文本看，可以用 Source Insight，我当然选择 Android Studio，Android Studio 是我熟悉且十分强大的工具。问题来了，如何将 AOSP 源码导入 Android Studio？</p><h1 id="安装-Java"><a href="#安装-Java" class="headerlink" title="安装 Java"></a>安装 Java</h1><p>虚拟机新装的 Ubutun 一开始是没有 Java 的，需要先安装，输入命令<code>java</code>，报以下错误：<br><a id="more"></a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">Command <span class="string">'java'</span> not found, but can be installed with:</div><div class="line"></div><div class="line">sudo apt install default-jre</div><div class="line">sudo apt install openjdk-11-jre-headless</div><div class="line">sudo apt install openjdk-8-jre-headless</div></pre></td></tr></table></figure></p><p>输入以上命令进行安装，然后整编（关于整编和单编下节细讲）代码又报错：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Your version is: openjdk version <span class="string">"10.0.1"</span> 2018-04-17 OpenJDK Runtime Environment (build 10.0.1+10-Ubuntu-3ubuntu1) OpenJDK 64-Bit Server VM (build 10.0.1+10-Ubuntu-3ubuntu1, mixed mode).</div><div class="line">The required version is: <span class="string">"1.8.x"</span></div></pre></td></tr></table></figure></p><p>提示 Java 版本只能是 1.8.x，需要指定 Java 版本：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo update-alternatives --config java</div></pre></td></tr></table></figure></p><p>输出：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">有 2 个候选项可用于替换 java (提供 /usr/bin/java)。</div><div class="line"></div><div class="line">选择 路径 优先级 状态</div><div class="line">------------------------------------------------------------</div><div class="line">* 0 /usr/lib/jvm/java-11-openjdk-amd64/bin/java 1101 自动模式</div><div class="line">1 /usr/lib/jvm/java-11-openjdk-amd64/bin/java 1101 手动模式</div><div class="line">2 /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java 1081 手动模式</div><div class="line"></div><div class="line">要维持当前值[*]请按&lt;回车键&gt;，或者键入选择的编号：2</div></pre></td></tr></table></figure></p><h2 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h2><p>JDK 也有门派之分的，那就是 Open JDK 和 Oacle JDK，其实我刚开编译时，用的是 Oracle JDK，整编报错：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">You asked <span class="keyword">for</span> an OpenJDK based build but your version is</div><div class="line">java version <span class="string">"1.8.0_181"</span> Java(TM) SE Runtime Environment (build 1.8.0_181-b13) Java HotSpot(TM) 64-Bit Server VM (build 25.181-b13, mixed mode).</div></pre></td></tr></table></figure></p><h1 id="idegen-jar"><a href="#idegen-jar" class="headerlink" title="idegen.jar"></a>idegen.jar</h1><p>在 Ubuntu 系统下，进入源码根目录，运行如下命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">source</span> build/envsetup.sh</div><div class="line">mmm development/tools/idegen/</div></pre></td></tr></table></figure></p><p>报错：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Command <span class="string">'make'</span> not found, but can be installed with:</div><div class="line"></div><div class="line">sudo apt install make</div><div class="line">sudo apt install make-guile</div></pre></td></tr></table></figure></p><p>命令安装 make 成功后，再次运行<code>mmm development/tools/idegen/</code>，会在源码目录下的 <code>out/host/linux-x86/framework</code>目录下生成了 idegen.jar 文件。</p><p>如果命令 <code>mmm development/tools/idegen/</code> 一直报错，可以尝试一下命令 <code>make idegen</code> 依赖编译下。</p><h1 id="android-iml-和-android-ipr"><a href="#android-iml-和-android-ipr" class="headerlink" title="android.iml 和 android.ipr"></a>android.iml 和 android.ipr</h1><p>在源码目录下继续执行如下命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">development/tools/idegen/idegen.sh</div></pre></td></tr></table></figure></p><p>会在根目录下生成<br>android.iml 和 android.ipr 这两个文件，这两个文件是 Android Studio 的工程配置文件，这时候其实已经可以直接导入 Android Studio，但会导入所有的源码模块，会很慢，可以进行过滤，除了 frameworks 模块和 packages 模块，其他都给过滤掉，不导入 Android Studio，打开 android.iml 文件，搜下<code>excludeFolder</code>，在后面加入如下代码：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">excludeFolder</span> <span class="attr">url</span>=<span class="string">"file://$MODULE_DIR$/art"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">excludeFolder</span> <span class="attr">url</span>=<span class="string">"file://$MODULE_DIR$/bionic"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">excludeFolder</span> <span class="attr">url</span>=<span class="string">"file://$MODULE_DIR$/bootable"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">excludeFolder</span> <span class="attr">url</span>=<span class="string">"file://$MODULE_DIR$/build"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">excludeFolder</span> <span class="attr">url</span>=<span class="string">"file://$MODULE_DIR$/cts"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">excludeFolder</span> <span class="attr">url</span>=<span class="string">"file://$MODULE_DIR$/dalvik"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">excludeFolder</span> <span class="attr">url</span>=<span class="string">"file://$MODULE_DIR$/developers"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">excludeFolder</span> <span class="attr">url</span>=<span class="string">"file://$MODULE_DIR$/development"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">excludeFolder</span> <span class="attr">url</span>=<span class="string">"file://$MODULE_DIR$/device"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">excludeFolder</span> <span class="attr">url</span>=<span class="string">"file://$MODULE_DIR$/docs"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">excludeFolder</span> <span class="attr">url</span>=<span class="string">"file://$MODULE_DIR$/external"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">excludeFolder</span> <span class="attr">url</span>=<span class="string">"file://$MODULE_DIR$/hardware"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">excludeFolder</span> <span class="attr">url</span>=<span class="string">"file://$MODULE_DIR$/kernel"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">excludeFolder</span> <span class="attr">url</span>=<span class="string">"file://$MODULE_DIR$/libcore"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">excludeFolder</span> <span class="attr">url</span>=<span class="string">"file://$MODULE_DIR$/libnativehelper"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">excludeFolder</span> <span class="attr">url</span>=<span class="string">"file://$MODULE_DIR$/out"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">excludeFolder</span> <span class="attr">url</span>=<span class="string">"file://$MODULE_DIR$/pdk"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">excludeFolder</span> <span class="attr">url</span>=<span class="string">"file://$MODULE_DIR$/platform_testing"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">excludeFolder</span> <span class="attr">url</span>=<span class="string">"file://$MODULE_DIR$/prebuilts"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">excludeFolder</span> <span class="attr">url</span>=<span class="string">"file://$MODULE_DIR$/sdk"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">excludeFolder</span> <span class="attr">url</span>=<span class="string">"file://$MODULE_DIR$/system"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">excludeFolder</span> <span class="attr">url</span>=<span class="string">"file://$MODULE_DIR$/test"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">excludeFolder</span> <span class="attr">url</span>=<span class="string">"file://$MODULE_DIR$/toolchain"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">excludeFolder</span> <span class="attr">url</span>=<span class="string">"file://$MODULE_DIR$/tools"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">excludeFolder</span> <span class="attr">url</span>=<span class="string">"file://$MODULE_DIR$/.repo"</span> /&gt;</span></div></pre></td></tr></table></figure></p><h1 id="导入-Android-Studio"><a href="#导入-Android-Studio" class="headerlink" title="导入 Android Studio"></a>导入 Android Studio</h1><p>我把 Android 源码拷到我的 Mac 上，打开 Android Studio，选择 Open an existing Android Studio project，找到源码目录，点击 Android.ipr，Open，大约等 6 分钟，导入完毕，<strong>Enjoy coding</strong>。</p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>发现 Android Studio 不停 scanning files to index，我的强迫症又犯了，解决：</p><p>1 invalidate and restart 不起作用；</p><p>2 右击项目 –&gt; Open module setting –&gt; Modules –&gt; 找到 gen 文件夹 –&gt; 右键选择 Resources，终于告别烦人的 scanning files to index。</p><h1 id="系列博客"><a href="#系列博客" class="headerlink" title="系列博客"></a>系列博客</h1><p><a href="https://mp.weixin.qq.com/s/Z4vJoAhuiXbkbsFUHULzQg" target="_blank" rel="noopener">VirtualBox 安装 Ubuntu</a></p><p><a href="https://mp.weixin.qq.com/s/hEWNHN4_k2HY9uhnw1diMA" target="_blank" rel="noopener">AOSP 源码下载</a></p><p><a href="https://mp.weixin.qq.com/s/Dk2XOUujbXJuWiRor8Jprg" target="_blank" rel="noopener">AOSP 源码整编单编</a></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://blog.csdn.net/HQZ820844012/article/details/80461196" target="_blank" rel="noopener">https://blog.csdn.net/HQZ820844012/article/details/80461196</a></p><p><a href="https://www.jianshu.com/p/fb16fa459acf" target="_blank" rel="noopener">https://www.jianshu.com/p/fb16fa459acf</a></p><p><a href="https://blog.csdn.net/shisanmei911/article/details/79761569" target="_blank" rel="noopener">https://blog.csdn.net/shisanmei911/article/details/79761569</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有了 AOSP 源码，接下来就是如何看了，可以直接文本看，可以用 Source Insight，我当然选择 Android Studio，Android Studio 是我熟悉且十分强大的工具。问题来了，如何将 AOSP 源码导入 Android Studio？&lt;/p&gt;
&lt;h1 id=&quot;安装-Java&quot;&gt;&lt;a href=&quot;#安装-Java&quot; class=&quot;headerlink&quot; title=&quot;安装 Java&quot;&gt;&lt;/a&gt;安装 Java&lt;/h1&gt;&lt;p&gt;虚拟机新装的 Ubutun 一开始是没有 Java 的，需要先安装，输入命令&lt;code&gt;java&lt;/code&gt;，报以下错误：&lt;br&gt;
    
    </summary>
    
      <category term="AOSP" scheme="http://wuxiaolong.github.io/categories/AOSP/"/>
    
    
      <category term="AOSP" scheme="http://wuxiaolong.github.io/tags/AOSP/"/>
    
  </entry>
  
  <entry>
    <title>AOSP 源码整编单编</title>
    <link href="http://wuxiaolong.github.io/2018/07/25/AOSP2/"/>
    <id>http://wuxiaolong.github.io/2018/07/25/AOSP2/</id>
    <published>2018-07-25T01:35:19.000Z</published>
    <updated>2019-01-05T01:45:11.615Z</updated>
    
    <content type="html"><![CDATA[<p>《<a href="https://mp.weixin.qq.com/s/hEWNHN4_k2HY9uhnw1diMA" target="_blank" rel="noopener">AOSP 源码下载</a>》完成后，就可以开编了。</p><h1 id="整编"><a href="#整编" class="headerlink" title="整编"></a>整编</h1><p>整编，顾名思义就是编译整个 Android 源码，最终 out 目录会生成几个重要的镜像文件，其中有 system.img、userdata.img、ramdisk.img 等，这些是可以刷机的。</p><a id="more"></a><h2 id="初始化编译环境"><a href="#初始化编译环境" class="headerlink" title="初始化编译环境"></a>初始化编译环境</h2><p>项目目录，打开终端，输入命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">source</span> build/envsetup.sh</div></pre></td></tr></table></figure></p><h2 id="选择编译目标"><a href="#选择编译目标" class="headerlink" title="选择编译目标"></a>选择编译目标</h2><p>命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">lunch</div></pre></td></tr></table></figure></p><p>输出：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line">You<span class="string">'re building on Linux</span></div><div class="line"></div><div class="line">Lunch menu... pick a combo:</div><div class="line">     1. aosp_arm-eng</div><div class="line">     2. aosp_arm64-eng</div><div class="line">     3. aosp_blueline-userdebug</div><div class="line">     4. aosp_car_arm-userdebug</div><div class="line">     5. aosp_car_arm64-userdebug</div><div class="line">     6. aosp_car_x86-userdebug</div><div class="line">     7. aosp_car_x86_64-userdebug</div><div class="line">     8. aosp_cf_x86_64_auto-userdebug</div><div class="line">     9. aosp_cf_x86_64_phone-userdebug</div><div class="line">     10. aosp_cf_x86_64_tablet-userdebug</div><div class="line">     11. aosp_cf_x86_64_tablet_3g-userdebug</div><div class="line">     12. aosp_cf_x86_64_tv-userdebug</div><div class="line">     13. aosp_cf_x86_64_wear-userdebug</div><div class="line">     14. aosp_cf_x86_auto-userdebug</div><div class="line">     15. aosp_cf_x86_phone-userdebug</div><div class="line">     16. aosp_cf_x86_tablet-userdebug</div><div class="line">     17. aosp_cf_x86_tablet_3g-userdebug</div><div class="line">     18. aosp_cf_x86_tv-userdebug</div><div class="line">     19. aosp_cf_x86_wear-userdebug</div><div class="line">     20. aosp_crosshatch-userdebug</div><div class="line">     21. aosp_marlin-userdebug</div><div class="line">     22. aosp_sailfish-userdebug</div><div class="line">     23. aosp_taimen-userdebug</div><div class="line">     24. aosp_walleye-userdebug</div><div class="line">     25. aosp_walleye_test-userdebug</div><div class="line">     26. aosp_x86-eng</div><div class="line">     27. aosp_x86_64-eng</div><div class="line">     28. beagle_x15-userdebug</div><div class="line">     29. hikey-userdebug</div><div class="line">     30. hikey64_only-userdebug</div><div class="line">     31. hikey960-userdebug</div><div class="line">     32. hikey960_tv-userdebug</div><div class="line">     33. hikey_tv-userdebug</div><div class="line">     34. m_e_arm-userdebug</div><div class="line">     35. mini_emulator_arm64-userdebug</div><div class="line">     36. mini_emulator_x86-userdebug</div><div class="line">     37. mini_emulator_x86_64-userdebug</div><div class="line">     38. poplar-eng</div><div class="line">     39. poplar-user</div><div class="line">     40. poplar-userdebug</div><div class="line">     41. uml-userdebug</div><div class="line"></div><div class="line">Which would you like? [aosp_arm-eng] 26</div></pre></td></tr></table></figure></p><h3 id="编译目标格式说明"><a href="#编译目标格式说明" class="headerlink" title="编译目标格式说明"></a>编译目标格式说明</h3><p>编译目标的格式：BUILD-BUILDTYPE，比如上面的 poplar-eng 的 BUILD 是 poplar，BUILDTYPE 是 eng.</p><h4 id="什么是-BUILD"><a href="#什么是-BUILD" class="headerlink" title="什么是 BUILD"></a>什么是 BUILD</h4><p>BUILD 指的是特定功能的组合的特定名称，即表示编译出的镜像可以运行在什么环境。其中 aosp(Android Open Source Project)代表 Android 开源项目；arm 表示系统是运行在 arm 架构的处理器上，arm64 则是指 64 位 arm 架构处理器，x86 则表示 x86 架构的处理器，更多设备代码和编译目标参考<a href="https://source.android.google.cn/source/running.html#selecting-device-build" target="_blank" rel="noopener">官方文档</a>。</p><h4 id="什么是-BUILDTYPE"><a href="#什么是-BUILDTYPE" class="headerlink" title="什么是 BUILDTYPE"></a>什么是 BUILDTYPE</h4><p>BUILDTYPE 则指的是编译类型，通常有三种: </p><ul><li>user：用来正式发布到市场的版本，权限受限，如没有 root 权限，不能 dedug 等。</li><li>userdebug：在user版本的基础上开放了 root 权限和 debug 权限。 </li><li>eng：代表 engineer，开发工程师的版本，拥有最大的权限(root等)，具有额外调试工具的开发配置。</li></ul><p>如果没有谷歌手机设备，可以选择 arm 或者 x86，我选择了 aosp_x86-eng，编译完后运行模拟器看看，因此这里选择序号 26。</p><h2 id="开始编译"><a href="#开始编译" class="headerlink" title="开始编译"></a>开始编译</h2><p>通过 make 指令进行代码编译：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make -j8</div></pre></td></tr></table></figure></p><p>其中 -jN 参数表示处理并行任务，通常使用的任务数 N 介于编译时所用计算机上硬件线程数的 1-2 倍之间。</p><p>查看计算机上的核心数：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">cat /proc/cpuinfo | grep processor</div><div class="line">processor: 0</div><div class="line">processor: 1</div><div class="line">processor: 2</div><div class="line">processor: 3</div></pre></td></tr></table></figure></p><p>可看到创建的虚拟机 CPU 核心共有 4 个，那么要实现最快的编译速度，可以使用介于 make -j4 到 make -j8 之间的命令。</p><p>不出意外，当看到：<code>#### build completed successfully (03:55:24 (hh:mm:ss)) ####</code>就整编成功了。</p><h2 id="运行模拟器"><a href="#运行模拟器" class="headerlink" title="运行模拟器"></a>运行模拟器</h2><p>整编完，网上很多都是说直接运行命令：<code>emulator</code>，但是我报以下错误了：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">emulator: WARNING: Couldn<span class="string">'t find crash service executable /media/ubuntu/disk/Project/AOSP9/prebuilts/android-emulator/linux-x86_64/emulator64-crash-service</span></div><div class="line"></div><div class="line">emulator: WARNING: system partition size adjusted to match image file (1080 MB &gt; 800 MB)</div><div class="line"></div><div class="line">queryCoreProfileSupport: swap interval not found</div><div class="line">failed to create drawable</div><div class="line">failed to create drawable</div><div class="line">failed to create drawable</div><div class="line">failed to create drawable</div><div class="line">failed to create drawable</div><div class="line">failed to create drawable</div><div class="line">failed to create drawable</div><div class="line">failed to create drawable</div><div class="line">getGLES2ExtensionString: Could not make GLES 2.x context current!</div></pre></td></tr></table></figure></p><p>第一个警告不管，第二个警告可以 emulator 加参数 <code>-partition-size 2048</code>解决，也可以不管，最后一个折腾了很久，可以加参数<code>-gpu off</code>，完整运行模拟器的命令：<code>emulator -gpu off -partition-size 2048</code>，这时应该又会报：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">emulator: WARNING: Couldn<span class="string">'t find crash service executable /media/ubuntu/disk/Project/AOSP9/prebuilts/android-emulator/linux-x86_64/emulator64-crash-service</span></div><div class="line"></div><div class="line">emulator: WARNING: system partition size adjusted to match image file (1338 MB &gt; 800 MB)</div><div class="line"></div><div class="line">emulator: ERROR: Running multiple emulators with the same AVD is an experimental feature.</div><div class="line">Please use -read-only flag to enable this feature.</div></pre></td></tr></table></figure></p><p>只能重启一下才能解决。</p><p>如果编译完成后启动模拟器时卡在黑屏，可以尝试编译其他的！</p><p>emulator 还有很多参数，可以用 <code>emulator -help</code> 查看，参数如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div></pre></td><td class="code"><pre><div class="line">-sysdir &lt;dir&gt; 为模拟器在&lt;dir&gt;目录中搜索系统硬盘镜像</div><div class="line">-system &lt;file&gt; 为模拟器从&lt;file&gt;文件中读取初始化系统镜像</div><div class="line">-datadir &lt;dir&gt; 设置用户数据写入的目录</div><div class="line">-kernel &lt;file&gt; 为模拟器设置使用指定的模拟器内核</div><div class="line">-ramdisk &lt;file&gt; 设置内存RAM 镜像文件(默认为&lt;system&gt;/ramdisk.img)</div><div class="line">-image &lt;file&gt; 废弃，使用-system &lt;file&gt; 替代</div><div class="line">-init-data &lt;file&gt; 设置初始化数据镜像(默认为&lt;system&gt;/userdata.img)</div><div class="line">-initdata &lt;file&gt; 和<span class="string">"-init-data &lt;file&gt;"</span>使用方法一致</div><div class="line">-data &lt;file&gt; 设置数据镜像(默认为&lt;datadir&gt;/userdata-qemu.img)</div><div class="line">-partition-size &lt;size&gt; system/data 分区容量大小(MB)</div><div class="line">-cache &lt;file&gt; 设置模拟器缓存分区镜像(默认为零时文件)</div><div class="line">-no-cache 禁用缓存分区</div><div class="line">-nocache 与<span class="string">"-no-cache"</span>使用方法相同</div><div class="line">-sdcard &lt;file&gt; 指定模拟器SDCard 镜像文件(默认为&lt;system&gt;/sdcard.img)</div><div class="line">-wipe-data 清除并重置用户数据镜像(从initdata 拷贝)</div><div class="line">-avd &lt;name&gt; 指定模拟器使用Android 虚拟设备</div><div class="line">-skindir &lt;dir&gt; 设置模拟器皮肤在&lt;dir&gt;目录中搜索皮肤(默认为&lt;system&gt;/skins 目录)</div><div class="line">-skin &lt;name&gt; 选择使用给定的皮肤</div><div class="line">-no-skin 不适用任何模拟器皮肤</div><div class="line">-noskin 使用方法与<span class="string">"-no-skin"</span>相同</div><div class="line">-memory &lt;size&gt; 物理RAM 内存大小(MB)</div><div class="line">-netspeed &lt;speed&gt; 设置最大网络下载、上传速度</div><div class="line">-netdelay &lt;delay&gt; 网络时延模拟</div><div class="line">-netfast 禁用网络形态</div><div class="line">-tarce &lt;name&gt; 代码配置可用</div><div class="line">-show-kernel 显示内核信息</div><div class="line">-shell 在当前终端中使用根Shell 命令</div><div class="line">-no-jni Dalvik 运行时禁用JNI 检测</div><div class="line">-nojni 使用方法与<span class="string">"-no-jni"</span>相同</div><div class="line">-logcat &lt;tag&gt; 输出给定tag 的Logcat 信息</div><div class="line"></div><div class="line">-no-audio 禁用音频支持</div><div class="line">-noaudio 与<span class="string">"-no-audio"</span>用法相同</div><div class="line">-audio &lt;backend&gt; 使用指定的音频backend</div><div class="line">-audio-in &lt;backend&gt; 使用指定的输入音频backend</div><div class="line">-audoi-out &lt;backend&gt; 使用指定的输出音频backend</div><div class="line">-raw-keys 禁用Unicode 键盘翻转图</div><div class="line">-radio 重定向无线模式接口到个性化设备</div><div class="line">-port &lt;port&gt; 设置控制台使用的TCP 端口</div><div class="line">-ports &lt;consoleport&gt;,&lt;adbport&gt; 设置控制台使用的TCP 端口和ADB 调试桥使用的TCP 端口</div><div class="line">-onion &lt;image&gt; 在屏幕上层使用覆盖PNG 图片</div><div class="line">-onion-alpha &lt;%age&gt; 指定上层皮肤半透明度</div><div class="line">-onion-rotation 0|1|2|3 指定上层皮肤旋转</div><div class="line">-scale &lt;scale&gt; 调节模拟器窗口尺寸(三种：1.0-3.0、dpi、auto)</div><div class="line">-dpi-device &lt;dpi&gt; 设置设备的resolution (dpi 单位) (默认165)</div><div class="line">-http-proxy &lt;proxy&gt; 通过一个HTTP 或HTTPS 代理来创建TCP 连接</div><div class="line">-timezone &lt;timezone&gt; 使用给定的时区，而不是主机默认的</div><div class="line">-dns-server &lt;server&gt; 在模拟系统上使用给定的DNS 服务</div><div class="line">-cpu-delay &lt;cpudelay&gt; 调节CUP 模拟</div><div class="line">-no-boot-anim 禁用动画来快速启动</div><div class="line">-no-window 禁用图形化窗口显示</div><div class="line">-version 显示模拟器版本号</div><div class="line">-report-console &lt;socket&gt; 向远程socket 报告控制台端口</div><div class="line">-gps &lt;device&gt; 重定向GPS 导航到个性化设备</div><div class="line">-keyset &lt;name&gt; 指定按键设置文件名</div><div class="line">-shell-serial &lt;device&gt; 根shell 的个性化设备</div><div class="line">-old-system 支持旧版本(pre 1.4)系统镜像</div><div class="line">-tcpdump &lt;file&gt; 把网络数据包捕获到文件中</div><div class="line">-bootchart &lt;timeout&gt; bootcharting 可用</div><div class="line">-qemu args.... 向qemu 传递参数</div><div class="line">-qemu -h 显示qemu 帮助</div><div class="line">-verbose 和<span class="string">"-debug-init"</span>相同</div><div class="line">-debug &lt;tags&gt; 可用、禁用调试信息</div><div class="line">-debug-&lt;tag&gt; 使指定的调试信息可用</div><div class="line">-debug-no-&lt;tag&gt; 禁用指定的调试信息</div><div class="line">-<span class="built_in">help</span> 打印出该帮助文档</div><div class="line">-<span class="built_in">help</span>-&lt;option&gt; 打印出指定option 的帮助文档</div><div class="line">-<span class="built_in">help</span>-disk-images 关于硬盘镜像帮助</div><div class="line">-<span class="built_in">help</span>-keys 支持按钮捆绑(手机快捷键)</div><div class="line">-<span class="built_in">help</span>-debug-tags 显示出-debug &lt;tag&gt;命令中的tag 可选值</div><div class="line">-<span class="built_in">help</span>-char-devices 个性化设备说明</div><div class="line">-<span class="built_in">help</span>-environment 环境变量</div><div class="line">-<span class="built_in">help</span>-keyset-file 指定按键绑定设置文件</div><div class="line">-<span class="built_in">help</span>-virtula-device 虚拟设备管理</div></pre></td></tr></table></figure></p><h3 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h3><p>模拟器运行需要四个文件，分别是：</p><ul><li>Linux Kernel</li><li>system.img</li><li>userdata.img</li><li>ramdisk.img</li></ul><p>上面我 lunch 命令时选择的是 aosp_x86-eng，因此 linux 默认使用的 AOSP/prebuilds/qemu-kernel/x86/kernel-qemu 下的 kernel-qemu，而其他文件则是使用的 AOSP/out/target/product/generic_x86 目录下的 system.img、userdata.img、ramdisk.img。</p><h1 id="单编"><a href="#单编" class="headerlink" title="单编"></a>单编</h1><p>单编就是编译某个模块，比如 Setting，会在 out 目录对应的产品有 Settings.apk，例如：out/target/product/generic_x86/system/priv-app/Settings/Settings.apk，这是可以直接安装的。</p><p>1、source build/envsetup.sh</p><p>2、lunch</p><p>3、选择单编版本序号</p><p>4、编译</p><p>4.1、mmm<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mmm packages/apps/Settings/</div></pre></td></tr></table></figure></p><p>编译指定目录下的模块，但不编译它所依赖的其它模块。</p><p>4.2、mm</p><p>先进入目录：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> packages/apps/Settings/</div></pre></td></tr></table></figure></p><p>再编译<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mm</div></pre></td></tr></table></figure></p><p>编译当前目录下的模块，它和 mmm 一样，不编译依赖模块。</p><p>4.3、mma</p><p>编译当前目录下的模块及其依赖项。</p><p>4.4、mmma [module_path] </p><p>编译指定路径下所有模块，且包含依赖</p><p>4.5、make</p><p>make: 不带任何参数则是编译整个系统<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make MediaProvider</div></pre></td></tr></table></figure></p><p>单个模块编译，会把该模块及其依赖的其他模块一起编译，会搜索整个源代码来定位 MediaProvider 模块所使用的 Android.mk 文件，还要判断该模块依赖的其他模块是否有修改。</p><h2 id="make-snod"><a href="#make-snod" class="headerlink" title="make snod"></a>make snod</h2><p>如果我们修改代码，想看效果，怎么办？</p><p>1、可以在编译完成后，借助 <code>adb install -r apk路径</code>直接将生成的 apk 文件安装到设备上，如果不是 APK，直接 push 对应的文件。</p><p>2、可以编译好完成后，再使用<code>make snod</code>，重新生成 system.img，再运行模拟器也可。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;《&lt;a href=&quot;https://mp.weixin.qq.com/s/hEWNHN4_k2HY9uhnw1diMA&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;AOSP 源码下载&lt;/a&gt;》完成后，就可以开编了。&lt;/p&gt;
&lt;h1 id=&quot;整编&quot;&gt;&lt;a href=&quot;#整编&quot; class=&quot;headerlink&quot; title=&quot;整编&quot;&gt;&lt;/a&gt;整编&lt;/h1&gt;&lt;p&gt;整编，顾名思义就是编译整个 Android 源码，最终 out 目录会生成几个重要的镜像文件，其中有 system.img、userdata.img、ramdisk.img 等，这些是可以刷机的。&lt;/p&gt;
    
    </summary>
    
      <category term="AOSP" scheme="http://wuxiaolong.github.io/categories/AOSP/"/>
    
    
      <category term="AOSP" scheme="http://wuxiaolong.github.io/tags/AOSP/"/>
    
  </entry>
  
  <entry>
    <title>AOSP 源码下载</title>
    <link href="http://wuxiaolong.github.io/2018/07/07/AOSP1/"/>
    <id>http://wuxiaolong.github.io/2018/07/07/AOSP1/</id>
    <published>2018-07-07T12:42:58.000Z</published>
    <updated>2019-04-22T14:32:10.109Z</updated>
    
    <content type="html"><![CDATA[<p>网上关于这块大部分教程都是无效的，因为墙的缘故，无法使用官方提供的下载链接，我这里使用了<a href="https://mirrors.tuna.tsinghua.edu.cn/help/AOSP/" target="_blank" rel="noopener">清华大学的镜像</a>，是能够顺利将 AOSP 下载下来。如果你还没有安装 Ubuntu，请看《<a href="https://mp.weixin.qq.com/s/Z4vJoAhuiXbkbsFUHULzQg" target="_blank" rel="noopener">VirtualBox 安装 Ubuntu</a>》。</p><h1 id="下载-repo"><a href="#下载-repo" class="headerlink" title="下载 repo"></a>下载 repo</h1><p>Repo 是一款工具，可让您在 Android 环境中更轻松地使用 Git，首先需要安装 Git：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install git</div></pre></td></tr></table></figure></p><p>创建 bin，并加入 path：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mkdir ~/bin</div><div class="line">PATH=~/bin:<span class="variable">$PATH</span></div></pre></td></tr></table></figure><a id="more"></a><p>下载 repo：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl https://mirrors.tuna.tsinghua.edu.cn/git/git-repo &gt; ~/bin/repo</div></pre></td></tr></table></figure></p><p>错误：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Command <span class="string">'curl'</span> not found, but can be installed with:</div><div class="line"></div><div class="line">sudo apt install curl</div></pre></td></tr></table></figure><p>需要安装 curl，执行命令<code>sudo apt-get install curl</code>进行安装。</p><p><strong>注意</strong>：命令 <code>apt</code> 在低版本 Ubuntu 不行，本教程统一使用命令 <code>apt-get</code>。</p><p>权限设置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chmod a+x ~/bin/repo</div></pre></td></tr></table></figure><h2 id="如何验证-repo-安装成功"><a href="#如何验证-repo-安装成功" class="headerlink" title="如何验证 repo 安装成功"></a>如何验证 repo 安装成功</h2><p>输入命令<code>repo</code>，提示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/bin/env: <span class="string">"python"</span>: 没有那个文件或目录</div></pre></td></tr></table></figure><p>需要安装 python，执行命令<code>sudo apt-get install python</code>安装，再次输入命令<code>repo</code>，提示如下即 repo 安装成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">error: repo is not installed.  Use <span class="string">"repo init"</span> to install it here.</div></pre></td></tr></table></figure><h1 id="下载源码"><a href="#下载源码" class="headerlink" title="下载源码"></a>下载源码</h1><h2 id="初始化仓库"><a href="#初始化仓库" class="headerlink" title="初始化仓库"></a>初始化仓库</h2><p>建立工作目录 AOSP，命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mkdir AOSP</div><div class="line">cd AOSP</div></pre></td></tr></table></figure></p><p>初始化仓库:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">repo init -u https://aosp.tuna.tsinghua.edu.cn/platform/manifest</div></pre></td></tr></table></figure></p><h2 id="错误"><a href="#错误" class="headerlink" title="错误"></a>错误</h2><p>错误1<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">error.GitError: manifests var: </div><div class="line">*** 请告诉我你是谁。</div><div class="line"></div><div class="line">运行</div><div class="line"></div><div class="line">  git config --global user.email <span class="string">"you@example.com"</span></div><div class="line">  git config --global user.name <span class="string">"Your Name"</span></div><div class="line"></div><div class="line">来设置您账号的缺省身份标识。</div><div class="line">如果仅在本仓库设置身份标识，则省略 --global 参数。</div></pre></td></tr></table></figure></p><p>没有设置身份，要使用 Gerrit 代码审核工具，您需要一个与已注册的 Google 帐号关联的电子邮件地址：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git config --global user.email <span class="string">"wuxiaolong.me@gmail.com"</span></div><div class="line">git config --global user.name <span class="string">"WuXiaolong"</span></div></pre></td></tr></table></figure></p><p>其他邮箱应该也是可以的。</p><p>错误2<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">fatal: Cannot get https://gerrit.googlesource.com/git-repo/clone.bundle</div><div class="line">fatal: error [Errno 101] Network is unreachable</div></pre></td></tr></table></figure></p><p>因为 repo 运行过程中会尝试访问官方的 git 源更新自己，如果想使用 tuna 的镜像源进行更新，将如下内容复制到你的<code>~/.bashrc</code>里，然后重启终端模拟器。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">export</span> REPO_URL=<span class="string">'https://mirrors.tuna.tsinghua.edu.cn/git/git-repo/'</span></div></pre></td></tr></table></figure></p><p>错误3：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">curl: (22) The requested URL returned error: 404 Not Found</div><div class="line">Server does not provide clone.bundle; ignoring.</div></pre></td></tr></table></figure></p><p>为什么会出现此种 log ？</p><p>在通过 Git 的 HTTP 协议下载最新数据之前，Repo 尝试下载预先打包的捆绑文件以引导每个 git。</p><p>原文：Repo attempts to download a prepackaged bundle file to bootstrap each git prior to downloading the most recent data via Git’s HTTP protocol.</p><p>如果捆绑文件不可用（如本例所示），Repo 将忽略它并继续进行，换句话说，不要注意这一点。</p><p>原文：If a bundle file isn’t available (like in this case), Repo will ignore it and proceed anyway. In other words, don’t pay any attention to this.</p><p>最后，如何取消 download clone.bundle ？</p><p>只需要 在repo 添加一个参数 –no-clone-bundle，如下：</p><p>可通过 repo <cmd> -h 获得参数 –no-clone-bundle 的说明<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">repo init --no-clone-bundle</div><div class="line">repo sync --no-clone-bundle</div></pre></td></tr></table></figure></cmd></p><h2 id="指定某个-Android-版本"><a href="#指定某个-Android-版本" class="headerlink" title="指定某个 Android 版本"></a>指定某个 Android 版本</h2><p>如果需要某个特定的 Android 版本(<a href="https://source.android.google.cn/source/build-numbers.html#source-code-tags-and-builds" target="_blank" rel="noopener">列表</a>)：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">repo init -u https://aosp.tuna.tsinghua.edu.cn/platform/manifest -b android-8.0.0_r1</div></pre></td></tr></table></figure></p><p>提示以下，即 init 成功：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Your identity is: WuXiaolong &lt;wuxiaolong.me@gmail.com&gt;</div><div class="line">If you want to change this, please re-run <span class="string">'repo init'</span> with --config-name</div><div class="line"></div><div class="line">repo has been initialized <span class="keyword">in</span> /media/disk/Project/AOSP</div></pre></td></tr></table></figure></p><h2 id="疑问"><a href="#疑问" class="headerlink" title="疑问"></a>疑问</h2><p>如果没有指定版本，如何知道下载好的 AOSP 是什么版本？</p><p>找到<code>build/make/core/version_defaults.mk</code>文件打开，搜索<code>PLATFORM_SDK_VERSION</code>，找到了  <code>PLATFORM_SDK_VERSION := 28</code>，从 SDK 版本可以知道 AOSP 版本是 9.0，我下载的就是最新的。</p><h2 id="同步代码"><a href="#同步代码" class="headerlink" title="同步代码"></a>同步代码</h2><p>同步源码树（以后只需执行这条命令来同步）：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">repo sync</div></pre></td></tr></table></figure></p><p>然后等待下载完毕：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">正在检出文件: 100% (1709/1709), 完成.</div><div class="line">正在检出文件: 100% (9492/9492), 完成.在检出文件:   2% (251/9492)   </div><div class="line">正在检出文件: 100% (617/617), 完成.正在检出文件:  17% (106/617)   </div><div class="line">正在检出文件: 100% (15779/15779), 完成.检出文件:   7% (1251/15779)   </div><div class="line">正在检出文件: 100% (29/29), 完成.  正在检出文件:  27% (8/29)   </div><div class="line">Syncing work tree: 100% (568/568), <span class="keyword">done</span>.</div></pre></td></tr></table></figure></p><p>最后整个源码大小 27.2 G。</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://source.android.google.cn/setup/" target="_blank" rel="noopener">https://source.android.google.cn/setup/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;网上关于这块大部分教程都是无效的，因为墙的缘故，无法使用官方提供的下载链接，我这里使用了&lt;a href=&quot;https://mirrors.tuna.tsinghua.edu.cn/help/AOSP/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;清华大学的镜像&lt;/a&gt;，是能够顺利将 AOSP 下载下来。如果你还没有安装 Ubuntu，请看《&lt;a href=&quot;https://mp.weixin.qq.com/s/Z4vJoAhuiXbkbsFUHULzQg&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;VirtualBox 安装 Ubuntu&lt;/a&gt;》。&lt;/p&gt;
&lt;h1 id=&quot;下载-repo&quot;&gt;&lt;a href=&quot;#下载-repo&quot; class=&quot;headerlink&quot; title=&quot;下载 repo&quot;&gt;&lt;/a&gt;下载 repo&lt;/h1&gt;&lt;p&gt;Repo 是一款工具，可让您在 Android 环境中更轻松地使用 Git，首先需要安装 Git：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo apt-get install git&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;创建 bin，并加入 path：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;mkdir ~/bin&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;PATH=~/bin:&lt;span class=&quot;variable&quot;&gt;$PATH&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="AOSP" scheme="http://wuxiaolong.github.io/categories/AOSP/"/>
    
    
      <category term="AOSP" scheme="http://wuxiaolong.github.io/tags/AOSP/"/>
    
  </entry>
  
  <entry>
    <title>Android 8.0 自适应图标</title>
    <link href="http://wuxiaolong.github.io/2018/05/14/AdaptiveIcons/"/>
    <id>http://wuxiaolong.github.io/2018/05/14/AdaptiveIcons/</id>
    <published>2018-05-14T05:20:36.000Z</published>
    <updated>2019-04-22T14:32:22.414Z</updated>
    
    <content type="html"><![CDATA[<p>项目中遇到一个问题，Android 8.0 系统上 APP 的 icon 显示的是默认的机器人的 icon，这是什么回事？原来 Android 8.0（API 级别 26）引入了自适应启动器图标，可以在不同设备模型中显示各种形状。下面看下官方酷炫动态图：</p><p><img src="https://developer.android.google.cn/guide/practices/ui_guidelines/images/NB_Icon_Mask_Shapes_Ext_01.gif" alt="适用于自适应图标线框的各种遮罩"> <img src="https://developer.android.google.cn/guide/practices/ui_guidelines/images/NB_Icon_Mask_Shapes_Ext_02.gif" alt="适用于自适应图标的各种蒙版"><br><a id="more"></a><br><strong>图1.</strong> 自适应图标支持各种设备之间不同的掩码。</p><p>可以通过定义 2 层来控制自适应启动器图标的外观，包括背景和前景。您必须提供图标图层作为可绘图，图标轮廓周围不能有蒙版或背景阴影。</p><p><img src="https://developer.android.google.cn/guide/practices/ui_guidelines/images/NB_Icon_Layers_3D_03_ext.gif" alt="创建自适应图标的等距插图"></p><p><strong>图2.</strong> 自适应图标使用 2 个图层和 1 个蒙版进行定义。</p><p>在 Android 7.1（API级别25）及更早版本中，启动器图标大小为 48 x 48 dp。必须使用以下准则来调整图标图层的大小：</p><ul><li>两层的尺寸必须为 108 x 108 dp。</li><li>图标的内部 72 x 72 dp 出现在蒙版视口内。</li><li>系统会在四面各留出 18 dp，以产生有趣的视觉效果，如视差或脉冲。</li></ul><p>我验证了，不是这些尺寸也是可以的，但我们还是严格按照这个准则来吧。</p><p><img src="https://developer.android.google.cn/guide/practices/ui_guidelines/images/Single_Icon_Parallax_Demo_01_2x_ext.gif" alt="适用于自适应图标的视差演示"> <img src="https://developer.android.google.cn/guide/practices/ui_guidelines/images/Single_Icon_Pickup_Drop_01_2x_ext.gif" alt="拾取动画演示应用于自适应图标"></p><p><strong>图3.</strong> 自适应图标支持各种视觉效果。</p><p><strong>注意：</strong> 如果您没有使用必要的图层更新启动器图标，则该图标与系统 UI 显示的其他图标看起来不一致，并且不支持视觉效果。</p><h1 id="用-XML-创建自适应图标"><a href="#用-XML-创建自适应图标" class="headerlink" title="用 XML 创建自适应图标"></a>用 XML 创建自适应图标</h1><p>我们首先创建一个 Sample 项目，如图：<br><img src="http://wuxiaolong.me/images/AdaptiveIcons1.png" alt=""></p><p>比以往多一个 res/mipmap-anydpi-v26 文件，打开，有背景和前景。</p><p>ic_launcher_background.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">vector</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">    <span class="attr">android:width</span>=<span class="string">"108dp"</span></div><div class="line">    <span class="attr">android:height</span>=<span class="string">"108dp"</span></div><div class="line">    <span class="attr">android:viewportHeight</span>=<span class="string">"108"</span></div><div class="line">    <span class="attr">android:viewportWidth</span>=<span class="string">"108"</span>&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">path</span></span></div><div class="line">        <span class="attr">android:fillColor</span>=<span class="string">"#26A69A"</span></div><div class="line">        <span class="attr">android:pathData</span>=<span class="string">"M0,0h108v108h-108z"</span> /&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">path</span></span></div><div class="line">        <span class="attr">android:fillColor</span>=<span class="string">"#00000000"</span></div><div class="line">        <span class="attr">android:pathData</span>=<span class="string">"M9,0L9,108"</span></div><div class="line">        <span class="attr">android:strokeColor</span>=<span class="string">"#33FFFFFF"</span></div><div class="line">        <span class="attr">android:strokeWidth</span>=<span class="string">"0.8"</span> /&gt;</div><div class="line">    <span class="comment">&lt;!--省略部分代码--&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">vector</span>&gt;</span></div></pre></td></tr></table></figure></p><p>ic_launcher_foreground.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">vector</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">    <span class="attr">xmlns:aapt</span>=<span class="string">"http://schemas.android.com/aapt"</span></div><div class="line">    <span class="attr">android:width</span>=<span class="string">"108dp"</span></div><div class="line">    <span class="attr">android:height</span>=<span class="string">"108dp"</span></div><div class="line">    <span class="attr">android:viewportHeight</span>=<span class="string">"108"</span></div><div class="line">    <span class="attr">android:viewportWidth</span>=<span class="string">"108"</span>&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">path</span></span></div><div class="line">        <span class="attr">android:fillType</span>=<span class="string">"evenOdd"</span></div><div class="line">        <span class="attr">android:pathData</span>=<span class="string">"M32,64C32,64 38.39,52.99 44.13,50.95C51.37,48.37 70.14,49.57 70.14,49.57L108.26,87.69L108,109.01L75.97,107.97L32,64Z"</span></div><div class="line">        <span class="attr">android:strokeColor</span>=<span class="string">"#00000000"</span></div><div class="line">        <span class="attr">android:strokeWidth</span>=<span class="string">"1"</span>&gt;</div><div class="line">        <span class="tag">&lt;<span class="name">aapt:attr</span> <span class="attr">name</span>=<span class="string">"android:fillColor"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">gradient</span></span></div><div class="line">                <span class="attr">android:endX</span>=<span class="string">"78.5885"</span></div><div class="line">                <span class="attr">android:endY</span>=<span class="string">"90.9159"</span></div><div class="line">                <span class="attr">android:startX</span>=<span class="string">"48.7653"</span></div><div class="line">                <span class="attr">android:startY</span>=<span class="string">"61.0927"</span></div><div class="line">                <span class="attr">android:type</span>=<span class="string">"linear"</span>&gt;</div><div class="line">                <span class="tag">&lt;<span class="name">item</span></span></div><div class="line">                    <span class="attr">android:color</span>=<span class="string">"#44000000"</span></div><div class="line">                    <span class="attr">android:offset</span>=<span class="string">"0.0"</span> /&gt;</div><div class="line">                <span class="tag">&lt;<span class="name">item</span></span></div><div class="line">                    <span class="attr">android:color</span>=<span class="string">"#00000000"</span></div><div class="line">                    <span class="attr">android:offset</span>=<span class="string">"1.0"</span> /&gt;</div><div class="line">            <span class="tag">&lt;/<span class="name">gradient</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">aapt:attr</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">path</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!--省略部分代码--&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">vector</span>&gt;</span></div></pre></td></tr></table></figure></p><p>它们都是 vector，<code>&lt;foreground&gt;</code>和<code>&lt;background&gt;</code> 是支持<code>android:drawable</code>属性，我直接换成 ic_launcher_background.png 和 ic_launcher_foreground.png，<code>&lt;foreground&gt;</code>和<code>&lt;background&gt;</code>也支持<code>@color/资源名</code>。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">adaptive-icon</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!--&lt;background android:drawable="@color/colorAccent" /&gt;--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">background</span> <span class="attr">android:drawable</span>=<span class="string">"@drawable/ic_launcher_background"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">foreground</span> <span class="attr">android:drawable</span>=<span class="string">"@drawable/ic_launcher_foreground"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">adaptive-icon</span>&gt;</span></div></pre></td></tr></table></figure></p><p>然后清单使用<code>android:icon</code> 属性以指定可绘制资源，还可以使用该<code>android:roundIcon</code> 属性定义图标可绘制资源。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">application</span></span></div><div class="line">    …</div><div class="line">    <span class="attr">android:icon</span>=<span class="string">"@mipmap/ic_launcher"</span></div><div class="line">    <span class="attr">android:roundIcon</span>=<span class="string">"@mipmap/ic_launcher_round"</span></div><div class="line">    …&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">application</span>&gt;</span></div></pre></td></tr></table></figure></p><p>如果要将常规自适应启动器图标应用于快捷方式的相同蒙版和视觉效果，使用以下：</p><ul><li>对于静态快捷方式，请使用该<code>&lt;adaptive-icon&gt;</code>元素。</li><li>对于动态快捷方式，请在<code>createWithAdaptiveBitmap()</code> 创建方法时调用该 方法。</li></ul><p>大功告成，Android 8.0 上能自适应，以下是默认的图标。</p><p>注意：Android Studio 3.0 以下的编译器无法找到 adaptive-icon 标签，这点未验证。</p><h1 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h1><p>公众号「吴小龙同学」回复：AdaptiveIconsSample，获得完整 Sample 代码。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;项目中遇到一个问题，Android 8.0 系统上 APP 的 icon 显示的是默认的机器人的 icon，这是什么回事？原来 Android 8.0（API 级别 26）引入了自适应启动器图标，可以在不同设备模型中显示各种形状。下面看下官方酷炫动态图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://developer.android.google.cn/guide/practices/ui_guidelines/images/NB_Icon_Mask_Shapes_Ext_01.gif&quot; alt=&quot;适用于自适应图标线框的各种遮罩&quot;&gt; &lt;img src=&quot;https://developer.android.google.cn/guide/practices/ui_guidelines/images/NB_Icon_Mask_Shapes_Ext_02.gif&quot; alt=&quot;适用于自适应图标的各种蒙版&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Adaptive Icons" scheme="http://wuxiaolong.github.io/categories/Adaptive-Icons/"/>
    
    
      <category term="Adaptive Icons" scheme="http://wuxiaolong.github.io/tags/Adaptive-Icons/"/>
    
  </entry>
  
  <entry>
    <title>Android 从 Web 唤起 APP</title>
    <link href="http://wuxiaolong.github.io/2018/04/04/web2app/"/>
    <id>http://wuxiaolong.github.io/2018/04/04/web2app/</id>
    <published>2018-04-04T13:58:23.000Z</published>
    <updated>2019-04-22T14:30:50.526Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><img src="http://wuxiaolong.me/images/WebToAPP2.png" alt=""><br>知乎在手机浏览器打开，会有个 App 内打开的按钮，点击直接打开且跳转到该详情页，是不是有点神奇，是如何做到的呢？<br><a id="more"></a></p><h1 id="效果预览"><a href="#效果预览" class="headerlink" title="效果预览"></a>效果预览</h1><p><img src="http://wuxiaolong.me/images/WebToAPP0.gif" alt=""></p><h1 id="Uri-Scheme"><a href="#Uri-Scheme" class="headerlink" title="Uri Scheme"></a>Uri Scheme</h1><h2 id="配置-intent-filter"><a href="#配置-intent-filter" class="headerlink" title="配置 intent-filter"></a>配置 intent-filter</h2><p>AndroidManifest.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">".MainActivity"</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 需要添加下面的intent-filter配置 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.VIEW"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"android.intent.category.DEFAULT"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"android.intent.category.BROWSABLE"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">data</span></span></div><div class="line">            <span class="attr">android:host</span>=<span class="string">"myhost"</span></div><div class="line">            <span class="attr">android:path</span>=<span class="string">"/main"</span></div><div class="line">            <span class="attr">android:port</span>=<span class="string">"1024"</span></div><div class="line">            <span class="attr">android:scheme</span>=<span class="string">"myscheme"</span> /&gt;</div><div class="line">    <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></div></pre></td></tr></table></figure></p><h2 id="测试网页"><a href="#测试网页" class="headerlink" title="测试网页"></a>测试网页</h2><p>main 下新建 assets 文件，写了简单的 Html 网页用于 WebView 展示，来进行测试。</p><p>index.html：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>这是一个 WebView<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"market://details?id=com.tencent.mm"</span>&gt;</span>open app with market<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"myscheme://myhost:1024/main?key1=value1&amp;key2=value2"</span>&gt;</span>open app with Uri Scheme<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p><p>Web View 加载：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">webView.loadUrl(<span class="string">"file:///android_asset/index.html"</span>);</div></pre></td></tr></table></figure></p><h2 id="目标页面"><a href="#目标页面" class="headerlink" title="目标页面"></a>目标页面</h2><p>接受参数，做相应的处理。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">Intent intent = getIntent();</div><div class="line"><span class="keyword">if</span> (<span class="keyword">null</span> != intent &amp;&amp; <span class="keyword">null</span> != intent.getData()) &#123;</div><div class="line">    <span class="comment">// uri 就相当于 web 页面中的链接</span></div><div class="line">    Uri uri = intent.getData();</div><div class="line">    Log.e(TAG, <span class="string">"uri="</span> +uri);</div><div class="line">    String scheme = uri.getScheme();</div><div class="line">    String host = uri.getHost();</div><div class="line">    <span class="keyword">int</span> port = uri.getPort();</div><div class="line">    String path = uri.getPath();</div><div class="line">    String key1 = uri.getQueryParameter(<span class="string">"key1"</span>);</div><div class="line">    String key2 = uri.getQueryParameter(<span class="string">"key2"</span>);</div><div class="line">    Log.e(TAG, <span class="string">"scheme="</span> + scheme + <span class="string">",host="</span> + host</div><div class="line">            + <span class="string">",port="</span> + port + <span class="string">",path="</span> + path</div><div class="line">            + <span class="string">",query="</span> + uri.getQuery()</div><div class="line">            + <span class="string">",key1="</span> + key1 + <span class="string">"，key2="</span> + key2);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>打印消息如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">uri=myscheme:<span class="comment">//myhost:1024/main?key1=value1&amp;key2=value2</span></div><div class="line">scheme=myscheme,host=myhost,port=<span class="number">1024</span>,path=/main,query=key1=value1&amp;key2=value2,key1=value1，key2=value2</div></pre></td></tr></table></figure></p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>myscheme://myhost:1024/main?key1=value1&amp;key2=value2，通过一个链接，为什么能启动相应的 APP 呢？<a href="http://johnnyshieh.me/posts/web-evoke-app/" target="_blank" rel="noopener">Web 唤起 Android app 的实现及原理</a>，一文说到关键代码在 Android 6.0 的原生浏览器的 shouldOverrideUrlLoading 方法，核心实现在 <a href="http://androidxref.com/6.0.1_r10/xref/packages/apps/Browser/src/com/android/browser/UrlHandler.java" target="_blank" rel="noopener">UrlHandler</a> 这个类中。代码如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">final</span> <span class="keyword">static</span> String SCHEME_WTAI = <span class="string">"wtai://wp/"</span>;</div><div class="line"><span class="keyword">final</span> <span class="keyword">static</span> String SCHEME_WTAI_MC = <span class="string">"wtai://wp/mc;"</span>;</div><div class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">shouldOverrideUrlLoading</span><span class="params">(Tab tab, WebView view, String url)</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (view.isPrivateBrowsingEnabled()) &#123;</div><div class="line">        <span class="comment">// Don't allow urls to leave the browser app when in</span></div><div class="line">        <span class="comment">// private browsing mode</span></div><div class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (url.startsWith(SCHEME_WTAI)) &#123;</div><div class="line">        <span class="comment">// wtai://wp/mc;number</span></div><div class="line">        <span class="comment">// number=string(phone-number)</span></div><div class="line">        <span class="keyword">if</span> (url.startsWith(SCHEME_WTAI_MC)) &#123;</div><div class="line">            Intent intent = <span class="keyword">new</span> Intent(Intent.ACTION_VIEW,</div><div class="line">                    Uri.parse(WebView.SCHEME_TEL +</div><div class="line">                            url.substring(SCHEME_WTAI_MC.length())));</div><div class="line">            mActivity.startActivity(intent);</div><div class="line">            <span class="comment">// before leaving BrowserActivity, close the empty child tab.</span></div><div class="line">            <span class="comment">// If a new tab is created through JavaScript open to load this</span></div><div class="line">            <span class="comment">// url, we would like to close it as we will load this url in a</span></div><div class="line">            <span class="comment">// different Activity.</span></div><div class="line">            mController.closeEmptyTab();</div><div class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">//……</span></div><div class="line">    &#125;</div></pre></td></tr></table></figure></p><h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><p>公众号「吴小龙同学」回复「SchemeSample」，获取这次练习的完整示例。</p><h1 id="Deep-Links"><a href="#Deep-Links" class="headerlink" title="Deep Links"></a>Deep Links</h1><p><img src="http://wuxiaolong.me/images/WebToAPP1.png" alt=""></p><p>如图，在 Android M 之前，如果点击一个链接有多个 APP 符合，会弹出一个对话框，询问用户使用哪个应用打开 － 包括浏览器应用。谷歌在Android M 上实现了一个自动认证（auto-verify）机制，让开发者可以避开这个弹出框，使用户不必去选择一个列表，直接跳转到他们的 APP。</p><h1 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h1><p><a href="https://github.com/hehonghui/android-tech-frontier/blob/master/issue-15/Android-M%E7%9A%84App-Links%E5%AE%9E%E7%8E%B0%E8%AF%A6%E8%A7%A3.md" target="_blank" rel="noopener">Android M的App Links实现详解</a></p><p><a href="http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2015/0718/3200.html" target="_blank" rel="noopener">Android M App Links: 实现, 缺陷以及解决办法</a></p><p>我没有验证，因为我玩不起来，有条件更新下 Deep Links 这块内容，可以自己搭个本地服务器。</p><h2 id="弊端"><a href="#弊端" class="headerlink" title="弊端"></a>弊端</h2><h3 id="需要-Android-M"><a href="#需要-Android-M" class="headerlink" title="需要 Android M"></a>需要 Android M</h3><p>需要 Android 6.0（minSdkVersion 级别23）及更高版本上的才能使用。</p><h3 id="well-known-assetlinks-json"><a href="#well-known-assetlinks-json" class="headerlink" title=".well-known/assetlinks.json"></a>.well-known/assetlinks.json</h3><p>开发者必须维护一个与app相关联的网站，通过在以下位置托管数字资产链接 JSON 文件来声明您的网站与您的意图过滤器之间的关系：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">https://domain.name/.well-known/assetlinks.json</div></pre></td></tr></table></figure><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://www.jianshu.com/p/1cd02fe1810f" target="_blank" rel="noopener">Android 使用Scheme实现从网页启动APP</a></p><p><a href="http://blog.zhaiyifan.cn/2016/02/04/deeplink-intro/" target="_blank" rel="noopener">Deep Link是什么</a></p><p><a href="https://segmentfault.com/a/1190000006101709" target="_blank" rel="noopener">Android移动开发者必须知道的Deep Linking技术</a></p><p><a href="https://developer.android.com/training/app-links/index.html" target="_blank" rel="noopener">Handling Android App Links</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;http://wuxiaolong.me/images/WebToAPP2.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;知乎在手机浏览器打开，会有个 App 内打开的按钮，点击直接打开且跳转到该详情页，是不是有点神奇，是如何做到的呢？&lt;br&gt;
    
    </summary>
    
      <category term="App Links" scheme="http://wuxiaolong.github.io/categories/App-Links/"/>
    
    
      <category term="App Links" scheme="http://wuxiaolong.github.io/tags/App-Links/"/>
    
  </entry>
  
  <entry>
    <title>Flutter 初尝：从 Java 无缝过渡</title>
    <link href="http://wuxiaolong.github.io/2018/03/08/Flutter/"/>
    <id>http://wuxiaolong.github.io/2018/03/08/Flutter/</id>
    <published>2018-03-08T09:04:12.000Z</published>
    <updated>2019-04-22T14:31:50.992Z</updated>
    
    <content type="html"><![CDATA[<h1 id="准备阶段"><a href="#准备阶段" class="headerlink" title="准备阶段"></a>准备阶段</h1><h2 id="下载-Flutter-SDK"><a href="#下载-Flutter-SDK" class="headerlink" title="下载 Flutter SDK"></a>下载 Flutter SDK</h2><p>如果不能科学上网，可以声明 PUB_HOSTED_URL 和 FLUTTER_STORAGE_BASE_URL 两个环境变量，执行如下两行命令，是为了让 Flutter 在安装过程中使用国内的镜像：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">export</span> PUB_HOSTED_URL=https://pub.flutter-io.cn</div><div class="line"><span class="built_in">export</span> FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn</div></pre></td></tr></table></figure></p><p>新建 Flutter 文件夹，克隆 Flutter SDK：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">clone</span> -b beta https://github.com/flutter/flutter.git</div></pre></td></tr></table></figure></p><a id="more"></a><h2 id="配置-Flutter-环境"><a href="#配置-Flutter-环境" class="headerlink" title="配置 Flutter 环境"></a>配置 Flutter 环境</h2><p>我是 Mac 系统，Flutter SDK 下载完后的路径：Users/wuxiaolong/Flutter/flutter/ 。</p><h3 id="在命令行下，进入用户目录"><a href="#在命令行下，进入用户目录" class="headerlink" title="在命令行下，进入用户目录"></a>在命令行下，进入用户目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> <span class="variable">$HOME</span></div></pre></td></tr></table></figure><h3 id="打开-bash-profile文件"><a href="#打开-bash-profile文件" class="headerlink" title="打开.bash_profile文件"></a>打开.bash_profile文件</h3><p>执行命令打开文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">open -e .bash_profile</div></pre></td></tr></table></figure></p><p>打开文件后，添加 Flutter SDK 安装的路径：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">export</span> PATH=<span class="variable">$&#123;PATH&#125;</span>:/Users/wuxiaolong/Flutter/flutter/bin:<span class="variable">$PATH</span></div><div class="line">`</div></pre></td></tr></table></figure></p><h3 id="更新刚配置的环境变量"><a href="#更新刚配置的环境变量" class="headerlink" title="更新刚配置的环境变量"></a>更新刚配置的环境变量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">source</span> .bash_profile</div></pre></td></tr></table></figure><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><p>终端直接输入  flutter，没有提示该命令找不到，则配置成功。</p><h2 id="flutter-doctor"><a href="#flutter-doctor" class="headerlink" title="flutter doctor"></a>flutter doctor</h2><p>命令行输入<code>flutter doctor</code>，安装 Futter 剩余依赖项。</p><h2 id="安装-Flutter-和-Dart-插件"><a href="#安装-Flutter-和-Dart-插件" class="headerlink" title="安装 Flutter 和 Dart 插件"></a>安装 Flutter 和 Dart 插件</h2><p>启动 Android Studio，搜索 Flutter 插件并单击 install，系统提示您安装 Dart 插件，点击 Yes 安装即可。</p><p><strong>提示</strong>：安装 Dart 插件可能会提示下载失败，多试几次。</p><h2 id="第一个项目"><a href="#第一个项目" class="headerlink" title="第一个项目"></a>第一个项目</h2><p>Android Studio - File - New - New Flutter Project，等待创建成功后，运行效果如下：<br><img src="https://upload-images.jianshu.io/upload_images/695365-3e078c4445487ce5?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp" alt=""></p><h1 id="Dart-基本语法"><a href="#Dart-基本语法" class="headerlink" title="Dart 基本语法"></a>Dart 基本语法</h1><p>Flutter 开发语言是 Dart，这个语言相信我们做原生 Android 的都能看懂，我在学习过程，感觉这不就是 Java 嘛，我直接按照 Java 思维去写，完全没问题。</p><ol><li><p>基础数据类型有 int、double、bool、String、List（数组）、Map；</p></li><li><p>声明变量可以使用 var，也可以使用 const 和 final；</p></li><li><p>const 和 final 定义的都是常量，值不能改变，并且在声明的时候就必须初始化，这是可以省略 var 或者其他类型；</p></li><li><p>函数可以有可选参数；</p></li><li><p>if-else、for 循环、while 循环、switch-case、try-catch 等知识与 Java  类似；</p></li></ol><p>更多详见官网：<a href="https://www.dartlang.org/" target="_blank" rel="noopener">https://www.dartlang.org/</a></p><h1 id="练手"><a href="#练手" class="headerlink" title="练手"></a>练手</h1><p>这里使用了豆瓣电影的 API，功能很简单，就一个列表和详情。</p><h2 id="效果预览"><a href="#效果预览" class="headerlink" title="效果预览"></a>效果预览</h2><p><img src="http://wuxiaolong.me/images/Flutter3.gif" alt=""></p><h2 id="遇到问题"><a href="#遇到问题" class="headerlink" title="遇到问题"></a>遇到问题</h2><p>学习新知识，第一步就是模仿，多看，多想，多实践，在这个过程我遇到一些问题：</p><ol><li><p>Flutter 怎么打印信息？<code>print(&#39;onclick&#39;);</code></p></li><li><p>Flutter 如何看报错信息？在 Android Studio 底栏 Run 非 LogCat；</p></li><li><p>网络请求怎么写？</p></li><li><p>接口数据如何解析的？</p></li><li><p>如何一进页面就请求接口？</p></li><li><p>网络图片怎么显示？</p></li><li><p>ListView 官网介绍的 Item 是通用的，如何定制？</p></li><li><p>跳转页面如何传参？传参后怎么用？</p></li></ol><p>等等，遇到一个问题，消灭一个。</p><h1 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h1><h2 id="源码地址"><a href="#源码地址" class="headerlink" title="源码地址"></a>源码地址</h2><p><a href="https://github.com/WuXiaolong/flutter_movie" target="_blank" rel="noopener">https://github.com/WuXiaolong/flutter_movie</a> ，该项目起始页面在 lib/main.dart，注意的点我也都加了注释，去吧，学习还是要靠自己，踏出第一步，实践起来。</p><h2 id="如何导入-Flutter-项目"><a href="#如何导入-Flutter-项目" class="headerlink" title="如何导入 Flutter 项目"></a>如何导入 Flutter 项目</h2><h3 id="下载-Flutter-项目"><a href="#下载-Flutter-项目" class="headerlink" title="下载 Flutter 项目"></a>下载 Flutter 项目</h3><p>下载完 Flutter 项目，直接 Android Studio - Open。</p><h3 id="配置-Flutter-SDK"><a href="#配置-Flutter-SDK" class="headerlink" title="配置 Flutter SDK"></a>配置 Flutter SDK</h3><p><img src="http://wuxiaolong.me/images/Flutter1.png" alt=""><br>如图，点击 Open Flutter setting，点击下拉按钮，选择 Flutter SDK 路径，点击 OK，会自动配置 Dart SDK 路径。</p><h3 id="pubspec-yaml-下载库"><a href="#pubspec-yaml-下载库" class="headerlink" title="pubspec.yaml 下载库"></a>pubspec.yaml 下载库</h3><p><img src="http://wuxiaolong.me/images/Flutter2.png" alt=""><br>如图，点击 Packages get，下载项目用到的依赖库，编译完成应该就能正常运行了。</p><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><ol><li><p>还是被 Flutter 惊艳到了，重拾当初学习 Android 的热情，却一不小心，我的肩痛又开始了；</p></li><li><p>Flutter UI 全是代码写的，不是 XML，复杂的 UI 实现有难度；</p></li><li><p>Flutter 联想功能较弱，需要先导入相应的包，才有相应的类联想；</p></li><li><p>新建了一个 package，将 dart 文件拖入，相关联包的路径会相应修改，但是我改了package 名，就无法相应修改，bug？</p></li><li><p>Flutter，我感觉可以从 Java 实现无缝过度；</p></li><li><p>I’m a iOS Developer.</p></li><li><p>Flutter 开源库远没有原生的丰富，目前还是 Beta 版，还是很值得期待，我会持续关注学习，先就酱紫吧。</p></li></ol><h1 id="相关阅读"><a href="#相关阅读" class="headerlink" title="相关阅读"></a>相关阅读</h1><p><a href="https://flutter.io/" target="_blank" rel="noopener">Flutter 官网</a></p><p><a href="http://wuxiaolong.me/2017/07/19/mac-adb-gradlew/" target="_blank" rel="noopener">Mac 配置 adb 环境、gradlew：command not found</a></p><p><a href="https://github.com/CodemateLtd/FlutterMates" target="_blank" rel="noopener">FlutterMates</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;准备阶段&quot;&gt;&lt;a href=&quot;#准备阶段&quot; class=&quot;headerlink&quot; title=&quot;准备阶段&quot;&gt;&lt;/a&gt;准备阶段&lt;/h1&gt;&lt;h2 id=&quot;下载-Flutter-SDK&quot;&gt;&lt;a href=&quot;#下载-Flutter-SDK&quot; class=&quot;headerlink&quot; title=&quot;下载 Flutter SDK&quot;&gt;&lt;/a&gt;下载 Flutter SDK&lt;/h2&gt;&lt;p&gt;如果不能科学上网，可以声明 PUB_HOSTED_URL 和 FLUTTER_STORAGE_BASE_URL 两个环境变量，执行如下两行命令，是为了让 Flutter 在安装过程中使用国内的镜像：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; PUB_HOSTED_URL=https://pub.flutter-io.cn&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;新建 Flutter 文件夹，克隆 Flutter SDK：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;git &lt;span class=&quot;built_in&quot;&gt;clone&lt;/span&gt; -b beta https://github.com/flutter/flutter.git&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Flutter" scheme="http://wuxiaolong.github.io/categories/Flutter/"/>
    
    
      <category term="Flutter" scheme="http://wuxiaolong.github.io/tags/Flutter/"/>
    
  </entry>
  
  <entry>
    <title>Python 爬虫实战（二）：使用 requests-html</title>
    <link href="http://wuxiaolong.github.io/2018/02/25/PythonCrawler2/"/>
    <id>http://wuxiaolong.github.io/2018/02/25/PythonCrawler2/</id>
    <published>2018-02-25T14:33:46.000Z</published>
    <updated>2019-04-22T14:31:08.568Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://wuxiaolong.me/2017/12/10/PythonCrawler1/" target="_blank" rel="noopener">Python 爬虫实战（一）：使用 requests 和 BeautifulSoup</a>，我们使用了 requests 做网络请求，拿到网页数据再用 BeautifulSoup 解析，就在前不久，<a href="https://github.com/requests/requests" target="_blank" rel="noopener">requests</a> 作者 <a href="https://github.com/kennethreitz" target="_blank" rel="noopener">kennethreitz</a> 出了一个新库 <a href="https://github.com/kennethreitz/requests-html" target="_blank" rel="noopener">requests-html</a>，Pythonic HTML Parsing for Humans™，它可以用于解析 HTML 文档的。requests-html 是基于现有的框架 PyQuery、Requests、lxml 等库进行了二次封装，更加方便开发者调用。<br><a id="more"></a></p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>Mac：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip3 install requests-html</div></pre></td></tr></table></figure></p><p>Windows：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install requests-html</div></pre></td></tr></table></figure></p><h1 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h1><p><img src="http://wuxiaolong.me/images/PythonCrawler1.png" alt=""></p><p>代码撸多了，让我们看会妹纸，爬的网站我选的是 <a href="http://www.win4000.com/zt/xinggan.html" target="_blank" rel="noopener">http://www.win4000.com/zt/xinggan.html</a> ，打开网站，观察到这是个列表，图片是缩略图，要想保存图片到本地，当然需要高清大图，因此得进入列表详情，进一步解析，完整代码如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> requests_html <span class="keyword">import</span> HTMLSession</div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> time</div><div class="line"></div><div class="line">session = HTMLSession()</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 解析图片列表</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_girl_list</span><span class="params">()</span>:</span></div><div class="line">    <span class="comment"># 返回一个 response 对象</span></div><div class="line">    response = session.get(<span class="string">'http://www.win4000.com/zt/xinggan.html'</span>)  <span class="comment"># 单位秒数</span></div><div class="line"></div><div class="line">    content = response.html.find(<span class="string">'div.Left_bar'</span>, first=<span class="keyword">True</span>)</div><div class="line"></div><div class="line">    li_list = content.find(<span class="string">'li'</span>)</div><div class="line"></div><div class="line">    <span class="keyword">for</span> li <span class="keyword">in</span> li_list:</div><div class="line">        url = li.find(<span class="string">'a'</span>, first=<span class="keyword">True</span>).attrs[<span class="string">'href'</span>]</div><div class="line">        get_girl_detail(url)</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 解析图片详细</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_girl_detail</span><span class="params">(url)</span>:</span></div><div class="line">    <span class="comment"># 返回一个 response 对象</span></div><div class="line">    response = session.get(url)  <span class="comment"># 单位秒数</span></div><div class="line">    content = response.html.find(<span class="string">'div.scroll-img-cont'</span>, first=<span class="keyword">True</span>)</div><div class="line">    li_list = content.find(<span class="string">'li'</span>)</div><div class="line">    <span class="keyword">for</span> li <span class="keyword">in</span> li_list:</div><div class="line">        img_url = li.find(<span class="string">'img'</span>, first=<span class="keyword">True</span>).attrs[<span class="string">'data-original'</span>]</div><div class="line">        img_url = img_url[<span class="number">0</span>:img_url.find(<span class="string">'_'</span>)] + <span class="string">'.jpg'</span></div><div class="line">        print(img_url + <span class="string">'.jpg'</span>)</div><div class="line">        save_image(img_url)</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 保持大图</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_image</span><span class="params">(img_url)</span>:</span></div><div class="line">    img_response = requests.get(img_url)</div><div class="line">    t = int(round(time.time() * <span class="number">1000</span>))  <span class="comment"># 毫秒级时间戳</span></div><div class="line">    f = open(<span class="string">'/Users/wuxiaolong/Desktop/Girl/%d.jpg'</span> % t, <span class="string">'ab'</span>)  <span class="comment"># 存储图片，多媒体文件需要参数b（二进制文件）</span></div><div class="line">    f.write(img_response.content)  <span class="comment"># 多媒体存储content</span></div><div class="line">    f.close()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    get_girl_list()</div></pre></td></tr></table></figure></p><p>代码就这么多，是不是感觉很简单啊。</p><p><strong>说明：</strong></p><p>1、requests-html 与 BeautifulSoup 不同，可以直接通过标签来 find，一般如下：<br>标签<br>标签.someClass<br>标签#someID<br>标签[target=_blank]<br>参数 first 是 True，表示只返回 Element 找到的第一个，更多使用：<a href="http://html.python-requests.org/" target="_blank" rel="noopener">http://html.python-requests.org/</a> ；</p><p>2、这里保存本地路径 <code>/Users/wuxiaolong/Desktop/Girl/</code>我写死了，需要读者改成自己的，如果直接是文件名，保存路径将是项目目录下。</p><h1 id="遗留问题"><a href="#遗留问题" class="headerlink" title="遗留问题"></a>遗留问题</h1><p>示例所爬网站是分页的，没有做，可以定时循环来爬妹纸哦，有兴趣的读者自己玩下。</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://github.com/kennethreitz/requests-html" target="_blank" rel="noopener">requests-html</a></p><p><a href="http://blog.csdn.net/qq_31845675/article/details/79501868" target="_blank" rel="noopener">今天用了一下Requests-HTML库（Python爬虫）</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://wuxiaolong.me/2017/12/10/PythonCrawler1/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Python 爬虫实战（一）：使用 requests 和 BeautifulSoup&lt;/a&gt;，我们使用了 requests 做网络请求，拿到网页数据再用 BeautifulSoup 解析，就在前不久，&lt;a href=&quot;https://github.com/requests/requests&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;requests&lt;/a&gt; 作者 &lt;a href=&quot;https://github.com/kennethreitz&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;kennethreitz&lt;/a&gt; 出了一个新库 &lt;a href=&quot;https://github.com/kennethreitz/requests-html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;requests-html&lt;/a&gt;，Pythonic HTML Parsing for Humans™，它可以用于解析 HTML 文档的。requests-html 是基于现有的框架 PyQuery、Requests、lxml 等库进行了二次封装，更加方便开发者调用。&lt;br&gt;
    
    </summary>
    
      <category term="Python" scheme="http://wuxiaolong.github.io/categories/Python/"/>
    
    
      <category term="Python" scheme="http://wuxiaolong.github.io/tags/Python/"/>
    
  </entry>
  
</feed>
